{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "versionLabel": "Next",
          "versionPath": "/docs/next",
          "isLast": false,
          "sidebarFilePath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/sidebars.json",
          "docsDirPath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/docs",
          "mainDocId": "getting-started",
          "sidebars": {
            "docs": [
              {
                "collapsed": true,
                "type": "category",
                "label": "The Basics",
                "items": [
                  {
                    "type": "doc",
                    "id": "getting-started"
                  },
                  {
                    "type": "doc",
                    "id": "intro-react-native-components"
                  },
                  {
                    "type": "doc",
                    "id": "intro-react"
                  },
                  {
                    "type": "doc",
                    "id": "handling-text-input"
                  },
                  {
                    "type": "doc",
                    "id": "using-a-scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "using-a-listview"
                  },
                  {
                    "type": "doc",
                    "id": "troubleshooting"
                  },
                  {
                    "type": "doc",
                    "id": "platform-specific-code"
                  },
                  {
                    "type": "doc",
                    "id": "more-resources"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Environment setup",
                "items": [
                  {
                    "type": "doc",
                    "id": "environment-setup"
                  },
                  {
                    "type": "doc",
                    "id": "integration-with-existing-apps"
                  },
                  {
                    "type": "doc",
                    "id": "integration-with-android-fragment"
                  },
                  {
                    "type": "doc",
                    "id": "building-for-tv"
                  },
                  {
                    "type": "doc",
                    "id": "out-of-tree-platforms"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Workflow",
                "items": [
                  {
                    "type": "doc",
                    "id": "running-on-device"
                  },
                  {
                    "type": "doc",
                    "id": "fast-refresh"
                  },
                  {
                    "type": "doc",
                    "id": "debugging"
                  },
                  {
                    "type": "doc",
                    "id": "symbolication"
                  },
                  {
                    "type": "doc",
                    "id": "testing-overview"
                  },
                  {
                    "type": "doc",
                    "id": "libraries"
                  },
                  {
                    "type": "doc",
                    "id": "typescript"
                  },
                  {
                    "type": "doc",
                    "id": "upgrading"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Design",
                "items": [
                  {
                    "type": "doc",
                    "id": "style"
                  },
                  {
                    "type": "doc",
                    "id": "height-and-width"
                  },
                  {
                    "type": "doc",
                    "id": "flexbox"
                  },
                  {
                    "type": "doc",
                    "id": "images"
                  },
                  {
                    "type": "doc",
                    "id": "colors"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Interaction",
                "items": [
                  {
                    "type": "doc",
                    "id": "handling-touches"
                  },
                  {
                    "type": "doc",
                    "id": "navigation"
                  },
                  {
                    "type": "doc",
                    "id": "animations"
                  },
                  {
                    "type": "doc",
                    "id": "gesture-responder-system"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Inclusion",
                "items": [
                  {
                    "type": "doc",
                    "id": "accessibility"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Performance",
                "items": [
                  {
                    "type": "doc",
                    "id": "performance"
                  },
                  {
                    "type": "doc",
                    "id": "optimizing-flatlist-configuration"
                  },
                  {
                    "type": "doc",
                    "id": "ram-bundles-inline-requires"
                  },
                  {
                    "type": "doc",
                    "id": "profiling"
                  },
                  {
                    "type": "doc",
                    "id": "profile-hermes"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "JavaScript Runtime",
                "items": [
                  {
                    "type": "doc",
                    "id": "javascript-environment"
                  },
                  {
                    "type": "doc",
                    "id": "timers"
                  },
                  {
                    "type": "doc",
                    "id": "hermes"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Connectivity",
                "items": [
                  {
                    "type": "doc",
                    "id": "network"
                  },
                  {
                    "type": "doc",
                    "id": "security"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Native Modules",
                "items": [
                  {
                    "type": "doc",
                    "id": "native-modules-intro"
                  },
                  {
                    "type": "doc",
                    "id": "native-modules-android"
                  },
                  {
                    "type": "doc",
                    "id": "native-modules-ios"
                  },
                  {
                    "type": "doc",
                    "id": "native-modules-setup"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Native Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "native-components-android"
                  },
                  {
                    "type": "doc",
                    "id": "native-components-ios"
                  },
                  {
                    "type": "doc",
                    "id": "direct-manipulation"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (Android)",
                "items": [
                  {
                    "type": "doc",
                    "id": "headless-js-android"
                  },
                  {
                    "type": "doc",
                    "id": "signed-apk-android"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (iOS)",
                "items": [
                  {
                    "type": "doc",
                    "id": "linking-libraries-ios"
                  },
                  {
                    "type": "doc",
                    "id": "running-on-simulator-ios"
                  },
                  {
                    "type": "doc",
                    "id": "communication-ios"
                  },
                  {
                    "type": "doc",
                    "id": "app-extensions"
                  },
                  {
                    "type": "doc",
                    "id": "publishing-to-app-store"
                  }
                ]
              }
            ],
            "api": [
              {
                "collapsed": true,
                "type": "category",
                "label": "APIs",
                "items": [
                  {
                    "type": "doc",
                    "id": "accessibilityinfo"
                  },
                  {
                    "type": "doc",
                    "id": "alert"
                  },
                  {
                    "type": "doc",
                    "id": "animated"
                  },
                  {
                    "type": "doc",
                    "id": "animatedvalue"
                  },
                  {
                    "type": "doc",
                    "id": "animatedvaluexy"
                  },
                  {
                    "type": "doc",
                    "id": "appearance"
                  },
                  {
                    "type": "doc",
                    "id": "appregistry"
                  },
                  {
                    "type": "doc",
                    "id": "appstate"
                  },
                  {
                    "type": "doc",
                    "id": "devsettings"
                  },
                  {
                    "type": "doc",
                    "id": "dimensions"
                  },
                  {
                    "type": "doc",
                    "id": "easing"
                  },
                  {
                    "type": "doc",
                    "id": "interactionmanager"
                  },
                  {
                    "type": "doc",
                    "id": "keyboard"
                  },
                  {
                    "type": "doc",
                    "id": "layoutanimation"
                  },
                  {
                    "type": "doc",
                    "id": "linking"
                  },
                  {
                    "type": "doc",
                    "id": "panresponder"
                  },
                  {
                    "type": "doc",
                    "id": "pixelratio"
                  },
                  {
                    "type": "doc",
                    "id": "platform"
                  },
                  {
                    "type": "doc",
                    "id": "platformcolor"
                  },
                  {
                    "type": "doc",
                    "id": "share"
                  },
                  {
                    "type": "doc",
                    "id": "stylesheet"
                  },
                  {
                    "type": "doc",
                    "id": "systrace"
                  },
                  {
                    "type": "doc",
                    "id": "transforms"
                  },
                  {
                    "type": "doc",
                    "id": "vibration"
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "Hooks",
                    "items": [
                      {
                        "type": "doc",
                        "id": "usecolorscheme"
                      },
                      {
                        "type": "doc",
                        "id": "usewindowdimensions"
                      }
                    ]
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "Android APIs",
                    "items": [
                      {
                        "type": "doc",
                        "id": "backhandler"
                      },
                      {
                        "type": "doc",
                        "id": "permissionsandroid"
                      },
                      {
                        "type": "doc",
                        "id": "toastandroid"
                      }
                    ]
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "iOS APIs",
                    "items": [
                      {
                        "type": "doc",
                        "id": "actionsheetios"
                      },
                      {
                        "type": "doc",
                        "id": "dynamiccolorios"
                      },
                      {
                        "type": "doc",
                        "id": "settings"
                      }
                    ]
                  }
                ]
              }
            ],
            "components": [
              {
                "collapsed": true,
                "type": "category",
                "label": "Core Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "components-and-apis"
                  },
                  {
                    "type": "doc",
                    "id": "activityindicator"
                  },
                  {
                    "type": "doc",
                    "id": "button"
                  },
                  {
                    "type": "doc",
                    "id": "flatlist"
                  },
                  {
                    "type": "doc",
                    "id": "image"
                  },
                  {
                    "type": "doc",
                    "id": "imagebackground"
                  },
                  {
                    "type": "doc",
                    "id": "keyboardavoidingview"
                  },
                  {
                    "type": "doc",
                    "id": "modal"
                  },
                  {
                    "type": "doc",
                    "id": "pressable"
                  },
                  {
                    "type": "doc",
                    "id": "refreshcontrol"
                  },
                  {
                    "type": "doc",
                    "id": "scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "sectionlist"
                  },
                  {
                    "type": "doc",
                    "id": "statusbar"
                  },
                  {
                    "type": "doc",
                    "id": "switch"
                  },
                  {
                    "type": "doc",
                    "id": "text"
                  },
                  {
                    "type": "doc",
                    "id": "textinput"
                  },
                  {
                    "type": "doc",
                    "id": "touchablehighlight"
                  },
                  {
                    "type": "doc",
                    "id": "touchableopacity"
                  },
                  {
                    "type": "doc",
                    "id": "touchablewithoutfeedback"
                  },
                  {
                    "type": "doc",
                    "id": "view"
                  },
                  {
                    "type": "doc",
                    "id": "virtualizedlist"
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "Android Components",
                    "items": [
                      {
                        "type": "doc",
                        "id": "drawerlayoutandroid"
                      },
                      {
                        "type": "doc",
                        "id": "touchablenativefeedback"
                      }
                    ]
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "iOS Components",
                    "items": [
                      {
                        "type": "doc",
                        "id": "inputaccessoryview"
                      },
                      {
                        "type": "doc",
                        "id": "safeareaview"
                      }
                    ]
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Props",
                "items": [
                  {
                    "type": "doc",
                    "id": "image-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "layout-props"
                  },
                  {
                    "type": "doc",
                    "id": "shadow-props"
                  },
                  {
                    "type": "doc",
                    "id": "text-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "view-style-props"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Object Types",
                "items": [
                  {
                    "type": "doc",
                    "id": "layoutevent"
                  },
                  {
                    "type": "doc",
                    "id": "pressevent"
                  },
                  {
                    "type": "doc",
                    "id": "react-node"
                  },
                  {
                    "type": "doc",
                    "id": "rect"
                  },
                  {
                    "type": "doc",
                    "id": "viewtoken"
                  }
                ]
              }
            ]
          },
          "permalinkToSidebar": {
            "/docs/next/accessibility": "docs",
            "/docs/next/accessibilityinfo": "api",
            "/docs/next/actionsheetios": "api",
            "/docs/next/activityindicator": "components",
            "/docs/next/alert": "api",
            "/docs/next/animated": "api",
            "/docs/next/animatedvalue": "api",
            "/docs/next/animatedvaluexy": "api",
            "/docs/next/animations": "docs",
            "/docs/next/app-extensions": "docs",
            "/docs/next/appearance": "api",
            "/docs/next/appregistry": "api",
            "/docs/next/appstate": "api",
            "/docs/next/backhandler": "api",
            "/docs/next/building-for-tv": "docs",
            "/docs/next/button": "components",
            "/docs/next/colors": "docs",
            "/docs/next/communication-ios": "docs",
            "/docs/next/components-and-apis": "components",
            "/docs/next/debugging": "docs",
            "/docs/next/devsettings": "api",
            "/docs/next/dimensions": "api",
            "/docs/next/direct-manipulation": "docs",
            "/docs/next/drawerlayoutandroid": "components",
            "/docs/next/dynamiccolorios": "api",
            "/docs/next/easing": "api",
            "/docs/next/environment-setup": "docs",
            "/docs/next/fast-refresh": "docs",
            "/docs/next/flatlist": "components",
            "/docs/next/flexbox": "docs",
            "/docs/next/gesture-responder-system": "docs",
            "/docs/next/getting-started": "docs",
            "/docs/next/handling-text-input": "docs",
            "/docs/next/handling-touches": "docs",
            "/docs/next/headless-js-android": "docs",
            "/docs/next/height-and-width": "docs",
            "/docs/next/hermes": "docs",
            "/docs/next/image": "components",
            "/docs/next/image-style-props": "components",
            "/docs/next/imagebackground": "components",
            "/docs/next/images": "docs",
            "/docs/next/inputaccessoryview": "components",
            "/docs/next/integration-with-android-fragment": "docs",
            "/docs/next/integration-with-existing-apps": "docs",
            "/docs/next/interactionmanager": "api",
            "/docs/next/intro-react": "docs",
            "/docs/next/intro-react-native-components": "docs",
            "/docs/next/javascript-environment": "docs",
            "/docs/next/keyboard": "api",
            "/docs/next/keyboardavoidingview": "components",
            "/docs/next/layout-props": "components",
            "/docs/next/layoutanimation": "api",
            "/docs/next/layoutevent": "components",
            "/docs/next/libraries": "docs",
            "/docs/next/linking": "api",
            "/docs/next/linking-libraries-ios": "docs",
            "/docs/next/modal": "components",
            "/docs/next/more-resources": "docs",
            "/docs/next/native-components-android": "docs",
            "/docs/next/native-components-ios": "docs",
            "/docs/next/native-modules-android": "docs",
            "/docs/next/native-modules-intro": "docs",
            "/docs/next/native-modules-ios": "docs",
            "/docs/next/native-modules-setup": "docs",
            "/docs/next/navigation": "docs",
            "/docs/next/network": "docs",
            "/docs/next/optimizing-flatlist-configuration": "docs",
            "/docs/next/out-of-tree-platforms": "docs",
            "/docs/next/panresponder": "api",
            "/docs/next/performance": "docs",
            "/docs/next/permissionsandroid": "api",
            "/docs/next/pixelratio": "api",
            "/docs/next/platform": "api",
            "/docs/next/platform-specific-code": "docs",
            "/docs/next/platformcolor": "api",
            "/docs/next/pressable": "components",
            "/docs/next/pressevent": "components",
            "/docs/next/profile-hermes": "docs",
            "/docs/next/profiling": "docs",
            "/docs/next/publishing-to-app-store": "docs",
            "/docs/next/ram-bundles-inline-requires": "docs",
            "/docs/next/react-node": "components",
            "/docs/next/rect": "components",
            "/docs/next/refreshcontrol": "components",
            "/docs/next/running-on-device": "docs",
            "/docs/next/running-on-simulator-ios": "docs",
            "/docs/next/safeareaview": "components",
            "/docs/next/scrollview": "components",
            "/docs/next/sectionlist": "components",
            "/docs/next/security": "docs",
            "/docs/next/settings": "api",
            "/docs/next/shadow-props": "components",
            "/docs/next/share": "api",
            "/docs/next/signed-apk-android": "docs",
            "/docs/next/statusbar": "components",
            "/docs/next/style": "docs",
            "/docs/next/stylesheet": "api",
            "/docs/next/switch": "components",
            "/docs/next/symbolication": "docs",
            "/docs/next/systrace": "api",
            "/docs/next/testing-overview": "docs",
            "/docs/next/text": "components",
            "/docs/next/text-style-props": "components",
            "/docs/next/textinput": "components",
            "/docs/next/timers": "docs",
            "/docs/next/toastandroid": "api",
            "/docs/next/touchablehighlight": "components",
            "/docs/next/touchablenativefeedback": "components",
            "/docs/next/touchableopacity": "components",
            "/docs/next/touchablewithoutfeedback": "components",
            "/docs/next/transforms": "api",
            "/docs/next/troubleshooting": "docs",
            "/docs/next/typescript": "docs",
            "/docs/next/upgrading": "docs",
            "/docs/next/usecolorscheme": "api",
            "/docs/next/usewindowdimensions": "api",
            "/docs/next/using-a-listview": "docs",
            "/docs/next/using-a-scrollview": "docs",
            "/docs/next/vibration": "api",
            "/docs/next/view": "components",
            "/docs/next/view-style-props": "components",
            "/docs/next/viewtoken": "components",
            "/docs/next/virtualizedlist": "components"
          },
          "docs": [
            {
              "unversionedId": "_getting-started-linux-android",
              "id": "_getting-started-linux-android",
              "isDocsHomePage": false,
              "title": "_getting-started-linux-android",
              "description": "Installing dependencies",
              "source": "@site/../docs/_getting-started-linux-android.md",
              "slug": "/_getting-started-linux-android",
              "permalink": "/docs/next/_getting-started-linux-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_getting-started-linux-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-android",
              "id": "_getting-started-macos-android",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-android",
              "description": "Installing dependencies",
              "source": "@site/../docs/_getting-started-macos-android.md",
              "slug": "/_getting-started-macos-android",
              "permalink": "/docs/next/_getting-started-macos-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_getting-started-macos-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-ios",
              "id": "_getting-started-macos-ios",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-ios",
              "description": "Installing dependencies",
              "source": "@site/../docs/_getting-started-macos-ios.md",
              "slug": "/_getting-started-macos-ios",
              "permalink": "/docs/next/_getting-started-macos-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_getting-started-macos-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-windows-android",
              "id": "_getting-started-windows-android",
              "isDocsHomePage": false,
              "title": "_getting-started-windows-android",
              "description": "Installing dependencies",
              "source": "@site/../docs/_getting-started-windows-android.md",
              "slug": "/_getting-started-windows-android",
              "permalink": "/docs/next/_getting-started-windows-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_getting-started-windows-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-java",
              "id": "_integration-with-exisiting-apps-java",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-java",
              "description": "Key Concepts",
              "source": "@site/../docs/_integration-with-exisiting-apps-java.md",
              "slug": "/_integration-with-exisiting-apps-java",
              "permalink": "/docs/next/_integration-with-exisiting-apps-java",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_integration-with-exisiting-apps-java.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-objc",
              "id": "_integration-with-exisiting-apps-objc",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-objc",
              "description": "Key Concepts",
              "source": "@site/../docs/_integration-with-exisiting-apps-objc.md",
              "slug": "/_integration-with-exisiting-apps-objc",
              "permalink": "/docs/next/_integration-with-exisiting-apps-objc",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_integration-with-exisiting-apps-objc.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-swift",
              "id": "_integration-with-exisiting-apps-swift",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-swift",
              "description": "Key Concepts",
              "source": "@site/../docs/_integration-with-exisiting-apps-swift.md",
              "slug": "/_integration-with-exisiting-apps-swift",
              "permalink": "/docs/next/_integration-with-exisiting-apps-swift",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/_integration-with-exisiting-apps-swift.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "accessibility",
              "id": "accessibility",
              "isDocsHomePage": false,
              "title": "Accessibility",
              "description": "Create mobile apps accessible to assistive technology with React Native's suite of APIs designed to work with Android and iOS.",
              "source": "@site/../docs/accessibility.md",
              "slug": "/accessibility",
              "permalink": "/docs/next/accessibility",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/accessibility.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Gesture Responder System",
                "permalink": "/docs/next/gesture-responder-system"
              },
              "next": {
                "title": "Performance Overview",
                "permalink": "/docs/next/performance"
              }
            },
            {
              "unversionedId": "accessibilityinfo",
              "id": "accessibilityinfo",
              "isDocsHomePage": false,
              "title": "AccessibilityInfo",
              "description": "Sometimes it's useful to know whether or not the device has a screen reader that is currently active. The AccessibilityInfo API is designed for this purpose. You can use it to query the current state of the screen reader as well as to register to be notified when the state of the screen reader changes.",
              "source": "@site/../docs/accessibilityinfo.md",
              "slug": "/accessibilityinfo",
              "permalink": "/docs/next/accessibilityinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/accessibilityinfo.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "next": {
                "title": "Alert",
                "permalink": "/docs/next/alert"
              }
            },
            {
              "unversionedId": "actionsheetios",
              "id": "actionsheetios",
              "isDocsHomePage": false,
              "title": "ActionSheetIOS",
              "description": "Displays native to iOS Action Sheet component.",
              "source": "@site/../docs/actionsheetios.md",
              "slug": "/actionsheetios",
              "permalink": "/docs/next/actionsheetios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/actionsheetios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "ToastAndroid",
                "permalink": "/docs/next/toastandroid"
              },
              "next": {
                "title": "DynamicColorIOS",
                "permalink": "/docs/next/dynamiccolorios"
              }
            },
            {
              "unversionedId": "activityindicator",
              "id": "activityindicator",
              "isDocsHomePage": false,
              "title": "ActivityIndicator",
              "description": "Displays a circular loading indicator.",
              "source": "@site/../docs/activityindicator.md",
              "slug": "/activityindicator",
              "permalink": "/docs/next/activityindicator",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/activityindicator.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Core Components and APIs",
                "permalink": "/docs/next/components-and-apis"
              },
              "next": {
                "title": "Button",
                "permalink": "/docs/next/button"
              }
            },
            {
              "unversionedId": "alert",
              "id": "alert",
              "isDocsHomePage": false,
              "title": "Alert",
              "description": "Launches an alert dialog with the specified title and message.",
              "source": "@site/../docs/alert.md",
              "slug": "/alert",
              "permalink": "/docs/next/alert",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/alert.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "AccessibilityInfo",
                "permalink": "/docs/next/accessibilityinfo"
              },
              "next": {
                "title": "Animated",
                "permalink": "/docs/next/animated"
              }
            },
            {
              "unversionedId": "alertios",
              "id": "alertios",
              "isDocsHomePage": false,
              "title": "🚧 AlertIOS",
              "description": "Deprecated. Use Alert instead.",
              "source": "@site/../docs/alertios.md",
              "slug": "/alertios",
              "permalink": "/docs/next/alertios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/alertios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animated",
              "id": "animated",
              "isDocsHomePage": false,
              "title": "Animated",
              "description": "The Animated library is designed to make animations fluid, powerful, and painless to build and maintain. Animated focuses on declarative relationships between inputs and outputs, configurable transforms in between, and start/stop methods to control time-based animation execution.",
              "source": "@site/../docs/animated.md",
              "slug": "/animated",
              "permalink": "/docs/next/animated",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/animated.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Alert",
                "permalink": "/docs/next/alert"
              },
              "next": {
                "title": "Animated.Value",
                "permalink": "/docs/next/animatedvalue"
              }
            },
            {
              "unversionedId": "animatedvalue",
              "id": "animatedvalue",
              "isDocsHomePage": false,
              "title": "Animated.Value",
              "description": "Standard value for driving animations. One Animated.Value can drive multiple properties in a synchronized fashion, but can only be driven by one mechanism at a time. Using a new mechanism (e.g. starting a new animation, or calling setValue) will stop any previous ones.",
              "source": "@site/../docs/animatedvalue.md",
              "slug": "/animatedvalue",
              "permalink": "/docs/next/animatedvalue",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/animatedvalue.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Animated",
                "permalink": "/docs/next/animated"
              },
              "next": {
                "title": "Animated.ValueXY",
                "permalink": "/docs/next/animatedvaluexy"
              }
            },
            {
              "unversionedId": "animatedvaluexy",
              "id": "animatedvaluexy",
              "isDocsHomePage": false,
              "title": "Animated.ValueXY",
              "description": "2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal Animated.Value, but multiplexed. Contains two regular Animated.Values under the hood.",
              "source": "@site/../docs/animatedvaluexy.md",
              "slug": "/animatedvaluexy",
              "permalink": "/docs/next/animatedvaluexy",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/animatedvaluexy.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Animated.Value",
                "permalink": "/docs/next/animatedvalue"
              },
              "next": {
                "title": "Appearance",
                "permalink": "/docs/next/appearance"
              }
            },
            {
              "unversionedId": "animations",
              "id": "animations",
              "isDocsHomePage": false,
              "title": "Animations",
              "description": "Animations are very important to create a great user experience. Stationary objects must overcome inertia as they start moving. Objects in motion have momentum and rarely come to a stop immediately. Animations allow you to convey physically believable motion in your interface.",
              "source": "@site/../docs/animations.md",
              "slug": "/animations",
              "permalink": "/docs/next/animations",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/animations.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/next/navigation"
              },
              "next": {
                "title": "Gesture Responder System",
                "permalink": "/docs/next/gesture-responder-system"
              }
            },
            {
              "unversionedId": "app-extensions",
              "id": "app-extensions",
              "isDocsHomePage": false,
              "title": "App Extensions",
              "description": "App extensions let you provide custom functionality and content outside of your main app. There are different types of app extensions on iOS, and they are all covered in the App Extension Programming Guide. In this guide, we'll briefly cover how you may take advantage of app extensions on iOS.",
              "source": "@site/../docs/app-extensions.md",
              "slug": "/app-extensions",
              "permalink": "/docs/next/app-extensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/app-extensions.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/next/communication-ios"
              },
              "next": {
                "title": "Publishing to Apple App Store",
                "permalink": "/docs/next/publishing-to-app-store"
              }
            },
            {
              "unversionedId": "appearance",
              "id": "appearance",
              "isDocsHomePage": false,
              "title": "Appearance",
              "description": "`jsx",
              "source": "@site/../docs/appearance.md",
              "slug": "/appearance",
              "permalink": "/docs/next/appearance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/appearance.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Animated.ValueXY",
                "permalink": "/docs/next/animatedvaluexy"
              },
              "next": {
                "title": "AppRegistry",
                "permalink": "/docs/next/appregistry"
              }
            },
            {
              "unversionedId": "appregistry",
              "id": "appregistry",
              "isDocsHomePage": false,
              "title": "AppRegistry",
              "description": "Project with Native Code Required",
              "source": "@site/../docs/appregistry.md",
              "slug": "/appregistry",
              "permalink": "/docs/next/appregistry",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/appregistry.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Appearance",
                "permalink": "/docs/next/appearance"
              },
              "next": {
                "title": "AppState",
                "permalink": "/docs/next/appstate"
              }
            },
            {
              "unversionedId": "appstate",
              "id": "appstate",
              "isDocsHomePage": false,
              "title": "AppState",
              "description": "AppState can tell you if the app is in the foreground or background, and notify you when the state changes.",
              "source": "@site/../docs/appstate.md",
              "slug": "/appstate",
              "permalink": "/docs/next/appstate",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/appstate.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "AppRegistry",
                "permalink": "/docs/next/appregistry"
              },
              "next": {
                "title": "DevSettings",
                "permalink": "/docs/next/devsettings"
              }
            },
            {
              "unversionedId": "asyncstorage",
              "id": "asyncstorage",
              "isDocsHomePage": false,
              "title": "🚧 AsyncStorage",
              "description": "Deprecated. Use @react-native-async-storage/async-storage instead.",
              "source": "@site/../docs/asyncstorage.md",
              "slug": "/asyncstorage",
              "permalink": "/docs/next/asyncstorage",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/asyncstorage.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backhandler",
              "id": "backhandler",
              "isDocsHomePage": false,
              "title": "BackHandler",
              "description": "The Backhandler API detects hardware button presses for back navigation, lets you register event listeners for the system's back action, and lets you control how your application responds. It is Android-only.",
              "source": "@site/../docs/backhandler.md",
              "slug": "/backhandler",
              "permalink": "/docs/next/backhandler",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/backhandler.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "useWindowDimensions",
                "permalink": "/docs/next/usewindowdimensions"
              },
              "next": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/next/permissionsandroid"
              }
            },
            {
              "unversionedId": "building-for-tv",
              "id": "building-for-tv",
              "isDocsHomePage": false,
              "title": "Building For TV Devices",
              "description": "TV devices support has been implemented with the intention of making existing React Native applications work on Apple TV and Android TV, with few or no changes needed in the JavaScript code for the applications.",
              "source": "@site/../docs/building-for-tv.md",
              "slug": "/building-for-tv",
              "permalink": "/docs/next/building-for-tv",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/building-for-tv.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Integration with an Android Fragment",
                "permalink": "/docs/next/integration-with-android-fragment"
              },
              "next": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/next/out-of-tree-platforms"
              }
            },
            {
              "unversionedId": "button",
              "id": "button",
              "isDocsHomePage": false,
              "title": "Button",
              "description": "A basic button component that should render nicely on any platform. Supports a minimal level of customization.",
              "source": "@site/../docs/button.md",
              "slug": "/button",
              "permalink": "/docs/next/button",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/button.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "ActivityIndicator",
                "permalink": "/docs/next/activityindicator"
              },
              "next": {
                "title": "FlatList",
                "permalink": "/docs/next/flatlist"
              }
            },
            {
              "unversionedId": "checkbox",
              "id": "checkbox",
              "isDocsHomePage": false,
              "title": "🚧 CheckBox",
              "description": "Deprecated. Use @react-native-community/checkbox instead.",
              "source": "@site/../docs/checkbox.md",
              "slug": "/checkbox",
              "permalink": "/docs/next/checkbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/checkbox.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "clipboard",
              "id": "clipboard",
              "isDocsHomePage": false,
              "title": "🚧 Clipboard",
              "description": "Deprecated. Use @react-native-community/clipboard instead.",
              "source": "@site/../docs/clipboard.md",
              "slug": "/clipboard",
              "permalink": "/docs/next/clipboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/clipboard.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "colors",
              "id": "colors",
              "isDocsHomePage": false,
              "title": "Color Reference",
              "description": "Components in React Native are styled using JavaScript. Color properties usually match how CSS works on the web. General guides on the color usage on each platform could be found below:",
              "source": "@site/../docs/colors.md",
              "slug": "/colors",
              "permalink": "/docs/next/colors",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/colors.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Images",
                "permalink": "/docs/next/images"
              },
              "next": {
                "title": "Handling Touches",
                "permalink": "/docs/next/handling-touches"
              }
            },
            {
              "unversionedId": "communication-android",
              "id": "communication-android",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/../docs/communication-android.md",
              "slug": "/communication-android",
              "permalink": "/docs/next/communication-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/communication-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "communication-ios",
              "id": "communication-ios",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/../docs/communication-ios.md",
              "slug": "/communication-ios",
              "permalink": "/docs/next/communication-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/communication-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Running On Simulator",
                "permalink": "/docs/next/running-on-simulator-ios"
              },
              "next": {
                "title": "App Extensions",
                "permalink": "/docs/next/app-extensions"
              }
            },
            {
              "unversionedId": "components-and-apis",
              "id": "components-and-apis",
              "isDocsHomePage": false,
              "title": "Core Components and APIs",
              "description": "React Native provides a number of built-in Core Components ready for you to use in your app. You can find them all in the left sidebar (or menu above, if you are on a narrow screen). If you're not sure where to get started, take a look at the following categories:",
              "source": "@site/../docs/components-and-apis.md",
              "slug": "/components-and-apis",
              "permalink": "/docs/next/components-and-apis",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/components-and-apis.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "next": {
                "title": "ActivityIndicator",
                "permalink": "/docs/next/activityindicator"
              }
            },
            {
              "unversionedId": "custom-webview-android",
              "id": "custom-webview-android",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/../docs/custom-webview-android.md",
              "slug": "/custom-webview-android",
              "permalink": "/docs/next/custom-webview-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/custom-webview-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "custom-webview-ios",
              "id": "custom-webview-ios",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/../docs/custom-webview-ios.md",
              "slug": "/custom-webview-ios",
              "permalink": "/docs/next/custom-webview-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/custom-webview-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerandroid",
              "id": "datepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/../docs/datepickerandroid.md",
              "slug": "/datepickerandroid",
              "permalink": "/docs/next/datepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/datepickerandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerios",
              "id": "datepickerios",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerIOS",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/../docs/datepickerios.md",
              "slug": "/datepickerios",
              "permalink": "/docs/next/datepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/datepickerios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "debugging",
              "id": "debugging",
              "isDocsHomePage": false,
              "title": "Debugging",
              "description": "Accessing the In-App Developer Menu",
              "source": "@site/../docs/debugging.md",
              "slug": "/debugging",
              "permalink": "/docs/next/debugging",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/debugging.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Fast Refresh",
                "permalink": "/docs/next/fast-refresh"
              },
              "next": {
                "title": "Symbolicating a stack trace",
                "permalink": "/docs/next/symbolication"
              }
            },
            {
              "unversionedId": "devsettings",
              "id": "devsettings",
              "isDocsHomePage": false,
              "title": "DevSettings",
              "description": "The DevSettings module exposes methods for customizing settings for developers in development.",
              "source": "@site/../docs/devsettings.md",
              "slug": "/devsettings",
              "permalink": "/docs/next/devsettings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/devsettings.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "AppState",
                "permalink": "/docs/next/appstate"
              },
              "next": {
                "title": "Dimensions",
                "permalink": "/docs/next/dimensions"
              }
            },
            {
              "unversionedId": "dimensions",
              "id": "dimensions",
              "isDocsHomePage": false,
              "title": "Dimensions",
              "description": "useWindowDimensions is the preferred API for React components. Unlike Dimensions, it updates as the window's dimensions update. This works nicely with the React paradigm.",
              "source": "@site/../docs/dimensions.md",
              "slug": "/dimensions",
              "permalink": "/docs/next/dimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/dimensions.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "DevSettings",
                "permalink": "/docs/next/devsettings"
              },
              "next": {
                "title": "Easing",
                "permalink": "/docs/next/easing"
              }
            },
            {
              "unversionedId": "direct-manipulation",
              "id": "direct-manipulation",
              "isDocsHomePage": false,
              "title": "Direct Manipulation",
              "description": "It is sometimes necessary to make changes directly to a component without using state/props to trigger a re-render of the entire subtree. When using React in the browser for example, you sometimes need to directly modify a DOM node, and the same is true for views in mobile apps. setNativeProps is the React Native equivalent to setting properties directly on a DOM node.",
              "source": "@site/../docs/direct-manipulation.md",
              "slug": "/direct-manipulation",
              "permalink": "/docs/next/direct-manipulation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/direct-manipulation.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "iOS Native UI Components",
                "permalink": "/docs/next/native-components-ios"
              },
              "next": {
                "title": "Headless JS",
                "permalink": "/docs/next/headless-js-android"
              }
            },
            {
              "unversionedId": "drawerlayoutandroid",
              "id": "drawerlayoutandroid",
              "isDocsHomePage": false,
              "title": "DrawerLayoutAndroid",
              "description": "React component that wraps the platform DrawerLayout (Android only). The Drawer (typically used for navigation) is rendered with renderNavigationView and direct children are the main view (where your content goes). The navigation view is initially not visible on the screen, but can be pulled in from the side of the window specified by the drawerPosition prop and its width can be set by the drawerWidth prop.",
              "source": "@site/../docs/drawerlayoutandroid.md",
              "slug": "/drawerlayoutandroid",
              "permalink": "/docs/next/drawerlayoutandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/drawerlayoutandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "VirtualizedList",
                "permalink": "/docs/next/virtualizedlist"
              },
              "next": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/next/touchablenativefeedback"
              }
            },
            {
              "unversionedId": "dynamiccolorios",
              "id": "dynamiccolorios",
              "isDocsHomePage": false,
              "title": "DynamicColorIOS",
              "description": "The DynamicColorIOS function is a platform color type specific to iOS.",
              "source": "@site/../docs/dynamiccolorios.md",
              "slug": "/dynamiccolorios",
              "permalink": "/docs/next/dynamiccolorios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/dynamiccolorios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/next/actionsheetios"
              },
              "next": {
                "title": "Settings",
                "permalink": "/docs/next/settings"
              }
            },
            {
              "unversionedId": "easing",
              "id": "easing",
              "isDocsHomePage": false,
              "title": "Easing",
              "description": "The Easing module implements common easing functions. This module is used by Animated.timing() to convey physically believable motion in animations.",
              "source": "@site/../docs/easing.md",
              "slug": "/easing",
              "permalink": "/docs/next/easing",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/easing.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Dimensions",
                "permalink": "/docs/next/dimensions"
              },
              "next": {
                "title": "InteractionManager",
                "permalink": "/docs/next/interactionmanager"
              }
            },
            {
              "unversionedId": "environment-setup",
              "id": "environment-setup",
              "isDocsHomePage": false,
              "title": "Setting up the development environment",
              "description": "This page will help you install and build your first React Native app.",
              "source": "@site/../docs/getting-started.md",
              "slug": "/environment-setup",
              "permalink": "/docs/next/environment-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/getting-started.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "More Resources",
                "permalink": "/docs/next/more-resources"
              },
              "next": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/next/integration-with-existing-apps"
              }
            },
            {
              "unversionedId": "fast-refresh",
              "id": "fast-refresh",
              "isDocsHomePage": false,
              "title": "Fast Refresh",
              "description": "Fast Refresh is a React Native feature that allows you to get near-instant feedback for changes in your React components. Fast Refresh is enabled by default, and you can toggle \"Enable Fast Refresh\" in the React Native developer menu. With Fast Refresh enabled, most edits should be visible within a second or two.",
              "source": "@site/../docs/fast-refresh.md",
              "slug": "/fast-refresh",
              "permalink": "/docs/next/fast-refresh",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/fast-refresh.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Running On Device",
                "permalink": "/docs/next/running-on-device"
              },
              "next": {
                "title": "Debugging",
                "permalink": "/docs/next/debugging"
              }
            },
            {
              "unversionedId": "flatlist",
              "id": "flatlist",
              "isDocsHomePage": false,
              "title": "FlatList",
              "description": "A performant interface for rendering basic, flat lists, supporting the most handy features:",
              "source": "@site/../docs/flatlist.md",
              "slug": "/flatlist",
              "permalink": "/docs/next/flatlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/flatlist.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Button",
                "permalink": "/docs/next/button"
              },
              "next": {
                "title": "Image",
                "permalink": "/docs/next/image"
              }
            },
            {
              "unversionedId": "flexbox",
              "id": "flexbox",
              "isDocsHomePage": false,
              "title": "Layout with Flexbox",
              "description": "A component can specify the layout of its children using the Flexbox algorithm. Flexbox is designed to provide a consistent layout on different screen sizes.",
              "source": "@site/../docs/flexbox.md",
              "slug": "/flexbox",
              "permalink": "/docs/next/flexbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/flexbox.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Height and Width",
                "permalink": "/docs/next/height-and-width"
              },
              "next": {
                "title": "Images",
                "permalink": "/docs/next/images"
              }
            },
            {
              "unversionedId": "gesture-responder-system",
              "id": "gesture-responder-system",
              "isDocsHomePage": false,
              "title": "Gesture Responder System",
              "description": "The gesture responder system manages the lifecycle of gestures in your app. A touch can go through several phases as the app determines what the user's intention is. For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping. This can even change during the duration of a touch. There can also be multiple simultaneous touches.",
              "source": "@site/../docs/gesture-responder-system.md",
              "slug": "/gesture-responder-system",
              "permalink": "/docs/next/gesture-responder-system",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/gesture-responder-system.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Animations",
                "permalink": "/docs/next/animations"
              },
              "next": {
                "title": "Accessibility",
                "permalink": "/docs/next/accessibility"
              }
            },
            {
              "unversionedId": "getting-started",
              "id": "getting-started",
              "isDocsHomePage": false,
              "title": "Introduction",
              "description": "This helpful guide lays out the prerequisites for learning React Native, using these docs, and setting up your environment.",
              "source": "@site/../docs/introduction.md",
              "slug": "/getting-started",
              "permalink": "/docs/next/getting-started",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/introduction.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "next": {
                "title": "Core Components and Native Components",
                "permalink": "/docs/next/intro-react-native-components"
              }
            },
            {
              "unversionedId": "handling-text-input",
              "id": "handling-text-input",
              "isDocsHomePage": false,
              "title": "Handling Text Input",
              "description": "TextInput is a Core Component that allows the user to enter text. It has an onChangeText prop that takes a function to be called every time the text changed, and an onSubmitEditing prop that takes a function to be called when the text is submitted.",
              "source": "@site/../docs/handling-text-input.md",
              "slug": "/handling-text-input",
              "permalink": "/docs/next/handling-text-input",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/handling-text-input.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "React Fundamentals",
                "permalink": "/docs/next/intro-react"
              },
              "next": {
                "title": "Using a ScrollView",
                "permalink": "/docs/next/using-a-scrollview"
              }
            },
            {
              "unversionedId": "handling-touches",
              "id": "handling-touches",
              "isDocsHomePage": false,
              "title": "Handling Touches",
              "description": "Users interact with mobile apps mainly through touch. They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. React Native provides components to handle all sorts of common gestures, as well as a comprehensive gesture responder system to allow for more advanced gesture recognition, but the one component you will most likely be interested in is the basic Button.",
              "source": "@site/../docs/handling-touches.md",
              "slug": "/handling-touches",
              "permalink": "/docs/next/handling-touches",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/handling-touches.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Color Reference",
                "permalink": "/docs/next/colors"
              },
              "next": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/next/navigation"
              }
            },
            {
              "unversionedId": "headless-js-android",
              "id": "headless-js-android",
              "isDocsHomePage": false,
              "title": "Headless JS",
              "description": "Headless JS is a way to run tasks in JavaScript while your app is in the background. It can be used, for example, to sync fresh data, handle push notifications, or play music.",
              "source": "@site/../docs/headless-js-android.md",
              "slug": "/headless-js-android",
              "permalink": "/docs/next/headless-js-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/headless-js-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Direct Manipulation",
                "permalink": "/docs/next/direct-manipulation"
              },
              "next": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/next/signed-apk-android"
              }
            },
            {
              "unversionedId": "height-and-width",
              "id": "height-and-width",
              "isDocsHomePage": false,
              "title": "Height and Width",
              "description": "A component's height and width determine its size on the screen.",
              "source": "@site/../docs/height-and-width.md",
              "slug": "/height-and-width",
              "permalink": "/docs/next/height-and-width",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/height-and-width.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Style",
                "permalink": "/docs/next/style"
              },
              "next": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/next/flexbox"
              }
            },
            {
              "unversionedId": "hermes",
              "id": "hermes",
              "isDocsHomePage": false,
              "title": "Using Hermes",
              "description": "Hermes is an open-source JavaScript engine optimized for running React Native apps on Android. For many apps, enabling Hermes will result in improved start-up time, decreased memory usage, and smaller app size. At this time Hermes is an opt-in React Native feature, and this guide explains how to enable it.",
              "source": "@site/../docs/hermes.md",
              "slug": "/hermes",
              "permalink": "/docs/next/hermes",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/hermes.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Timers",
                "permalink": "/docs/next/timers"
              },
              "next": {
                "title": "Networking",
                "permalink": "/docs/next/network"
              }
            },
            {
              "unversionedId": "image",
              "id": "image",
              "isDocsHomePage": false,
              "title": "Image",
              "description": "A React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.",
              "source": "@site/../docs/image.md",
              "slug": "/image",
              "permalink": "/docs/next/image",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/image.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "FlatList",
                "permalink": "/docs/next/flatlist"
              },
              "next": {
                "title": "ImageBackground",
                "permalink": "/docs/next/imagebackground"
              }
            },
            {
              "unversionedId": "image-style-props",
              "id": "image-style-props",
              "isDocsHomePage": false,
              "title": "Image Style Props",
              "description": "Examples",
              "source": "@site/../docs/image-style-props.md",
              "slug": "/image-style-props",
              "permalink": "/docs/next/image-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/image-style-props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "SafeAreaView",
                "permalink": "/docs/next/safeareaview"
              },
              "next": {
                "title": "Layout Props",
                "permalink": "/docs/next/layout-props"
              }
            },
            {
              "unversionedId": "imagebackground",
              "id": "imagebackground",
              "isDocsHomePage": false,
              "title": "ImageBackground",
              "description": "A common feature request from developers familiar with the web is background-image. To handle this use case, you can use the ` component, which has the same props as `, and add whatever children to it you would like to layer on top of it.",
              "source": "@site/../docs/imagebackground.md",
              "slug": "/imagebackground",
              "permalink": "/docs/next/imagebackground",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/imagebackground.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Image",
                "permalink": "/docs/next/image"
              },
              "next": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/next/keyboardavoidingview"
              }
            },
            {
              "unversionedId": "imageeditor",
              "id": "imageeditor",
              "isDocsHomePage": false,
              "title": "🚧 ImageEditor",
              "description": "Deprecated. Use @react-native-community/image-editor instead.",
              "source": "@site/../docs/imageeditor.md",
              "slug": "/imageeditor",
              "permalink": "/docs/next/imageeditor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/imageeditor.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "imagepickerios",
              "id": "imagepickerios",
              "isDocsHomePage": false,
              "title": "🚧 ImagePickerIOS",
              "description": "Deprecated. Use @react-native-community/image-picker-ios instead.",
              "source": "@site/../docs/imagepickerios.md",
              "slug": "/imagepickerios",
              "permalink": "/docs/next/imagepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/imagepickerios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "images",
              "id": "images",
              "isDocsHomePage": false,
              "title": "Images",
              "description": "Static Image Resources",
              "source": "@site/../docs/images.md",
              "slug": "/images",
              "permalink": "/docs/next/images",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/images.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/next/flexbox"
              },
              "next": {
                "title": "Color Reference",
                "permalink": "/docs/next/colors"
              }
            },
            {
              "unversionedId": "improvingux",
              "id": "improvingux",
              "isDocsHomePage": false,
              "title": "Improving User Experience",
              "description": "Configure text inputs",
              "source": "@site/../docs/improvingux.md",
              "slug": "/improvingux",
              "permalink": "/docs/next/improvingux",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/improvingux.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "inputaccessoryview",
              "id": "inputaccessoryview",
              "isDocsHomePage": false,
              "title": "InputAccessoryView",
              "description": "A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars.",
              "source": "@site/../docs/inputaccessoryview.md",
              "slug": "/inputaccessoryview",
              "permalink": "/docs/next/inputaccessoryview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/inputaccessoryview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/next/touchablenativefeedback"
              },
              "next": {
                "title": "SafeAreaView",
                "permalink": "/docs/next/safeareaview"
              }
            },
            {
              "unversionedId": "integration-with-android-fragment",
              "id": "integration-with-android-fragment",
              "isDocsHomePage": false,
              "title": "Integration with an Android Fragment",
              "description": "The guide for Integration with Existing Apps details how to integrate a full-screen React Native app into an existing Android app as an Activity. To use React Native components within Fragments in an existing app requires some additional setup. The benefit of this is that it allows for a native app to integrate React Native components alongside native fragments in an Activity.",
              "source": "@site/../docs/integration-with-android-fragment.md",
              "slug": "/integration-with-android-fragment",
              "permalink": "/docs/next/integration-with-android-fragment",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/integration-with-android-fragment.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/next/integration-with-existing-apps"
              },
              "next": {
                "title": "Building For TV Devices",
                "permalink": "/docs/next/building-for-tv"
              }
            },
            {
              "unversionedId": "integration-with-existing-apps",
              "id": "integration-with-existing-apps",
              "isDocsHomePage": false,
              "title": "Integration with Existing Apps",
              "description": "React Native is great when you are starting a new mobile app from scratch. However, it also works well for adding a single view or user flow to existing native applications. With a few steps, you can add new React Native based features, screens, views, etc.",
              "source": "@site/../docs/integration-with-existing-apps.md",
              "slug": "/integration-with-existing-apps",
              "permalink": "/docs/next/integration-with-existing-apps",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/integration-with-existing-apps.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Setting up the development environment",
                "permalink": "/docs/next/environment-setup"
              },
              "next": {
                "title": "Integration with an Android Fragment",
                "permalink": "/docs/next/integration-with-android-fragment"
              }
            },
            {
              "unversionedId": "interactionmanager",
              "id": "interactionmanager",
              "isDocsHomePage": false,
              "title": "InteractionManager",
              "description": "InteractionManager allows long-running work to be scheduled after any interactions/animations have completed. In particular, this allows JavaScript animations to run smoothly.",
              "source": "@site/../docs/interactionmanager.md",
              "slug": "/interactionmanager",
              "permalink": "/docs/next/interactionmanager",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/interactionmanager.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Easing",
                "permalink": "/docs/next/easing"
              },
              "next": {
                "title": "Keyboard",
                "permalink": "/docs/next/keyboard"
              }
            },
            {
              "unversionedId": "intro-react",
              "id": "intro-react",
              "isDocsHomePage": false,
              "title": "React Fundamentals",
              "description": "To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed.",
              "source": "@site/../docs/intro-react.md",
              "slug": "/intro-react",
              "permalink": "/docs/next/intro-react",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/intro-react.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Core Components and Native Components",
                "permalink": "/docs/next/intro-react-native-components"
              },
              "next": {
                "title": "Handling Text Input",
                "permalink": "/docs/next/handling-text-input"
              }
            },
            {
              "unversionedId": "intro-react-native-components",
              "id": "intro-react-native-components",
              "isDocsHomePage": false,
              "title": "Core Components and Native Components",
              "description": "React Native lets you compose app interfaces using Native Components. Conveniently, it comes with a set of these components for you to get started with right now—the Core Components!",
              "source": "@site/../docs/intro-react-native-components.md",
              "slug": "/intro-react-native-components",
              "permalink": "/docs/next/intro-react-native-components",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/intro-react-native-components.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/next/getting-started"
              },
              "next": {
                "title": "React Fundamentals",
                "permalink": "/docs/next/intro-react"
              }
            },
            {
              "unversionedId": "javascript-environment",
              "id": "javascript-environment",
              "isDocsHomePage": false,
              "title": "JavaScript Environment",
              "description": "JavaScript Runtime",
              "source": "@site/../docs/javascript-environment.md",
              "slug": "/javascript-environment",
              "permalink": "/docs/next/javascript-environment",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/javascript-environment.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Profiling with Hermes",
                "permalink": "/docs/next/profile-hermes"
              },
              "next": {
                "title": "Timers",
                "permalink": "/docs/next/timers"
              }
            },
            {
              "unversionedId": "keyboard",
              "id": "keyboard",
              "isDocsHomePage": false,
              "title": "Keyboard",
              "description": "Keyboard module to control keyboard events.",
              "source": "@site/../docs/keyboard.md",
              "slug": "/keyboard",
              "permalink": "/docs/next/keyboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/keyboard.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "InteractionManager",
                "permalink": "/docs/next/interactionmanager"
              },
              "next": {
                "title": "LayoutAnimation",
                "permalink": "/docs/next/layoutanimation"
              }
            },
            {
              "unversionedId": "keyboardavoidingview",
              "id": "keyboardavoidingview",
              "isDocsHomePage": false,
              "title": "KeyboardAvoidingView",
              "description": "It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard. It can automatically adjust either its height, position, or bottom padding based on the keyboard height.",
              "source": "@site/../docs/keyboardavoidingview.md",
              "slug": "/keyboardavoidingview",
              "permalink": "/docs/next/keyboardavoidingview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/keyboardavoidingview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "ImageBackground",
                "permalink": "/docs/next/imagebackground"
              },
              "next": {
                "title": "Modal",
                "permalink": "/docs/next/modal"
              }
            },
            {
              "unversionedId": "layout-props",
              "id": "layout-props",
              "isDocsHomePage": false,
              "title": "Layout Props",
              "description": "More detailed examples about those properties can be found on the Layout with Flexbox page.",
              "source": "@site/../docs/layout-props.md",
              "slug": "/layout-props",
              "permalink": "/docs/next/layout-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/layout-props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Image Style Props",
                "permalink": "/docs/next/image-style-props"
              },
              "next": {
                "title": "Shadow Props",
                "permalink": "/docs/next/shadow-props"
              }
            },
            {
              "unversionedId": "layoutanimation",
              "id": "layoutanimation",
              "isDocsHomePage": false,
              "title": "LayoutAnimation",
              "description": "Automatically animates views to their new positions when the next layout happens.",
              "source": "@site/../docs/layoutanimation.md",
              "slug": "/layoutanimation",
              "permalink": "/docs/next/layoutanimation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/layoutanimation.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Keyboard",
                "permalink": "/docs/next/keyboard"
              },
              "next": {
                "title": "Linking",
                "permalink": "/docs/next/linking"
              }
            },
            {
              "unversionedId": "layoutevent",
              "id": "layoutevent",
              "isDocsHomePage": false,
              "title": "LayoutEvent Object Type",
              "description": "LayoutEvent object is returned in the callback as a result of component layout change, for example onLayout in View component.",
              "source": "@site/../docs/layoutevent.md",
              "slug": "/layoutevent",
              "permalink": "/docs/next/layoutevent",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/layoutevent.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "View Style Props",
                "permalink": "/docs/next/view-style-props"
              },
              "next": {
                "title": "PressEvent Object Type",
                "permalink": "/docs/next/pressevent"
              }
            },
            {
              "unversionedId": "libraries",
              "id": "libraries",
              "isDocsHomePage": false,
              "title": "Using Libraries",
              "description": "This guide introduces React Native developers to finding, installing, and using third-party libraries in their apps.",
              "source": "@site/../docs/libraries.md",
              "slug": "/libraries",
              "permalink": "/docs/next/libraries",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/libraries.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Testing",
                "permalink": "/docs/next/testing-overview"
              },
              "next": {
                "title": "Using TypeScript",
                "permalink": "/docs/next/typescript"
              }
            },
            {
              "unversionedId": "linking",
              "id": "linking",
              "isDocsHomePage": false,
              "title": "Linking",
              "description": "Projects with Native Code Only",
              "source": "@site/../docs/linking.md",
              "slug": "/linking",
              "permalink": "/docs/next/linking",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/linking.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "LayoutAnimation",
                "permalink": "/docs/next/layoutanimation"
              },
              "next": {
                "title": "PanResponder",
                "permalink": "/docs/next/panresponder"
              }
            },
            {
              "unversionedId": "linking-libraries-ios",
              "id": "linking-libraries-ios",
              "isDocsHomePage": false,
              "title": "Linking Libraries",
              "description": "Not every app uses all the native capabilities, and including the code to support all those features would impact the binary size... But we still want to support adding these features whenever you need them.",
              "source": "@site/../docs/linking-libraries-ios.md",
              "slug": "/linking-libraries-ios",
              "permalink": "/docs/next/linking-libraries-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/linking-libraries-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/next/signed-apk-android"
              },
              "next": {
                "title": "Running On Simulator",
                "permalink": "/docs/next/running-on-simulator-ios"
              }
            },
            {
              "unversionedId": "modal",
              "id": "modal",
              "isDocsHomePage": false,
              "title": "Modal",
              "description": "The Modal component is a basic way to present content above an enclosing view.",
              "source": "@site/../docs/modal.md",
              "slug": "/modal",
              "permalink": "/docs/next/modal",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/modal.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/next/keyboardavoidingview"
              },
              "next": {
                "title": "Pressable",
                "permalink": "/docs/next/pressable"
              }
            },
            {
              "unversionedId": "more-resources",
              "id": "more-resources",
              "isDocsHomePage": false,
              "title": "More Resources",
              "description": "Congratulations! You built your first React Native app. But there’s more to learn: developer workflows, shipping to app stores, internationalization, security and more.",
              "source": "@site/../docs/more-resources.md",
              "slug": "/more-resources",
              "permalink": "/docs/next/more-resources",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/more-resources.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Platform Specific Code",
                "permalink": "/docs/next/platform-specific-code"
              },
              "next": {
                "title": "Setting up the development environment",
                "permalink": "/docs/next/environment-setup"
              }
            },
            {
              "unversionedId": "native-components-android",
              "id": "native-components-android",
              "isDocsHomePage": false,
              "title": "Android Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/../docs/native-components-android.md",
              "slug": "/native-components-android",
              "permalink": "/docs/next/native-components-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/native-components-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Native Modules NPM Package Setup",
                "permalink": "/docs/next/native-modules-setup"
              },
              "next": {
                "title": "iOS Native UI Components",
                "permalink": "/docs/next/native-components-ios"
              }
            },
            {
              "unversionedId": "native-components-ios",
              "id": "native-components-ios",
              "isDocsHomePage": false,
              "title": "iOS Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/../docs/native-components-ios.md",
              "slug": "/native-components-ios",
              "permalink": "/docs/next/native-components-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/native-components-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Android Native UI Components",
                "permalink": "/docs/next/native-components-android"
              },
              "next": {
                "title": "Direct Manipulation",
                "permalink": "/docs/next/direct-manipulation"
              }
            },
            {
              "unversionedId": "native-modules-android",
              "id": "native-modules-android",
              "isDocsHomePage": false,
              "title": "Android Native Modules",
              "description": "Welcome to Native Modules for Android. Please start by reading the Native Modules Intro for an intro to what native modules are.",
              "source": "@site/../docs/native-modules-android.md",
              "slug": "/native-modules-android",
              "permalink": "/docs/next/native-modules-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/native-modules-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Native Modules Intro",
                "permalink": "/docs/next/native-modules-intro"
              },
              "next": {
                "title": "iOS Native Modules",
                "permalink": "/docs/next/native-modules-ios"
              }
            },
            {
              "unversionedId": "native-modules-intro",
              "id": "native-modules-intro",
              "isDocsHomePage": false,
              "title": "Native Modules Intro",
              "description": "Sometimes a React Native app needs to access a native platform API that is not available by default in JavaScript, for example the native APIs to access Apple or Android pay. Maybe you want to reuse some existing Objective-C, Swift, Java or C++ libraries without having to reimplement it in JavaScript, or write some high performance, multi-threaded code for things like image processing.",
              "source": "@site/../docs/native-modules-intro.md",
              "slug": "/native-modules-intro",
              "permalink": "/docs/next/native-modules-intro",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/native-modules-intro.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Security",
                "permalink": "/docs/next/security"
              },
              "next": {
                "title": "Android Native Modules",
                "permalink": "/docs/next/native-modules-android"
              }
            },
            {
              "unversionedId": "native-modules-ios",
              "id": "native-modules-ios",
              "isDocsHomePage": false,
              "title": "iOS Native Modules",
              "description": "Welcome to Native Modules for iOS. Please start by reading the Native Modules Intro for an intro to what native modules are.",
              "source": "@site/../docs/native-modules-ios.md",
              "slug": "/native-modules-ios",
              "permalink": "/docs/next/native-modules-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/native-modules-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Android Native Modules",
                "permalink": "/docs/next/native-modules-android"
              },
              "next": {
                "title": "Native Modules NPM Package Setup",
                "permalink": "/docs/next/native-modules-setup"
              }
            },
            {
              "unversionedId": "native-modules-setup",
              "id": "native-modules-setup",
              "isDocsHomePage": false,
              "title": "Native Modules NPM Package Setup",
              "description": "Native modules are usually distributed as npm packages, except that on top of the usual JavaScript they will include some native code per platform. To understand more about npm packages you may find this guide useful.",
              "source": "@site/../docs/native-modules-setup.md",
              "slug": "/native-modules-setup",
              "permalink": "/docs/next/native-modules-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/native-modules-setup.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "iOS Native Modules",
                "permalink": "/docs/next/native-modules-ios"
              },
              "next": {
                "title": "Android Native UI Components",
                "permalink": "/docs/next/native-components-android"
              }
            },
            {
              "unversionedId": "navigation",
              "id": "navigation",
              "isDocsHomePage": false,
              "title": "Navigating Between Screens",
              "description": "Mobile apps are rarely made up of a single screen. Managing the presentation of, and transition between, multiple screens is typically handled by what is known as a navigator.",
              "source": "@site/../docs/navigation.md",
              "slug": "/navigation",
              "permalink": "/docs/next/navigation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/navigation.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Handling Touches",
                "permalink": "/docs/next/handling-touches"
              },
              "next": {
                "title": "Animations",
                "permalink": "/docs/next/animations"
              }
            },
            {
              "unversionedId": "network",
              "id": "network",
              "isDocsHomePage": false,
              "title": "Networking",
              "description": "Many mobile apps need to load resources from a remote URL. You may want to make a POST request to a REST API, or you may need to fetch a chunk of static content from another server.",
              "source": "@site/../docs/network.md",
              "slug": "/network",
              "permalink": "/docs/next/network",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/network.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Using Hermes",
                "permalink": "/docs/next/hermes"
              },
              "next": {
                "title": "Security",
                "permalink": "/docs/next/security"
              }
            },
            {
              "unversionedId": "optimizing-flatlist-configuration",
              "id": "optimizing-flatlist-configuration",
              "isDocsHomePage": false,
              "title": "Optimizing Flatlist Configuration",
              "description": "Terms",
              "source": "@site/../docs/optimizing-flatlist-configuration.md",
              "slug": "/optimizing-flatlist-configuration",
              "permalink": "/docs/next/optimizing-flatlist-configuration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/optimizing-flatlist-configuration.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Performance Overview",
                "permalink": "/docs/next/performance"
              },
              "next": {
                "title": "RAM Bundles and Inline Requires",
                "permalink": "/docs/next/ram-bundles-inline-requires"
              }
            },
            {
              "unversionedId": "out-of-tree-platforms",
              "id": "out-of-tree-platforms",
              "isDocsHomePage": false,
              "title": "Out-of-Tree Platforms",
              "description": "React Native is not only for Android and iOS - there are community-supported projects that bring it to other platforms, such as:",
              "source": "@site/../docs/out-of-tree-platforms.md",
              "slug": "/out-of-tree-platforms",
              "permalink": "/docs/next/out-of-tree-platforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/out-of-tree-platforms.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Building For TV Devices",
                "permalink": "/docs/next/building-for-tv"
              },
              "next": {
                "title": "Running On Device",
                "permalink": "/docs/next/running-on-device"
              }
            },
            {
              "unversionedId": "panresponder",
              "id": "panresponder",
              "isDocsHomePage": false,
              "title": "PanResponder",
              "description": "PanResponder reconciles several touches into a single gesture. It makes single-touch gestures resilient to extra touches, and can be used to recognize basic multi-touch gestures.",
              "source": "@site/../docs/panresponder.md",
              "slug": "/panresponder",
              "permalink": "/docs/next/panresponder",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/panresponder.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Linking",
                "permalink": "/docs/next/linking"
              },
              "next": {
                "title": "PixelRatio",
                "permalink": "/docs/next/pixelratio"
              }
            },
            {
              "unversionedId": "performance",
              "id": "performance",
              "isDocsHomePage": false,
              "title": "Performance Overview",
              "description": "A compelling reason for using React Native instead of WebView-based tools is to achieve 60 frames per second and a native look and feel to your apps. Where possible, we would like for React Native to do the right thing and help you to focus on your app instead of performance optimization, but there are areas where we're not quite there yet, and others where React Native (similar to writing native code directly) cannot possibly determine the best way to optimize for you and so manual intervention will be necessary. We try our best to deliver buttery-smooth UI performance by default, but sometimes that isn't possible.",
              "source": "@site/../docs/performance.md",
              "slug": "/performance",
              "permalink": "/docs/next/performance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/performance.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Accessibility",
                "permalink": "/docs/next/accessibility"
              },
              "next": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/next/optimizing-flatlist-configuration"
              }
            },
            {
              "unversionedId": "permissionsandroid",
              "id": "permissionsandroid",
              "isDocsHomePage": false,
              "title": "PermissionsAndroid",
              "description": "Project with Native Code Required",
              "source": "@site/../docs/permissionsandroid.md",
              "slug": "/permissionsandroid",
              "permalink": "/docs/next/permissionsandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/permissionsandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "BackHandler",
                "permalink": "/docs/next/backhandler"
              },
              "next": {
                "title": "ToastAndroid",
                "permalink": "/docs/next/toastandroid"
              }
            },
            {
              "unversionedId": "picker",
              "id": "picker",
              "isDocsHomePage": false,
              "title": "🚧 Picker",
              "description": "Deprecated. Use @react-native-community/picker instead.",
              "source": "@site/../docs/picker.md",
              "slug": "/picker",
              "permalink": "/docs/next/picker",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/picker.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-item",
              "id": "picker-item",
              "isDocsHomePage": false,
              "title": "Picker.Item",
              "description": "Individual selectable item in a Picker.",
              "source": "@site/../docs/picker-item.md",
              "slug": "/picker-item",
              "permalink": "/docs/next/picker-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/picker-item.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-style-props",
              "id": "picker-style-props",
              "isDocsHomePage": false,
              "title": "Picker Style Props",
              "description": "Picker style props.",
              "source": "@site/../docs/picker-style-props.md",
              "slug": "/picker-style-props",
              "permalink": "/docs/next/picker-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/picker-style-props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pickerios",
              "id": "pickerios",
              "isDocsHomePage": false,
              "title": "🚧 PickerIOS",
              "description": "Deprecated. Use @react-native-community/picker instead.",
              "source": "@site/../docs/pickerios.md",
              "slug": "/pickerios",
              "permalink": "/docs/next/pickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/pickerios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pixelratio",
              "id": "pixelratio",
              "isDocsHomePage": false,
              "title": "PixelRatio",
              "description": "PixelRatio gives you access to the device's pixel density and font scale.",
              "source": "@site/../docs/pixelratio.md",
              "slug": "/pixelratio",
              "permalink": "/docs/next/pixelratio",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/pixelratio.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "PanResponder",
                "permalink": "/docs/next/panresponder"
              },
              "next": {
                "title": "Platform",
                "permalink": "/docs/next/platform"
              }
            },
            {
              "unversionedId": "platform",
              "id": "platform",
              "isDocsHomePage": false,
              "title": "Platform",
              "description": "Example",
              "source": "@site/../docs/platform.md",
              "slug": "/platform",
              "permalink": "/docs/next/platform",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/platform.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "PixelRatio",
                "permalink": "/docs/next/pixelratio"
              },
              "next": {
                "title": "PlatformColor",
                "permalink": "/docs/next/platformcolor"
              }
            },
            {
              "unversionedId": "platform-specific-code",
              "id": "platform-specific-code",
              "isDocsHomePage": false,
              "title": "Platform Specific Code",
              "description": "When building a cross-platform app, you'll want to re-use as much code as possible. Scenarios may arise where it makes sense for the code to be different, for example you may want to implement separate visual components for Android and iOS.",
              "source": "@site/../docs/platform-specific-code.md",
              "slug": "/platform-specific-code",
              "permalink": "/docs/next/platform-specific-code",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/platform-specific-code.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Troubleshooting",
                "permalink": "/docs/next/troubleshooting"
              },
              "next": {
                "title": "More Resources",
                "permalink": "/docs/next/more-resources"
              }
            },
            {
              "unversionedId": "platformcolor",
              "id": "platformcolor",
              "isDocsHomePage": false,
              "title": "PlatformColor",
              "description": "`js",
              "source": "@site/../docs/platformcolor.md",
              "slug": "/platformcolor",
              "permalink": "/docs/next/platformcolor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/platformcolor.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Platform",
                "permalink": "/docs/next/platform"
              },
              "next": {
                "title": "Share",
                "permalink": "/docs/next/share"
              }
            },
            {
              "unversionedId": "pressable",
              "id": "pressable",
              "isDocsHomePage": false,
              "title": "Pressable",
              "description": "Pressable is a Core Component wrapper that can detect various stages of press interactions on any of its defined children.",
              "source": "@site/../docs/pressable.md",
              "slug": "/pressable",
              "permalink": "/docs/next/pressable",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/pressable.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Modal",
                "permalink": "/docs/next/modal"
              },
              "next": {
                "title": "RefreshControl",
                "permalink": "/docs/next/refreshcontrol"
              }
            },
            {
              "unversionedId": "pressevent",
              "id": "pressevent",
              "isDocsHomePage": false,
              "title": "PressEvent Object Type",
              "description": "PressEvent object is returned in the callback as a result of user press interaction, for example onPress in Button component.",
              "source": "@site/../docs/pressevent.md",
              "slug": "/pressevent",
              "permalink": "/docs/next/pressevent",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/pressevent.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "LayoutEvent Object Type",
                "permalink": "/docs/next/layoutevent"
              },
              "next": {
                "title": "React Node Object Type",
                "permalink": "/docs/next/react-node"
              }
            },
            {
              "unversionedId": "profile-hermes",
              "id": "profile-hermes",
              "isDocsHomePage": false,
              "title": "Profiling with Hermes",
              "description": "You can visualize JavaScript's performance in a React Native app using Hermes. Hermes is a small and lightweight JavaScript engine optimized for running React Native on Android (you can read more about using it with React Native here. Hermes helps improve app performance and also exposes ways to analyze the performance of the JavaScript that it runs.",
              "source": "@site/../docs/profile-hermes.md",
              "slug": "/profile-hermes",
              "permalink": "/docs/next/profile-hermes",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/profile-hermes.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Profiling",
                "permalink": "/docs/next/profiling"
              },
              "next": {
                "title": "JavaScript Environment",
                "permalink": "/docs/next/javascript-environment"
              }
            },
            {
              "unversionedId": "profiling",
              "id": "profiling",
              "isDocsHomePage": false,
              "title": "Profiling",
              "description": "Use the built-in profiler to get detailed information about work done in the JavaScript thread and main thread side-by-side. Access it by selecting Perf Monitor from the Debug menu.",
              "source": "@site/../docs/profiling.md",
              "slug": "/profiling",
              "permalink": "/docs/next/profiling",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/profiling.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "RAM Bundles and Inline Requires",
                "permalink": "/docs/next/ram-bundles-inline-requires"
              },
              "next": {
                "title": "Profiling with Hermes",
                "permalink": "/docs/next/profile-hermes"
              }
            },
            {
              "unversionedId": "progressbarandroid",
              "id": "progressbarandroid",
              "isDocsHomePage": false,
              "title": "🚧 ProgressBarAndroid",
              "description": "Deprecated. Use @react-native-community/progress-bar-android instead.",
              "source": "@site/../docs/progressbarandroid.md",
              "slug": "/progressbarandroid",
              "permalink": "/docs/next/progressbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/progressbarandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "progressviewios",
              "id": "progressviewios",
              "isDocsHomePage": false,
              "title": "🚧 ProgressViewIOS",
              "description": "Deprecated. Use @react-native-community/progress-view instead.",
              "source": "@site/../docs/progressviewios.md",
              "slug": "/progressviewios",
              "permalink": "/docs/next/progressviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/progressviewios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "props",
              "id": "props",
              "isDocsHomePage": false,
              "title": "Props",
              "description": "Most components can be customized when they are created, with different parameters. These created parameters are called props, short for properties.",
              "source": "@site/../docs/props.md",
              "slug": "/props",
              "permalink": "/docs/next/props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-to-app-store",
              "id": "publishing-to-app-store",
              "isDocsHomePage": false,
              "title": "Publishing to Apple App Store",
              "description": "The publishing process is the same as any other native iOS app, with some additional considerations to take into account.",
              "source": "@site/../docs/publishing-to-app-store.md",
              "slug": "/publishing-to-app-store",
              "permalink": "/docs/next/publishing-to-app-store",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/publishing-to-app-store.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "App Extensions",
                "permalink": "/docs/next/app-extensions"
              }
            },
            {
              "unversionedId": "pushnotificationios",
              "id": "pushnotificationios",
              "isDocsHomePage": false,
              "title": "🚧 PushNotificationIOS",
              "description": "Deprecated. Use @react-native-community/push-notification-ios instead.",
              "source": "@site/../docs/pushnotificationios.md",
              "slug": "/pushnotificationios",
              "permalink": "/docs/next/pushnotificationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/pushnotificationios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "ram-bundles-inline-requires",
              "id": "ram-bundles-inline-requires",
              "isDocsHomePage": false,
              "title": "RAM Bundles and Inline Requires",
              "description": "If you have a large app you may want to consider the Random Access Modules (RAM) bundle format, and using inline requires. This is useful for apps that have a large number of screens which may not ever be opened during a typical usage of the app. Generally it is useful to apps that have large amounts of code that are not needed for a while after startup. For instance the app includes complicated profile screens or lesser used features, but most sessions only involve visiting the main screen of the app for updates. We can optimize the loading of the bundle by using the RAM format and requiring those features and screens inline (when they are actually used).",
              "source": "@site/../docs/ram-bundles-inline-requires.md",
              "slug": "/ram-bundles-inline-requires",
              "permalink": "/docs/next/ram-bundles-inline-requires",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/ram-bundles-inline-requires.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/next/optimizing-flatlist-configuration"
              },
              "next": {
                "title": "Profiling",
                "permalink": "/docs/next/profiling"
              }
            },
            {
              "unversionedId": "react-node",
              "id": "react-node",
              "isDocsHomePage": false,
              "title": "React Node Object Type",
              "description": "A React Node is one of the following types:",
              "source": "@site/../docs/react-node.md",
              "slug": "/react-node",
              "permalink": "/docs/next/react-node",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/react-node.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "PressEvent Object Type",
                "permalink": "/docs/next/pressevent"
              },
              "next": {
                "title": "Rect Object Type",
                "permalink": "/docs/next/rect"
              }
            },
            {
              "unversionedId": "rect",
              "id": "rect",
              "isDocsHomePage": false,
              "title": "Rect Object Type",
              "description": "Rect accepts numeric pixel values to describe how far to extend a rectangular area. These values are added to the original area's size to expand it.",
              "source": "@site/../docs/rect.md",
              "slug": "/rect",
              "permalink": "/docs/next/rect",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/rect.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "React Node Object Type",
                "permalink": "/docs/next/react-node"
              },
              "next": {
                "title": "ViewToken Object Type",
                "permalink": "/docs/next/viewtoken"
              }
            },
            {
              "unversionedId": "refreshcontrol",
              "id": "refreshcontrol",
              "isDocsHomePage": false,
              "title": "RefreshControl",
              "description": "This component is used inside a ScrollView or ListView to add pull to refresh functionality. When the ScrollView is at scrollY: 0, swiping down triggers an onRefresh event.",
              "source": "@site/../docs/refreshcontrol.md",
              "slug": "/refreshcontrol",
              "permalink": "/docs/next/refreshcontrol",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/refreshcontrol.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Pressable",
                "permalink": "/docs/next/pressable"
              },
              "next": {
                "title": "ScrollView",
                "permalink": "/docs/next/scrollview"
              }
            },
            {
              "unversionedId": "running-on-device",
              "id": "running-on-device",
              "isDocsHomePage": false,
              "title": "Running On Device",
              "description": "It's always a good idea to test your app on an actual device before releasing it to your users. This document will guide you through the necessary steps to run your React Native app on a device and to get it ready for production.",
              "source": "@site/../docs/running-on-device.md",
              "slug": "/running-on-device",
              "permalink": "/docs/next/running-on-device",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/running-on-device.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/next/out-of-tree-platforms"
              },
              "next": {
                "title": "Fast Refresh",
                "permalink": "/docs/next/fast-refresh"
              }
            },
            {
              "unversionedId": "running-on-simulator-ios",
              "id": "running-on-simulator-ios",
              "isDocsHomePage": false,
              "title": "Running On Simulator",
              "description": "Starting the simulator",
              "source": "@site/../docs/running-on-simulator-ios.md",
              "slug": "/running-on-simulator-ios",
              "permalink": "/docs/next/running-on-simulator-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/running-on-simulator-ios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Linking Libraries",
                "permalink": "/docs/next/linking-libraries-ios"
              },
              "next": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/next/communication-ios"
              }
            },
            {
              "unversionedId": "safeareaview",
              "id": "safeareaview",
              "isDocsHomePage": false,
              "title": "SafeAreaView",
              "description": "The purpose of SafeAreaView is to render content within the safe area boundaries of a device. It is currently only applicable to iOS devices with iOS version 11 or later.",
              "source": "@site/../docs/safeareaview.md",
              "slug": "/safeareaview",
              "permalink": "/docs/next/safeareaview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/safeareaview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "InputAccessoryView",
                "permalink": "/docs/next/inputaccessoryview"
              },
              "next": {
                "title": "Image Style Props",
                "permalink": "/docs/next/image-style-props"
              }
            },
            {
              "unversionedId": "scrollview",
              "id": "scrollview",
              "isDocsHomePage": false,
              "title": "ScrollView",
              "description": "Component that wraps platform ScrollView while providing integration with touch locking \"responder\" system.",
              "source": "@site/../docs/scrollview.md",
              "slug": "/scrollview",
              "permalink": "/docs/next/scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/scrollview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "RefreshControl",
                "permalink": "/docs/next/refreshcontrol"
              },
              "next": {
                "title": "SectionList",
                "permalink": "/docs/next/sectionlist"
              }
            },
            {
              "unversionedId": "sectionlist",
              "id": "sectionlist",
              "isDocsHomePage": false,
              "title": "SectionList",
              "description": "A performant interface for rendering sectioned lists, supporting the most handy features:",
              "source": "@site/../docs/sectionlist.md",
              "slug": "/sectionlist",
              "permalink": "/docs/next/sectionlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/sectionlist.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "ScrollView",
                "permalink": "/docs/next/scrollview"
              },
              "next": {
                "title": "StatusBar",
                "permalink": "/docs/next/statusbar"
              }
            },
            {
              "unversionedId": "security",
              "id": "security",
              "isDocsHomePage": false,
              "title": "Security",
              "description": "Security is often overlooked when building apps. It is true that it is impossible to build software that is completely impenetrable—we’ve yet to invent a completely impenetrable lock (bank vaults do, after all, still get broken into). However, the probability of falling victim to a malicious attack or being exposed for a security vulnerability is inversely proportional to the effort you’re willing to put in to protecting your application against any such eventuality. Although an ordinary padlock is pickable, it is still much harder to get past than a cabinet hook!",
              "source": "@site/../docs/security.md",
              "slug": "/security",
              "permalink": "/docs/next/security",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/security.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Networking",
                "permalink": "/docs/next/network"
              },
              "next": {
                "title": "Native Modules Intro",
                "permalink": "/docs/next/native-modules-intro"
              }
            },
            {
              "unversionedId": "segmentedcontrolios",
              "id": "segmentedcontrolios",
              "isDocsHomePage": false,
              "title": "🚧 SegmentedControlIOS",
              "description": "Deprecated. Use @react-native-community/segmented-control instead.",
              "source": "@site/../docs/segmentedcontrolios.md",
              "slug": "/segmentedcontrolios",
              "permalink": "/docs/next/segmentedcontrolios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/segmentedcontrolios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "settings",
              "id": "settings",
              "isDocsHomePage": false,
              "title": "Settings",
              "description": "Settings serves as a wrapper for NSUserDefaults, a persistent key-value store available only on iOS.",
              "source": "@site/../docs/settings.md",
              "slug": "/settings",
              "permalink": "/docs/next/settings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/settings.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "DynamicColorIOS",
                "permalink": "/docs/next/dynamiccolorios"
              }
            },
            {
              "unversionedId": "shadow-props",
              "id": "shadow-props",
              "isDocsHomePage": false,
              "title": "Shadow Props",
              "description": "`SnackPlayer name=Shadow%20Props&supportedPlatforms=ios",
              "source": "@site/../docs/shadow-props.md",
              "slug": "/shadow-props",
              "permalink": "/docs/next/shadow-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/shadow-props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Layout Props",
                "permalink": "/docs/next/layout-props"
              },
              "next": {
                "title": "Text Style Props",
                "permalink": "/docs/next/text-style-props"
              }
            },
            {
              "unversionedId": "share",
              "id": "share",
              "isDocsHomePage": false,
              "title": "Share",
              "description": "Example",
              "source": "@site/../docs/share.md",
              "slug": "/share",
              "permalink": "/docs/next/share",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/share.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "PlatformColor",
                "permalink": "/docs/next/platformcolor"
              },
              "next": {
                "title": "StyleSheet",
                "permalink": "/docs/next/stylesheet"
              }
            },
            {
              "unversionedId": "signed-apk-android",
              "id": "signed-apk-android",
              "isDocsHomePage": false,
              "title": "Publishing to Google Play Store",
              "description": "Android requires that all apps be digitally signed with a certificate before they can be installed. In order to distribute your Android application via Google Play store it needs to be signed with a release key that then needs to be used for all future updates. Since 2017 it is possible for Google Play to manage signing releases automatically thanks to App Signing by Google Play functionality. However, before your application binary is uploaded to Google Play it needs to be signed with an upload key. The Signing Your Applications page on Android Developers documentation describes the topic in detail. This guide covers the process in brief, as well as lists the steps required to package the JavaScript bundle.",
              "source": "@site/../docs/signed-apk-android.md",
              "slug": "/signed-apk-android",
              "permalink": "/docs/next/signed-apk-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/signed-apk-android.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Headless JS",
                "permalink": "/docs/next/headless-js-android"
              },
              "next": {
                "title": "Linking Libraries",
                "permalink": "/docs/next/linking-libraries-ios"
              }
            },
            {
              "unversionedId": "slider",
              "id": "slider",
              "isDocsHomePage": false,
              "title": "🚧 Slider",
              "description": "Deprecated. Use @react-native-community/slider instead.",
              "source": "@site/../docs/slider.md",
              "slug": "/slider",
              "permalink": "/docs/next/slider",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/slider.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "state",
              "id": "state",
              "isDocsHomePage": false,
              "title": "State",
              "description": "There are two types of data that control a component: props and state. props are set by the parent and they are fixed throughout the lifetime of a component. For data that is going to change, we have to use state.",
              "source": "@site/../docs/state.md",
              "slug": "/state",
              "permalink": "/docs/next/state",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/state.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "statusbar",
              "id": "statusbar",
              "isDocsHomePage": false,
              "title": "StatusBar",
              "description": "Component to control the app status bar.",
              "source": "@site/../docs/statusbar.md",
              "slug": "/statusbar",
              "permalink": "/docs/next/statusbar",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/statusbar.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "SectionList",
                "permalink": "/docs/next/sectionlist"
              },
              "next": {
                "title": "Switch",
                "permalink": "/docs/next/switch"
              }
            },
            {
              "unversionedId": "statusbarios",
              "id": "statusbarios",
              "isDocsHomePage": false,
              "title": "🚧 StatusBarIOS",
              "description": "Deprecated. Use StatusBar for mutating the status bar.",
              "source": "@site/../docs/statusbarios.md",
              "slug": "/statusbarios",
              "permalink": "/docs/next/statusbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/statusbarios.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "style",
              "id": "style",
              "isDocsHomePage": false,
              "title": "Style",
              "description": "With React Native, you style your application using JavaScript. All of the core components accept a prop named style. The style names and values usually match how CSS works on the web, except names are written using camel casing, e.g. backgroundColor rather than background-color.",
              "source": "@site/../docs/style.md",
              "slug": "/style",
              "permalink": "/docs/next/style",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/style.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Upgrading to new versions",
                "permalink": "/docs/next/upgrading"
              },
              "next": {
                "title": "Height and Width",
                "permalink": "/docs/next/height-and-width"
              }
            },
            {
              "unversionedId": "stylesheet",
              "id": "stylesheet",
              "isDocsHomePage": false,
              "title": "StyleSheet",
              "description": "A StyleSheet is an abstraction similar to CSS StyleSheets",
              "source": "@site/../docs/stylesheet.md",
              "slug": "/stylesheet",
              "permalink": "/docs/next/stylesheet",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/stylesheet.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Share",
                "permalink": "/docs/next/share"
              },
              "next": {
                "title": "Systrace",
                "permalink": "/docs/next/systrace"
              }
            },
            {
              "unversionedId": "switch",
              "id": "switch",
              "isDocsHomePage": false,
              "title": "Switch",
              "description": "Renders a boolean input.",
              "source": "@site/../docs/switch.md",
              "slug": "/switch",
              "permalink": "/docs/next/switch",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/switch.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "StatusBar",
                "permalink": "/docs/next/statusbar"
              },
              "next": {
                "title": "Text",
                "permalink": "/docs/next/text"
              }
            },
            {
              "unversionedId": "symbolication",
              "id": "symbolication",
              "isDocsHomePage": false,
              "title": "Symbolicating a stack trace",
              "description": "If a React Native app throws an unhandled exception in a release build, the output may be obfuscated and hard to read:",
              "source": "@site/../docs/symbolication.md",
              "slug": "/symbolication",
              "permalink": "/docs/next/symbolication",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/symbolication.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Debugging",
                "permalink": "/docs/next/debugging"
              },
              "next": {
                "title": "Testing",
                "permalink": "/docs/next/testing-overview"
              }
            },
            {
              "unversionedId": "systrace",
              "id": "systrace",
              "isDocsHomePage": false,
              "title": "Systrace",
              "description": "Systrace is a standard Android marker-based profiling tool (and is installed when you install the Android platform-tools package). Profiled code blocks are surrounded by start/end markers which are then visualized in a colorful chart format. Both the Android SDK and React Native framework provide standard markers that you can visualize.",
              "source": "@site/../docs/systrace.md",
              "slug": "/systrace",
              "permalink": "/docs/next/systrace",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/systrace.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "StyleSheet",
                "permalink": "/docs/next/stylesheet"
              },
              "next": {
                "title": "Transforms",
                "permalink": "/docs/next/transforms"
              }
            },
            {
              "unversionedId": "testing-overview",
              "id": "testing-overview",
              "isDocsHomePage": false,
              "title": "Testing",
              "description": "This guide introduces React Native developers to the key concepts behind testing, how to write good tests, and what kinds of tests you can incorporate into your workflow.",
              "source": "@site/../docs/testing-overview.md",
              "slug": "/testing-overview",
              "permalink": "/docs/next/testing-overview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/testing-overview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Symbolicating a stack trace",
                "permalink": "/docs/next/symbolication"
              },
              "next": {
                "title": "Using Libraries",
                "permalink": "/docs/next/libraries"
              }
            },
            {
              "unversionedId": "text",
              "id": "text",
              "isDocsHomePage": false,
              "title": "Text",
              "description": "A React component for displaying text.",
              "source": "@site/../docs/text.md",
              "slug": "/text",
              "permalink": "/docs/next/text",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/text.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Switch",
                "permalink": "/docs/next/switch"
              },
              "next": {
                "title": "TextInput",
                "permalink": "/docs/next/textinput"
              }
            },
            {
              "unversionedId": "text-style-props",
              "id": "text-style-props",
              "isDocsHomePage": false,
              "title": "Text Style Props",
              "description": "Example",
              "source": "@site/../docs/text-style-props.md",
              "slug": "/text-style-props",
              "permalink": "/docs/next/text-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/text-style-props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Shadow Props",
                "permalink": "/docs/next/shadow-props"
              },
              "next": {
                "title": "View Style Props",
                "permalink": "/docs/next/view-style-props"
              }
            },
            {
              "unversionedId": "textinput",
              "id": "textinput",
              "isDocsHomePage": false,
              "title": "TextInput",
              "description": "A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.",
              "source": "@site/../docs/textinput.md",
              "slug": "/textinput",
              "permalink": "/docs/next/textinput",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/textinput.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Text",
                "permalink": "/docs/next/text"
              },
              "next": {
                "title": "TouchableHighlight",
                "permalink": "/docs/next/touchablehighlight"
              }
            },
            {
              "unversionedId": "timepickerandroid",
              "id": "timepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 TimePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/../docs/timepickerandroid.md",
              "slug": "/timepickerandroid",
              "permalink": "/docs/next/timepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/timepickerandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "timers",
              "id": "timers",
              "isDocsHomePage": false,
              "title": "Timers",
              "description": "Timers are an important part of an application and React Native implements the browser timers.",
              "source": "@site/../docs/timers.md",
              "slug": "/timers",
              "permalink": "/docs/next/timers",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/timers.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "JavaScript Environment",
                "permalink": "/docs/next/javascript-environment"
              },
              "next": {
                "title": "Using Hermes",
                "permalink": "/docs/next/hermes"
              }
            },
            {
              "unversionedId": "toastandroid",
              "id": "toastandroid",
              "isDocsHomePage": false,
              "title": "ToastAndroid",
              "description": "React Native's ToastAndroid API exposes the Android platform's ToastAndroid module as a JS module. It provides the method show(message, duration) which takes the following parameters:",
              "source": "@site/../docs/toastandroid.md",
              "slug": "/toastandroid",
              "permalink": "/docs/next/toastandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/toastandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/next/permissionsandroid"
              },
              "next": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/next/actionsheetios"
              }
            },
            {
              "unversionedId": "touchablehighlight",
              "id": "touchablehighlight",
              "isDocsHomePage": false,
              "title": "TouchableHighlight",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/../docs/touchablehighlight.md",
              "slug": "/touchablehighlight",
              "permalink": "/docs/next/touchablehighlight",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/touchablehighlight.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "TextInput",
                "permalink": "/docs/next/textinput"
              },
              "next": {
                "title": "TouchableOpacity",
                "permalink": "/docs/next/touchableopacity"
              }
            },
            {
              "unversionedId": "touchablenativefeedback",
              "id": "touchablenativefeedback",
              "isDocsHomePage": false,
              "title": "TouchableNativeFeedback",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/../docs/touchablenativefeedback.md",
              "slug": "/touchablenativefeedback",
              "permalink": "/docs/next/touchablenativefeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/touchablenativefeedback.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/next/drawerlayoutandroid"
              },
              "next": {
                "title": "InputAccessoryView",
                "permalink": "/docs/next/inputaccessoryview"
              }
            },
            {
              "unversionedId": "touchableopacity",
              "id": "touchableopacity",
              "isDocsHomePage": false,
              "title": "TouchableOpacity",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/../docs/touchableopacity.md",
              "slug": "/touchableopacity",
              "permalink": "/docs/next/touchableopacity",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/touchableopacity.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "TouchableHighlight",
                "permalink": "/docs/next/touchablehighlight"
              },
              "next": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/next/touchablewithoutfeedback"
              }
            },
            {
              "unversionedId": "touchablewithoutfeedback",
              "id": "touchablewithoutfeedback",
              "isDocsHomePage": false,
              "title": "TouchableWithoutFeedback",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/../docs/touchablewithoutfeedback.md",
              "slug": "/touchablewithoutfeedback",
              "permalink": "/docs/next/touchablewithoutfeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/touchablewithoutfeedback.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "TouchableOpacity",
                "permalink": "/docs/next/touchableopacity"
              },
              "next": {
                "title": "View",
                "permalink": "/docs/next/view"
              }
            },
            {
              "unversionedId": "transforms",
              "id": "transforms",
              "isDocsHomePage": false,
              "title": "Transforms",
              "description": "Transforms are style properties that will help you modify the appearance and position of your components using 2D or 3D transformations. However, once you apply transforms, the layouts remain the same around the transformed component hence it might overlap with the nearby components. You can apply margin to the transformed component, the nearby components or padding to the container to prevent such overlaps.",
              "source": "@site/../docs/transforms.md",
              "slug": "/transforms",
              "permalink": "/docs/next/transforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/transforms.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Systrace",
                "permalink": "/docs/next/systrace"
              },
              "next": {
                "title": "Vibration",
                "permalink": "/docs/next/vibration"
              }
            },
            {
              "unversionedId": "troubleshooting",
              "id": "troubleshooting",
              "isDocsHomePage": false,
              "title": "Troubleshooting",
              "description": "These are some common issues you may run into while setting up React Native. If you encounter something that is not listed here, try searching for the issue in GitHub.",
              "source": "@site/../docs/troubleshooting.md",
              "slug": "/troubleshooting",
              "permalink": "/docs/next/troubleshooting",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/troubleshooting.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Using List Views",
                "permalink": "/docs/next/using-a-listview"
              },
              "next": {
                "title": "Platform Specific Code",
                "permalink": "/docs/next/platform-specific-code"
              }
            },
            {
              "unversionedId": "tutorial",
              "id": "tutorial",
              "isDocsHomePage": false,
              "title": "Learn the Basics",
              "description": "React Native is like React, but it uses native components instead of web components as building blocks. So to understand the basic structure of a React Native app, you need to understand some of the basic React concepts, like JSX, components, state, and props. If you already know React, you still need to learn some React-Native-specific stuff, like the native components. This tutorial is aimed at all audiences, whether you have React experience or not.",
              "source": "@site/../docs/tutorial.md",
              "slug": "/tutorial",
              "permalink": "/docs/next/tutorial",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/tutorial.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "typescript",
              "id": "typescript",
              "isDocsHomePage": false,
              "title": "Using TypeScript",
              "description": "TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",
              "source": "@site/../docs/typescript.md",
              "slug": "/typescript",
              "permalink": "/docs/next/typescript",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/typescript.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Using Libraries",
                "permalink": "/docs/next/libraries"
              },
              "next": {
                "title": "Upgrading to new versions",
                "permalink": "/docs/next/upgrading"
              }
            },
            {
              "unversionedId": "upgrading",
              "id": "upgrading",
              "isDocsHomePage": false,
              "title": "Upgrading to new versions",
              "description": "Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Upgrading requires a small amount of effort, but we try to make it straightforward for you.",
              "source": "@site/../docs/upgrading.md",
              "slug": "/upgrading",
              "permalink": "/docs/next/upgrading",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/upgrading.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Using TypeScript",
                "permalink": "/docs/next/typescript"
              },
              "next": {
                "title": "Style",
                "permalink": "/docs/next/style"
              }
            },
            {
              "unversionedId": "usecolorscheme",
              "id": "usecolorscheme",
              "isDocsHomePage": false,
              "title": "useColorScheme",
              "description": "`jsx",
              "source": "@site/../docs/usecolorscheme.md",
              "slug": "/usecolorscheme",
              "permalink": "/docs/next/usecolorscheme",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/usecolorscheme.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Vibration",
                "permalink": "/docs/next/vibration"
              },
              "next": {
                "title": "useWindowDimensions",
                "permalink": "/docs/next/usewindowdimensions"
              }
            },
            {
              "unversionedId": "usewindowdimensions",
              "id": "usewindowdimensions",
              "isDocsHomePage": false,
              "title": "useWindowDimensions",
              "description": "`jsx",
              "source": "@site/../docs/usewindowdimensions.md",
              "slug": "/usewindowdimensions",
              "permalink": "/docs/next/usewindowdimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/usewindowdimensions.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "useColorScheme",
                "permalink": "/docs/next/usecolorscheme"
              },
              "next": {
                "title": "BackHandler",
                "permalink": "/docs/next/backhandler"
              }
            },
            {
              "unversionedId": "using-a-listview",
              "id": "using-a-listview",
              "isDocsHomePage": false,
              "title": "Using List Views",
              "description": "React Native provides a suite of components for presenting lists of data. Generally, you'll want to use either FlatList or SectionList.",
              "source": "@site/../docs/using-a-listview.md",
              "slug": "/using-a-listview",
              "permalink": "/docs/next/using-a-listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/using-a-listview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Using a ScrollView",
                "permalink": "/docs/next/using-a-scrollview"
              },
              "next": {
                "title": "Troubleshooting",
                "permalink": "/docs/next/troubleshooting"
              }
            },
            {
              "unversionedId": "using-a-scrollview",
              "id": "using-a-scrollview",
              "isDocsHomePage": false,
              "title": "Using a ScrollView",
              "description": "The ScrollView is a generic scrolling container that can contain multiple components and views. The scrollable items can be heterogeneous, and you can scroll both vertically and horizontally (by setting the horizontal property).",
              "source": "@site/../docs/using-a-scrollview.md",
              "slug": "/using-a-scrollview",
              "permalink": "/docs/next/using-a-scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/using-a-scrollview.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "docs",
              "previous": {
                "title": "Handling Text Input",
                "permalink": "/docs/next/handling-text-input"
              },
              "next": {
                "title": "Using List Views",
                "permalink": "/docs/next/using-a-listview"
              }
            },
            {
              "unversionedId": "vibration",
              "id": "vibration",
              "isDocsHomePage": false,
              "title": "Vibration",
              "description": "Vibrates the device.",
              "source": "@site/../docs/vibration.md",
              "slug": "/vibration",
              "permalink": "/docs/next/vibration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/vibration.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "api",
              "previous": {
                "title": "Transforms",
                "permalink": "/docs/next/transforms"
              },
              "next": {
                "title": "useColorScheme",
                "permalink": "/docs/next/usecolorscheme"
              }
            },
            {
              "unversionedId": "view",
              "id": "view",
              "isDocsHomePage": false,
              "title": "View",
              "description": "The most fundamental component for building a UI, View is a container that supports layout with flexbox, style, some touch handling, and accessibility controls. View maps directly to the native view equivalent on whatever platform React Native is running on, whether that is a UIView, `, android.view`, etc.",
              "source": "@site/../docs/view.md",
              "slug": "/view",
              "permalink": "/docs/next/view",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/view.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/next/touchablewithoutfeedback"
              },
              "next": {
                "title": "VirtualizedList",
                "permalink": "/docs/next/virtualizedlist"
              }
            },
            {
              "unversionedId": "view-style-props",
              "id": "view-style-props",
              "isDocsHomePage": false,
              "title": "View Style Props",
              "description": "Example",
              "source": "@site/../docs/view-style-props.md",
              "slug": "/view-style-props",
              "permalink": "/docs/next/view-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/view-style-props.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Text Style Props",
                "permalink": "/docs/next/text-style-props"
              },
              "next": {
                "title": "LayoutEvent Object Type",
                "permalink": "/docs/next/layoutevent"
              }
            },
            {
              "unversionedId": "viewpagerandroid",
              "id": "viewpagerandroid",
              "isDocsHomePage": false,
              "title": "🚧 ViewPagerAndroid",
              "description": "Deprecated. Use @react-native-community/viewpager instead.",
              "source": "@site/../docs/viewpagerandroid.md",
              "slug": "/viewpagerandroid",
              "permalink": "/docs/next/viewpagerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/viewpagerandroid.md",
              "version": "current",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "viewtoken",
              "id": "viewtoken",
              "isDocsHomePage": false,
              "title": "ViewToken Object Type",
              "description": "ViewToken object is returned as one of properties in the onViewableItemsChanged callback, for example in FlatList component. It is exported by ViewabilityHelper.js.",
              "source": "@site/../docs/viewtoken.md",
              "slug": "/viewtoken",
              "permalink": "/docs/next/viewtoken",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/viewtoken.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "Rect Object Type",
                "permalink": "/docs/next/rect"
              }
            },
            {
              "unversionedId": "virtualizedlist",
              "id": "virtualizedlist",
              "isDocsHomePage": false,
              "title": "VirtualizedList",
              "description": "Base implementation for the more convenient ` and  components, which are also better documented. In general, this should only really be used if you need more flexibility than FlatList` provides, e.g. for use with immutable data instead of plain arrays.",
              "source": "@site/../docs/virtualizedlist.md",
              "slug": "/virtualizedlist",
              "permalink": "/docs/next/virtualizedlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/../docs/virtualizedlist.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "sidebar": "components",
              "previous": {
                "title": "View",
                "permalink": "/docs/next/view"
              },
              "next": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/next/drawerlayoutandroid"
              }
            }
          ]
        },
        {
          "versionName": "0.63",
          "versionLabel": "0.63",
          "versionPath": "/docs",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_sidebars/version-0.63-sidebars.json",
          "docsDirPath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_docs/version-0.63",
          "mainDocId": "getting-started",
          "sidebars": {
            "version-0.63/docs": [
              {
                "collapsed": true,
                "type": "category",
                "label": "The Basics",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/getting-started"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/intro-react-native-components"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/intro-react"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/handling-text-input"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/using-a-scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/using-a-listview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/troubleshooting"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/platform-specific-code"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/more-resources"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Environment setup",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/environment-setup"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/integration-with-existing-apps"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/building-for-tv"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/out-of-tree-platforms"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Workflow",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/running-on-device"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/fast-refresh"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/debugging"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/testing-overview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/libraries"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/typescript"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/upgrading"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Design",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/style"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/height-and-width"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/flexbox"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/images"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/colors"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Interaction",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/handling-touches"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/navigation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/animations"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/gesture-responder-system"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Inclusion",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/accessibility"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Performance",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/performance"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/optimizing-flatlist-configuration"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/ram-bundles-inline-requires"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/profiling"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "JavaScript Runtime",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/javascript-environment"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/timers"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/hermes"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Connectivity",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/network"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/security"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Native Modules",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/native-modules-intro"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/native-modules-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/native-modules-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/native-modules-setup"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Native Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/native-components-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/native-components-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/direct-manipulation"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (Android)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/headless-js-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/signed-apk-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/removing-default-permissions"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (iOS)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/linking-libraries-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/running-on-simulator-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/communication-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/app-extensions"
                  }
                ]
              }
            ],
            "version-0.63/api": [
              {
                "collapsed": true,
                "type": "category",
                "label": "APIs",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/accessibilityinfo"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/alert"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/animated"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/animatedvalue"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/animatedvaluexy"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/appearance"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/appregistry"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/appstate"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/devsettings"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/dimensions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/easing"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/interactionmanager"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/keyboard"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/layoutanimation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/linking"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/panresponder"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/pixelratio"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/platform"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/platformcolor"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/share"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/stylesheet"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/systrace"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/transforms"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/vibration"
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "Hooks",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.63/usecolorscheme"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/usewindowdimensions"
                      }
                    ]
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "Android APIs",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.63/backhandler"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/permissionsandroid"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/toastandroid"
                      }
                    ]
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "iOS APIs",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.63/actionsheetios"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/dynamiccolorios"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/settings"
                      }
                    ]
                  }
                ]
              }
            ],
            "version-0.63/components": [
              {
                "collapsed": true,
                "type": "category",
                "label": "Core Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/components-and-apis"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/activityindicator"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/button"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/flatlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/image"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/imagebackground"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/keyboardavoidingview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/modal"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/pressable"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/refreshcontrol"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/sectionlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/statusbar"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/switch"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/text"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/textinput"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/touchablehighlight"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/touchableopacity"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/touchablewithoutfeedback"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/view"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/virtualizedlist"
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "Android Components",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.63/drawerlayoutandroid"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/touchablenativefeedback"
                      }
                    ]
                  },
                  {
                    "collapsed": false,
                    "type": "category",
                    "label": "iOS Components",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.63/inputaccessoryview"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/maskedviewios"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.63/safeareaview"
                      }
                    ]
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Props",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/image-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/layout-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/shadow-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/text-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/view-style-props"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Object Types",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.63/pressevent"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/react-node"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.63/rect"
                  }
                ]
              }
            ]
          },
          "permalinkToSidebar": {
            "/docs/accessibility": "version-0.63/docs",
            "/docs/accessibilityinfo": "version-0.63/api",
            "/docs/actionsheetios": "version-0.63/api",
            "/docs/activityindicator": "version-0.63/components",
            "/docs/alert": "version-0.63/api",
            "/docs/animated": "version-0.63/api",
            "/docs/animatedvalue": "version-0.63/api",
            "/docs/animatedvaluexy": "version-0.63/api",
            "/docs/animations": "version-0.63/docs",
            "/docs/app-extensions": "version-0.63/docs",
            "/docs/appearance": "version-0.63/api",
            "/docs/appregistry": "version-0.63/api",
            "/docs/appstate": "version-0.63/api",
            "/docs/backhandler": "version-0.63/api",
            "/docs/building-for-tv": "version-0.63/docs",
            "/docs/button": "version-0.63/components",
            "/docs/colors": "version-0.63/docs",
            "/docs/communication-ios": "version-0.63/docs",
            "/docs/components-and-apis": "version-0.63/components",
            "/docs/debugging": "version-0.63/docs",
            "/docs/devsettings": "version-0.63/api",
            "/docs/dimensions": "version-0.63/api",
            "/docs/direct-manipulation": "version-0.63/docs",
            "/docs/drawerlayoutandroid": "version-0.63/components",
            "/docs/dynamiccolorios": "version-0.63/api",
            "/docs/easing": "version-0.63/api",
            "/docs/environment-setup": "version-0.63/docs",
            "/docs/fast-refresh": "version-0.63/docs",
            "/docs/flatlist": "version-0.63/components",
            "/docs/flexbox": "version-0.63/docs",
            "/docs/gesture-responder-system": "version-0.63/docs",
            "/docs/getting-started": "version-0.63/docs",
            "/docs/handling-text-input": "version-0.63/docs",
            "/docs/handling-touches": "version-0.63/docs",
            "/docs/headless-js-android": "version-0.63/docs",
            "/docs/height-and-width": "version-0.63/docs",
            "/docs/hermes": "version-0.63/docs",
            "/docs/image": "version-0.63/components",
            "/docs/image-style-props": "version-0.63/components",
            "/docs/imagebackground": "version-0.63/components",
            "/docs/images": "version-0.63/docs",
            "/docs/inputaccessoryview": "version-0.63/components",
            "/docs/integration-with-existing-apps": "version-0.63/docs",
            "/docs/interactionmanager": "version-0.63/api",
            "/docs/intro-react": "version-0.63/docs",
            "/docs/intro-react-native-components": "version-0.63/docs",
            "/docs/javascript-environment": "version-0.63/docs",
            "/docs/keyboard": "version-0.63/api",
            "/docs/keyboardavoidingview": "version-0.63/components",
            "/docs/layout-props": "version-0.63/components",
            "/docs/layoutanimation": "version-0.63/api",
            "/docs/libraries": "version-0.63/docs",
            "/docs/linking": "version-0.63/api",
            "/docs/linking-libraries-ios": "version-0.63/docs",
            "/docs/maskedviewios": "version-0.63/components",
            "/docs/modal": "version-0.63/components",
            "/docs/more-resources": "version-0.63/docs",
            "/docs/native-components-android": "version-0.63/docs",
            "/docs/native-components-ios": "version-0.63/docs",
            "/docs/native-modules-android": "version-0.63/docs",
            "/docs/native-modules-intro": "version-0.63/docs",
            "/docs/native-modules-ios": "version-0.63/docs",
            "/docs/native-modules-setup": "version-0.63/docs",
            "/docs/navigation": "version-0.63/docs",
            "/docs/network": "version-0.63/docs",
            "/docs/optimizing-flatlist-configuration": "version-0.63/docs",
            "/docs/out-of-tree-platforms": "version-0.63/docs",
            "/docs/panresponder": "version-0.63/api",
            "/docs/performance": "version-0.63/docs",
            "/docs/permissionsandroid": "version-0.63/api",
            "/docs/pixelratio": "version-0.63/api",
            "/docs/platform": "version-0.63/api",
            "/docs/platform-specific-code": "version-0.63/docs",
            "/docs/platformcolor": "version-0.63/api",
            "/docs/pressable": "version-0.63/components",
            "/docs/pressevent": "version-0.63/components",
            "/docs/profiling": "version-0.63/docs",
            "/docs/ram-bundles-inline-requires": "version-0.63/docs",
            "/docs/react-node": "version-0.63/components",
            "/docs/rect": "version-0.63/components",
            "/docs/refreshcontrol": "version-0.63/components",
            "/docs/removing-default-permissions": "version-0.63/docs",
            "/docs/running-on-device": "version-0.63/docs",
            "/docs/running-on-simulator-ios": "version-0.63/docs",
            "/docs/safeareaview": "version-0.63/components",
            "/docs/scrollview": "version-0.63/components",
            "/docs/sectionlist": "version-0.63/components",
            "/docs/security": "version-0.63/docs",
            "/docs/settings": "version-0.63/api",
            "/docs/shadow-props": "version-0.63/components",
            "/docs/share": "version-0.63/api",
            "/docs/signed-apk-android": "version-0.63/docs",
            "/docs/statusbar": "version-0.63/components",
            "/docs/style": "version-0.63/docs",
            "/docs/stylesheet": "version-0.63/api",
            "/docs/switch": "version-0.63/components",
            "/docs/systrace": "version-0.63/api",
            "/docs/testing-overview": "version-0.63/docs",
            "/docs/text": "version-0.63/components",
            "/docs/text-style-props": "version-0.63/components",
            "/docs/textinput": "version-0.63/components",
            "/docs/timers": "version-0.63/docs",
            "/docs/toastandroid": "version-0.63/api",
            "/docs/touchablehighlight": "version-0.63/components",
            "/docs/touchablenativefeedback": "version-0.63/components",
            "/docs/touchableopacity": "version-0.63/components",
            "/docs/touchablewithoutfeedback": "version-0.63/components",
            "/docs/transforms": "version-0.63/api",
            "/docs/troubleshooting": "version-0.63/docs",
            "/docs/typescript": "version-0.63/docs",
            "/docs/upgrading": "version-0.63/docs",
            "/docs/usecolorscheme": "version-0.63/api",
            "/docs/usewindowdimensions": "version-0.63/api",
            "/docs/using-a-listview": "version-0.63/docs",
            "/docs/using-a-scrollview": "version-0.63/docs",
            "/docs/vibration": "version-0.63/api",
            "/docs/view": "version-0.63/components",
            "/docs/view-style-props": "version-0.63/components",
            "/docs/virtualizedlist": "version-0.63/components"
          },
          "docs": [
            {
              "unversionedId": "_getting-started-linux-android",
              "id": "version-0.63/_getting-started-linux-android",
              "isDocsHomePage": false,
              "title": "_getting-started-linux-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.63/_getting-started-linux-android.md",
              "slug": "/_getting-started-linux-android",
              "permalink": "/docs/_getting-started-linux-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_getting-started-linux-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-android",
              "id": "version-0.63/_getting-started-macos-android",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.63/_getting-started-macos-android.md",
              "slug": "/_getting-started-macos-android",
              "permalink": "/docs/_getting-started-macos-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_getting-started-macos-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-ios",
              "id": "version-0.63/_getting-started-macos-ios",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-ios",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.63/_getting-started-macos-ios.md",
              "slug": "/_getting-started-macos-ios",
              "permalink": "/docs/_getting-started-macos-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_getting-started-macos-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-windows-android",
              "id": "version-0.63/_getting-started-windows-android",
              "isDocsHomePage": false,
              "title": "_getting-started-windows-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.63/_getting-started-windows-android.md",
              "slug": "/_getting-started-windows-android",
              "permalink": "/docs/_getting-started-windows-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_getting-started-windows-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-java",
              "id": "version-0.63/_integration-with-exisiting-apps-java",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-java",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.63/_integration-with-exisiting-apps-java.md",
              "slug": "/_integration-with-exisiting-apps-java",
              "permalink": "/docs/_integration-with-exisiting-apps-java",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_integration-with-exisiting-apps-java.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-objc",
              "id": "version-0.63/_integration-with-exisiting-apps-objc",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-objc",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.63/_integration-with-exisiting-apps-objc.md",
              "slug": "/_integration-with-exisiting-apps-objc",
              "permalink": "/docs/_integration-with-exisiting-apps-objc",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_integration-with-exisiting-apps-objc.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-swift",
              "id": "version-0.63/_integration-with-exisiting-apps-swift",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-swift",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.63/_integration-with-exisiting-apps-swift.md",
              "slug": "/_integration-with-exisiting-apps-swift",
              "permalink": "/docs/_integration-with-exisiting-apps-swift",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/_integration-with-exisiting-apps-swift.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "accessibility",
              "id": "version-0.63/accessibility",
              "isDocsHomePage": false,
              "title": "Accessibility",
              "description": "Create mobile apps accessible to assistive technology with React Native's suite of APIs designed to work with Android and iOS.",
              "source": "@site/versioned_docs/version-0.63/accessibility.md",
              "slug": "/accessibility",
              "permalink": "/docs/accessibility",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/accessibility.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Gesture Responder System",
                "permalink": "/docs/gesture-responder-system"
              },
              "next": {
                "title": "Performance Overview",
                "permalink": "/docs/performance"
              }
            },
            {
              "unversionedId": "accessibilityinfo",
              "id": "version-0.63/accessibilityinfo",
              "isDocsHomePage": false,
              "title": "AccessibilityInfo",
              "description": "Sometimes it's useful to know whether or not the device has a screen reader that is currently active. The AccessibilityInfo API is designed for this purpose. You can use it to query the current state of the screen reader as well as to register to be notified when the state of the screen reader changes.",
              "source": "@site/versioned_docs/version-0.63/accessibilityinfo.md",
              "slug": "/accessibilityinfo",
              "permalink": "/docs/accessibilityinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/accessibilityinfo.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "next": {
                "title": "Alert",
                "permalink": "/docs/alert"
              }
            },
            {
              "unversionedId": "actionsheetios",
              "id": "version-0.63/actionsheetios",
              "isDocsHomePage": false,
              "title": "ActionSheetIOS",
              "description": "Displays native to iOS Action Sheet component.",
              "source": "@site/versioned_docs/version-0.63/actionsheetios.md",
              "slug": "/actionsheetios",
              "permalink": "/docs/actionsheetios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/actionsheetios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "ToastAndroid",
                "permalink": "/docs/toastandroid"
              },
              "next": {
                "title": "DynamicColorIOS",
                "permalink": "/docs/dynamiccolorios"
              }
            },
            {
              "unversionedId": "activityindicator",
              "id": "version-0.63/activityindicator",
              "isDocsHomePage": false,
              "title": "ActivityIndicator",
              "description": "Displays a circular loading indicator.",
              "source": "@site/versioned_docs/version-0.63/activityindicator.md",
              "slug": "/activityindicator",
              "permalink": "/docs/activityindicator",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/activityindicator.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Core Components and APIs",
                "permalink": "/docs/components-and-apis"
              },
              "next": {
                "title": "Button",
                "permalink": "/docs/button"
              }
            },
            {
              "unversionedId": "alert",
              "id": "version-0.63/alert",
              "isDocsHomePage": false,
              "title": "Alert",
              "description": "Launches an alert dialog with the specified title and message.",
              "source": "@site/versioned_docs/version-0.63/alert.md",
              "slug": "/alert",
              "permalink": "/docs/alert",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/alert.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "AccessibilityInfo",
                "permalink": "/docs/accessibilityinfo"
              },
              "next": {
                "title": "Animated",
                "permalink": "/docs/animated"
              }
            },
            {
              "unversionedId": "alertios",
              "id": "version-0.63/alertios",
              "isDocsHomePage": false,
              "title": "🚧 AlertIOS",
              "description": "Deprecated. Use Alert instead.",
              "source": "@site/versioned_docs/version-0.63/alertios.md",
              "slug": "/alertios",
              "permalink": "/docs/alertios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/alertios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animated",
              "id": "version-0.63/animated",
              "isDocsHomePage": false,
              "title": "Animated",
              "description": "The Animated library is designed to make animations fluid, powerful, and painless to build and maintain. Animated focuses on declarative relationships between inputs and outputs, configurable transforms in between, and start/stop methods to control time-based animation execution.",
              "source": "@site/versioned_docs/version-0.63/animated.md",
              "slug": "/animated",
              "permalink": "/docs/animated",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/animated.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Alert",
                "permalink": "/docs/alert"
              },
              "next": {
                "title": "Animated.Value",
                "permalink": "/docs/animatedvalue"
              }
            },
            {
              "unversionedId": "animatedvalue",
              "id": "version-0.63/animatedvalue",
              "isDocsHomePage": false,
              "title": "Animated.Value",
              "description": "Standard value for driving animations. One Animated.Value can drive multiple properties in a synchronized fashion, but can only be driven by one mechanism at a time. Using a new mechanism (e.g. starting a new animation, or calling setValue) will stop any previous ones.",
              "source": "@site/versioned_docs/version-0.63/animatedvalue.md",
              "slug": "/animatedvalue",
              "permalink": "/docs/animatedvalue",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/animatedvalue.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Animated",
                "permalink": "/docs/animated"
              },
              "next": {
                "title": "Animated.ValueXY",
                "permalink": "/docs/animatedvaluexy"
              }
            },
            {
              "unversionedId": "animatedvaluexy",
              "id": "version-0.63/animatedvaluexy",
              "isDocsHomePage": false,
              "title": "Animated.ValueXY",
              "description": "2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal Animated.Value, but multiplexed. Contains two regular Animated.Values under the hood.",
              "source": "@site/versioned_docs/version-0.63/animatedvaluexy.md",
              "slug": "/animatedvaluexy",
              "permalink": "/docs/animatedvaluexy",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/animatedvaluexy.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Animated.Value",
                "permalink": "/docs/animatedvalue"
              },
              "next": {
                "title": "Appearance",
                "permalink": "/docs/appearance"
              }
            },
            {
              "unversionedId": "animations",
              "id": "version-0.63/animations",
              "isDocsHomePage": false,
              "title": "Animations",
              "description": "Animations are very important to create a great user experience. Stationary objects must overcome inertia as they start moving. Objects in motion have momentum and rarely come to a stop immediately. Animations allow you to convey physically believable motion in your interface.",
              "source": "@site/versioned_docs/version-0.63/animations.md",
              "slug": "/animations",
              "permalink": "/docs/animations",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/animations.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/navigation"
              },
              "next": {
                "title": "Gesture Responder System",
                "permalink": "/docs/gesture-responder-system"
              }
            },
            {
              "unversionedId": "app-extensions",
              "id": "version-0.63/app-extensions",
              "isDocsHomePage": false,
              "title": "App Extensions",
              "description": "App extensions let you provide custom functionality and content outside of your main app. There are different types of app extensions on iOS, and they are all covered in the App Extension Programming Guide. In this guide, we'll briefly cover how you may take advantage of app extensions on iOS.",
              "source": "@site/versioned_docs/version-0.63/app-extensions.md",
              "slug": "/app-extensions",
              "permalink": "/docs/app-extensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/app-extensions.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/communication-ios"
              }
            },
            {
              "unversionedId": "appearance",
              "id": "version-0.63/appearance",
              "isDocsHomePage": false,
              "title": "Appearance",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.63/appearance.md",
              "slug": "/appearance",
              "permalink": "/docs/appearance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/appearance.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Animated.ValueXY",
                "permalink": "/docs/animatedvaluexy"
              },
              "next": {
                "title": "AppRegistry",
                "permalink": "/docs/appregistry"
              }
            },
            {
              "unversionedId": "appregistry",
              "id": "version-0.63/appregistry",
              "isDocsHomePage": false,
              "title": "AppRegistry",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.63/appregistry.md",
              "slug": "/appregistry",
              "permalink": "/docs/appregistry",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/appregistry.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Appearance",
                "permalink": "/docs/appearance"
              },
              "next": {
                "title": "AppState",
                "permalink": "/docs/appstate"
              }
            },
            {
              "unversionedId": "appstate",
              "id": "version-0.63/appstate",
              "isDocsHomePage": false,
              "title": "AppState",
              "description": "AppState can tell you if the app is in the foreground or background, and notify you when the state changes.",
              "source": "@site/versioned_docs/version-0.63/appstate.md",
              "slug": "/appstate",
              "permalink": "/docs/appstate",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/appstate.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "AppRegistry",
                "permalink": "/docs/appregistry"
              },
              "next": {
                "title": "DevSettings",
                "permalink": "/docs/devsettings"
              }
            },
            {
              "unversionedId": "asyncstorage",
              "id": "version-0.63/asyncstorage",
              "isDocsHomePage": false,
              "title": "🚧 AsyncStorage",
              "description": "Deprecated. Use @react-native-async-storage/async-storage instead.",
              "source": "@site/versioned_docs/version-0.63/asyncstorage.md",
              "slug": "/asyncstorage",
              "permalink": "/docs/asyncstorage",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/asyncstorage.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backandroid",
              "id": "version-0.63/backandroid",
              "isDocsHomePage": false,
              "title": "BackAndroid",
              "description": "Deprecated. Use BackHandler instead.",
              "source": "@site/versioned_docs/version-0.63/backandroid.md",
              "slug": "/backandroid",
              "permalink": "/docs/backandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/backandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backhandler",
              "id": "version-0.63/backhandler",
              "isDocsHomePage": false,
              "title": "BackHandler",
              "description": "The Backhandler API detects hardware button presses for back navigation, lets you register event listeners for the system's back action, and lets you control how your application responds. It is Android-only.",
              "source": "@site/versioned_docs/version-0.63/backhandler.md",
              "slug": "/backhandler",
              "permalink": "/docs/backhandler",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/backhandler.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "useWindowDimensions",
                "permalink": "/docs/usewindowdimensions"
              },
              "next": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/permissionsandroid"
              }
            },
            {
              "unversionedId": "building-for-tv",
              "id": "version-0.63/building-for-tv",
              "isDocsHomePage": false,
              "title": "Building For TV Devices",
              "description": "TV devices support has been implemented with the intention of making existing React Native applications work on Apple TV and Android TV, with few or no changes needed in the JavaScript code for the applications.",
              "source": "@site/versioned_docs/version-0.63/building-for-tv.md",
              "slug": "/building-for-tv",
              "permalink": "/docs/building-for-tv",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/building-for-tv.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/integration-with-existing-apps"
              },
              "next": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/out-of-tree-platforms"
              }
            },
            {
              "unversionedId": "button",
              "id": "version-0.63/button",
              "isDocsHomePage": false,
              "title": "Button",
              "description": "A basic button component that should render nicely on any platform. Supports a minimal level of customization.",
              "source": "@site/versioned_docs/version-0.63/button.md",
              "slug": "/button",
              "permalink": "/docs/button",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/button.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "ActivityIndicator",
                "permalink": "/docs/activityindicator"
              },
              "next": {
                "title": "FlatList",
                "permalink": "/docs/flatlist"
              }
            },
            {
              "unversionedId": "cameraroll",
              "id": "version-0.63/cameraroll",
              "isDocsHomePage": false,
              "title": "🚧 CameraRoll",
              "description": "Deprecated. Use @react-native-community/cameraroll instead.",
              "source": "@site/versioned_docs/version-0.63/cameraroll.md",
              "slug": "/cameraroll",
              "permalink": "/docs/cameraroll",
              "editUrl": "https://github.com/facebook/react-native-website/edit/master/website/versioned_docs/version-0.58/cameraroll.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "checkbox",
              "id": "version-0.63/checkbox",
              "isDocsHomePage": false,
              "title": "🚧 CheckBox",
              "description": "Deprecated. Use @react-native-community/checkbox instead.",
              "source": "@site/versioned_docs/version-0.63/checkbox.md",
              "slug": "/checkbox",
              "permalink": "/docs/checkbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/checkbox.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "clipboard",
              "id": "version-0.63/clipboard",
              "isDocsHomePage": false,
              "title": "🚧 Clipboard",
              "description": "Deprecated. Use @react-native-community/clipboard instead.",
              "source": "@site/versioned_docs/version-0.63/clipboard.md",
              "slug": "/clipboard",
              "permalink": "/docs/clipboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/clipboard.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "colors",
              "id": "version-0.63/colors",
              "isDocsHomePage": false,
              "title": "Color Reference",
              "description": "Components in React Native are styled using JavaScript. Color properties usually match how CSS works on the web. General guides on the color usage on each platform could be found below:",
              "source": "@site/versioned_docs/version-0.63/colors.md",
              "slug": "/colors",
              "permalink": "/docs/colors",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/colors.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Images",
                "permalink": "/docs/images"
              },
              "next": {
                "title": "Handling Touches",
                "permalink": "/docs/handling-touches"
              }
            },
            {
              "unversionedId": "communication-android",
              "id": "version-0.63/communication-android",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.63/communication-android.md",
              "slug": "/communication-android",
              "permalink": "/docs/communication-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/communication-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "communication-ios",
              "id": "version-0.63/communication-ios",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.63/communication-ios.md",
              "slug": "/communication-ios",
              "permalink": "/docs/communication-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/communication-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Running On Simulator",
                "permalink": "/docs/running-on-simulator-ios"
              },
              "next": {
                "title": "App Extensions",
                "permalink": "/docs/app-extensions"
              }
            },
            {
              "unversionedId": "components-and-apis",
              "id": "version-0.63/components-and-apis",
              "isDocsHomePage": false,
              "title": "Core Components and APIs",
              "description": "React Native provides a number of built-in Core Components ready for you to use in your app. You can find them all in the left sidebar (or menu above, if you are on a narrow screen). If you're not sure where to get started, take a look at the following categories:",
              "source": "@site/versioned_docs/version-0.63/components-and-apis.md",
              "slug": "/components-and-apis",
              "permalink": "/docs/components-and-apis",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/components-and-apis.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "next": {
                "title": "ActivityIndicator",
                "permalink": "/docs/activityindicator"
              }
            },
            {
              "unversionedId": "custom-webview-android",
              "id": "version-0.63/custom-webview-android",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.63/custom-webview-android.md",
              "slug": "/custom-webview-android",
              "permalink": "/docs/custom-webview-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/custom-webview-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "custom-webview-ios",
              "id": "version-0.63/custom-webview-ios",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.63/custom-webview-ios.md",
              "slug": "/custom-webview-ios",
              "permalink": "/docs/custom-webview-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/custom-webview-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerandroid",
              "id": "version-0.63/datepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.63/datepickerandroid.md",
              "slug": "/datepickerandroid",
              "permalink": "/docs/datepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/datepickerandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerios",
              "id": "version-0.63/datepickerios",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerIOS",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.63/datepickerios.md",
              "slug": "/datepickerios",
              "permalink": "/docs/datepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/datepickerios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "debugging",
              "id": "version-0.63/debugging",
              "isDocsHomePage": false,
              "title": "Debugging",
              "description": "Accessing the In-App Developer Menu",
              "source": "@site/versioned_docs/version-0.63/debugging.md",
              "slug": "/debugging",
              "permalink": "/docs/debugging",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/debugging.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Fast Refresh",
                "permalink": "/docs/fast-refresh"
              },
              "next": {
                "title": "Testing",
                "permalink": "/docs/testing-overview"
              }
            },
            {
              "unversionedId": "devsettings",
              "id": "version-0.63/devsettings",
              "isDocsHomePage": false,
              "title": "DevSettings",
              "description": "The DevSettings module exposes methods for customizing settings for developers in development.",
              "source": "@site/versioned_docs/version-0.63/devsettings.md",
              "slug": "/devsettings",
              "permalink": "/docs/devsettings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/devsettings.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "AppState",
                "permalink": "/docs/appstate"
              },
              "next": {
                "title": "Dimensions",
                "permalink": "/docs/dimensions"
              }
            },
            {
              "unversionedId": "dimensions",
              "id": "version-0.63/dimensions",
              "isDocsHomePage": false,
              "title": "Dimensions",
              "description": "useWindowDimensions is the preferred API for React components. Unlike Dimensions, it updates as the window's dimensions update. This works nicely with the React paradigm.",
              "source": "@site/versioned_docs/version-0.63/dimensions.md",
              "slug": "/dimensions",
              "permalink": "/docs/dimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/dimensions.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "DevSettings",
                "permalink": "/docs/devsettings"
              },
              "next": {
                "title": "Easing",
                "permalink": "/docs/easing"
              }
            },
            {
              "unversionedId": "direct-manipulation",
              "id": "version-0.63/direct-manipulation",
              "isDocsHomePage": false,
              "title": "Direct Manipulation",
              "description": "It is sometimes necessary to make changes directly to a component without using state/props to trigger a re-render of the entire subtree. When using React in the browser for example, you sometimes need to directly modify a DOM node, and the same is true for views in mobile apps. setNativeProps is the React Native equivalent to setting properties directly on a DOM node.",
              "source": "@site/versioned_docs/version-0.63/direct-manipulation.md",
              "slug": "/direct-manipulation",
              "permalink": "/docs/direct-manipulation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/direct-manipulation.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "iOS Native UI Components",
                "permalink": "/docs/native-components-ios"
              },
              "next": {
                "title": "Headless JS",
                "permalink": "/docs/headless-js-android"
              }
            },
            {
              "unversionedId": "drawerlayoutandroid",
              "id": "version-0.63/drawerlayoutandroid",
              "isDocsHomePage": false,
              "title": "DrawerLayoutAndroid",
              "description": "React component that wraps the platform DrawerLayout (Android only). The Drawer (typically used for navigation) is rendered with renderNavigationView and direct children are the main view (where your content goes). The navigation view is initially not visible on the screen, but can be pulled in from the side of the window specified by the drawerPosition prop and its width can be set by the drawerWidth prop.",
              "source": "@site/versioned_docs/version-0.63/drawerlayoutandroid.md",
              "slug": "/drawerlayoutandroid",
              "permalink": "/docs/drawerlayoutandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/drawerlayoutandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "VirtualizedList",
                "permalink": "/docs/virtualizedlist"
              },
              "next": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/touchablenativefeedback"
              }
            },
            {
              "unversionedId": "dynamiccolorios",
              "id": "version-0.63/dynamiccolorios",
              "isDocsHomePage": false,
              "title": "DynamicColorIOS",
              "description": "The DynamicColorIOS function is a platform color type specific to iOS.",
              "source": "@site/versioned_docs/version-0.63/dynamiccolorios.md",
              "slug": "/dynamiccolorios",
              "permalink": "/docs/dynamiccolorios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/dynamiccolorios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/actionsheetios"
              },
              "next": {
                "title": "Settings",
                "permalink": "/docs/settings"
              }
            },
            {
              "unversionedId": "easing",
              "id": "version-0.63/easing",
              "isDocsHomePage": false,
              "title": "Easing",
              "description": "The Easing module implements common easing functions. This module is used by Animated.timing() to convey physically believable motion in animations.",
              "source": "@site/versioned_docs/version-0.63/easing.md",
              "slug": "/easing",
              "permalink": "/docs/easing",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/easing.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Dimensions",
                "permalink": "/docs/dimensions"
              },
              "next": {
                "title": "InteractionManager",
                "permalink": "/docs/interactionmanager"
              }
            },
            {
              "unversionedId": "environment-setup",
              "id": "version-0.63/environment-setup",
              "isDocsHomePage": false,
              "title": "Setting up the development environment",
              "description": "This page will help you install and build your first React Native app.",
              "source": "@site/versioned_docs/version-0.63/getting-started.md",
              "slug": "/environment-setup",
              "permalink": "/docs/environment-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/getting-started.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "More Resources",
                "permalink": "/docs/more-resources"
              },
              "next": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/integration-with-existing-apps"
              }
            },
            {
              "unversionedId": "fast-refresh",
              "id": "version-0.63/fast-refresh",
              "isDocsHomePage": false,
              "title": "Fast Refresh",
              "description": "Fast Refresh is a React Native feature that allows you to get near-instant feedback for changes in your React components. Fast Refresh is enabled by default, and you can toggle \"Enable Fast Refresh\" in the React Native developer menu. With Fast Refresh enabled, most edits should be visible within a second or two.",
              "source": "@site/versioned_docs/version-0.63/fast-refresh.md",
              "slug": "/fast-refresh",
              "permalink": "/docs/fast-refresh",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/fast-refresh.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Running On Device",
                "permalink": "/docs/running-on-device"
              },
              "next": {
                "title": "Debugging",
                "permalink": "/docs/debugging"
              }
            },
            {
              "unversionedId": "flatlist",
              "id": "version-0.63/flatlist",
              "isDocsHomePage": false,
              "title": "FlatList",
              "description": "A performant interface for rendering basic, flat lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.63/flatlist.md",
              "slug": "/flatlist",
              "permalink": "/docs/flatlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/flatlist.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Button",
                "permalink": "/docs/button"
              },
              "next": {
                "title": "Image",
                "permalink": "/docs/image"
              }
            },
            {
              "unversionedId": "flexbox",
              "id": "version-0.63/flexbox",
              "isDocsHomePage": false,
              "title": "Layout with Flexbox",
              "description": "A component can specify the layout of its children using the Flexbox algorithm. Flexbox is designed to provide a consistent layout on different screen sizes.",
              "source": "@site/versioned_docs/version-0.63/flexbox.md",
              "slug": "/flexbox",
              "permalink": "/docs/flexbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/flexbox.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Height and Width",
                "permalink": "/docs/height-and-width"
              },
              "next": {
                "title": "Images",
                "permalink": "/docs/images"
              }
            },
            {
              "unversionedId": "geolocation",
              "id": "version-0.63/geolocation",
              "isDocsHomePage": false,
              "title": "🚧 Geolocation",
              "description": "Deprecated. Use @react-native-community/geolocation instead.",
              "source": "@site/versioned_docs/version-0.63/geolocation.md",
              "slug": "/geolocation",
              "permalink": "/docs/geolocation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/geolocation.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "gesture-responder-system",
              "id": "version-0.63/gesture-responder-system",
              "isDocsHomePage": false,
              "title": "Gesture Responder System",
              "description": "The gesture responder system manages the lifecycle of gestures in your app. A touch can go through several phases as the app determines what the user's intention is. For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping. This can even change during the duration of a touch. There can also be multiple simultaneous touches.",
              "source": "@site/versioned_docs/version-0.63/gesture-responder-system.md",
              "slug": "/gesture-responder-system",
              "permalink": "/docs/gesture-responder-system",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/gesture-responder-system.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Animations",
                "permalink": "/docs/animations"
              },
              "next": {
                "title": "Accessibility",
                "permalink": "/docs/accessibility"
              }
            },
            {
              "unversionedId": "getting-started",
              "id": "version-0.63/getting-started",
              "isDocsHomePage": false,
              "title": "Introduction",
              "description": "This helpful guide lays out the prerequisites for learning React Native, using these docs, and setting up your environment.",
              "source": "@site/versioned_docs/version-0.63/introduction.md",
              "slug": "/getting-started",
              "permalink": "/docs/getting-started",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/introduction.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "next": {
                "title": "Core Components and Native Components",
                "permalink": "/docs/intro-react-native-components"
              }
            },
            {
              "unversionedId": "handling-text-input",
              "id": "version-0.63/handling-text-input",
              "isDocsHomePage": false,
              "title": "Handling Text Input",
              "description": "TextInput is a Core Component that allows the user to enter text. It has an onChangeText prop that takes a function to be called every time the text changed, and an onSubmitEditing prop that takes a function to be called when the text is submitted.",
              "source": "@site/versioned_docs/version-0.63/handling-text-input.md",
              "slug": "/handling-text-input",
              "permalink": "/docs/handling-text-input",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/handling-text-input.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "React Fundamentals",
                "permalink": "/docs/intro-react"
              },
              "next": {
                "title": "Using a ScrollView",
                "permalink": "/docs/using-a-scrollview"
              }
            },
            {
              "unversionedId": "handling-touches",
              "id": "version-0.63/handling-touches",
              "isDocsHomePage": false,
              "title": "Handling Touches",
              "description": "Users interact with mobile apps mainly through touch. They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. React Native provides components to handle all sorts of common gestures, as well as a comprehensive gesture responder system to allow for more advanced gesture recognition, but the one component you will most likely be interested in is the basic Button.",
              "source": "@site/versioned_docs/version-0.63/handling-touches.md",
              "slug": "/handling-touches",
              "permalink": "/docs/handling-touches",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/handling-touches.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Color Reference",
                "permalink": "/docs/colors"
              },
              "next": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/navigation"
              }
            },
            {
              "unversionedId": "headless-js-android",
              "id": "version-0.63/headless-js-android",
              "isDocsHomePage": false,
              "title": "Headless JS",
              "description": "Headless JS is a way to run tasks in JavaScript while your app is in the background. It can be used, for example, to sync fresh data, handle push notifications, or play music.",
              "source": "@site/versioned_docs/version-0.63/headless-js-android.md",
              "slug": "/headless-js-android",
              "permalink": "/docs/headless-js-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/headless-js-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Direct Manipulation",
                "permalink": "/docs/direct-manipulation"
              },
              "next": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/signed-apk-android"
              }
            },
            {
              "unversionedId": "height-and-width",
              "id": "version-0.63/height-and-width",
              "isDocsHomePage": false,
              "title": "Height and Width",
              "description": "A component's height and width determine its size on the screen.",
              "source": "@site/versioned_docs/version-0.63/height-and-width.md",
              "slug": "/height-and-width",
              "permalink": "/docs/height-and-width",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/height-and-width.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Style",
                "permalink": "/docs/style"
              },
              "next": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/flexbox"
              }
            },
            {
              "unversionedId": "hermes",
              "id": "version-0.63/hermes",
              "isDocsHomePage": false,
              "title": "Using Hermes",
              "description": "Hermes is an open-source JavaScript engine optimized for running React Native apps on Android. For many apps, enabling Hermes will result in improved start-up time, decreased memory usage, and smaller app size. At this time Hermes is an opt-in React Native feature, and this guide explains how to enable it.",
              "source": "@site/versioned_docs/version-0.63/hermes.md",
              "slug": "/hermes",
              "permalink": "/docs/hermes",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/hermes.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Timers",
                "permalink": "/docs/timers"
              },
              "next": {
                "title": "Networking",
                "permalink": "/docs/network"
              }
            },
            {
              "unversionedId": "image",
              "id": "version-0.63/image",
              "isDocsHomePage": false,
              "title": "Image",
              "description": "A React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.",
              "source": "@site/versioned_docs/version-0.63/image.md",
              "slug": "/image",
              "permalink": "/docs/image",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/image.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "FlatList",
                "permalink": "/docs/flatlist"
              },
              "next": {
                "title": "ImageBackground",
                "permalink": "/docs/imagebackground"
              }
            },
            {
              "unversionedId": "image-style-props",
              "id": "version-0.63/image-style-props",
              "isDocsHomePage": false,
              "title": "Image Style Props",
              "description": "Examples",
              "source": "@site/versioned_docs/version-0.63/image-style-props.md",
              "slug": "/image-style-props",
              "permalink": "/docs/image-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/image-style-props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "SafeAreaView",
                "permalink": "/docs/safeareaview"
              },
              "next": {
                "title": "Layout Props",
                "permalink": "/docs/layout-props"
              }
            },
            {
              "unversionedId": "imagebackground",
              "id": "version-0.63/imagebackground",
              "isDocsHomePage": false,
              "title": "ImageBackground",
              "description": "A common feature request from developers familiar with the web is background-image. To handle this use case, you can use the ` component, which has the same props as `, and add whatever children to it you would like to layer on top of it.",
              "source": "@site/versioned_docs/version-0.63/imagebackground.md",
              "slug": "/imagebackground",
              "permalink": "/docs/imagebackground",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/imagebackground.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Image",
                "permalink": "/docs/image"
              },
              "next": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/keyboardavoidingview"
              }
            },
            {
              "unversionedId": "imageeditor",
              "id": "version-0.63/imageeditor",
              "isDocsHomePage": false,
              "title": "🚧 ImageEditor",
              "description": "Deprecated. Use @react-native-community/image-editor instead.",
              "source": "@site/versioned_docs/version-0.63/imageeditor.md",
              "slug": "/imageeditor",
              "permalink": "/docs/imageeditor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/imageeditor.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "imagepickerios",
              "id": "version-0.63/imagepickerios",
              "isDocsHomePage": false,
              "title": "🚧 ImagePickerIOS",
              "description": "Deprecated. Use @react-native-community/image-picker-ios instead.",
              "source": "@site/versioned_docs/version-0.63/imagepickerios.md",
              "slug": "/imagepickerios",
              "permalink": "/docs/imagepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/imagepickerios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "images",
              "id": "version-0.63/images",
              "isDocsHomePage": false,
              "title": "Images",
              "description": "Static Image Resources",
              "source": "@site/versioned_docs/version-0.63/images.md",
              "slug": "/images",
              "permalink": "/docs/images",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/images.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/flexbox"
              },
              "next": {
                "title": "Color Reference",
                "permalink": "/docs/colors"
              }
            },
            {
              "unversionedId": "imagestore",
              "id": "version-0.63/imagestore",
              "isDocsHomePage": false,
              "title": "ImageStore",
              "description": "Deprecated. Use expo-file-system or react-native-fs instead.",
              "source": "@site/versioned_docs/version-0.63/imagestore.md",
              "slug": "/imagestore",
              "permalink": "/docs/imagestore",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/imagestore.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "improvingux",
              "id": "version-0.63/improvingux",
              "isDocsHomePage": false,
              "title": "Improving User Experience",
              "description": "Configure text inputs",
              "source": "@site/versioned_docs/version-0.63/improvingux.md",
              "slug": "/improvingux",
              "permalink": "/docs/improvingux",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/improvingux.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "inputaccessoryview",
              "id": "version-0.63/inputaccessoryview",
              "isDocsHomePage": false,
              "title": "InputAccessoryView",
              "description": "A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars.",
              "source": "@site/versioned_docs/version-0.63/inputaccessoryview.md",
              "slug": "/inputaccessoryview",
              "permalink": "/docs/inputaccessoryview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/inputaccessoryview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/touchablenativefeedback"
              },
              "next": {
                "title": "🚧 MaskedViewIOS",
                "permalink": "/docs/maskedviewios"
              }
            },
            {
              "unversionedId": "integration-with-existing-apps",
              "id": "version-0.63/integration-with-existing-apps",
              "isDocsHomePage": false,
              "title": "Integration with Existing Apps",
              "description": "React Native is great when you are starting a new mobile app from scratch. However, it also works well for adding a single view or user flow to existing native applications. With a few steps, you can add new React Native based features, screens, views, etc.",
              "source": "@site/versioned_docs/version-0.63/integration-with-existing-apps.md",
              "slug": "/integration-with-existing-apps",
              "permalink": "/docs/integration-with-existing-apps",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/integration-with-existing-apps.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Setting up the development environment",
                "permalink": "/docs/environment-setup"
              },
              "next": {
                "title": "Building For TV Devices",
                "permalink": "/docs/building-for-tv"
              }
            },
            {
              "unversionedId": "interactionmanager",
              "id": "version-0.63/interactionmanager",
              "isDocsHomePage": false,
              "title": "InteractionManager",
              "description": "InteractionManager allows long-running work to be scheduled after any interactions/animations have completed. In particular, this allows JavaScript animations to run smoothly.",
              "source": "@site/versioned_docs/version-0.63/interactionmanager.md",
              "slug": "/interactionmanager",
              "permalink": "/docs/interactionmanager",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/interactionmanager.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Easing",
                "permalink": "/docs/easing"
              },
              "next": {
                "title": "Keyboard",
                "permalink": "/docs/keyboard"
              }
            },
            {
              "unversionedId": "intro-react",
              "id": "version-0.63/intro-react",
              "isDocsHomePage": false,
              "title": "React Fundamentals",
              "description": "To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed.",
              "source": "@site/versioned_docs/version-0.63/intro-react.md",
              "slug": "/intro-react",
              "permalink": "/docs/intro-react",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/intro-react.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Core Components and Native Components",
                "permalink": "/docs/intro-react-native-components"
              },
              "next": {
                "title": "Handling Text Input",
                "permalink": "/docs/handling-text-input"
              }
            },
            {
              "unversionedId": "intro-react-native-components",
              "id": "version-0.63/intro-react-native-components",
              "isDocsHomePage": false,
              "title": "Core Components and Native Components",
              "description": "React Native lets you compose app interfaces using Native Components. Conveniently, it comes with a set of these components for you to get started with right now—the Core Components!",
              "source": "@site/versioned_docs/version-0.63/intro-react-native-components.md",
              "slug": "/intro-react-native-components",
              "permalink": "/docs/intro-react-native-components",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/intro-react-native-components.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/getting-started"
              },
              "next": {
                "title": "React Fundamentals",
                "permalink": "/docs/intro-react"
              }
            },
            {
              "unversionedId": "javascript-environment",
              "id": "version-0.63/javascript-environment",
              "isDocsHomePage": false,
              "title": "JavaScript Environment",
              "description": "JavaScript Runtime",
              "source": "@site/versioned_docs/version-0.63/javascript-environment.md",
              "slug": "/javascript-environment",
              "permalink": "/docs/javascript-environment",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/javascript-environment.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Profiling",
                "permalink": "/docs/profiling"
              },
              "next": {
                "title": "Timers",
                "permalink": "/docs/timers"
              }
            },
            {
              "unversionedId": "keyboard",
              "id": "version-0.63/keyboard",
              "isDocsHomePage": false,
              "title": "Keyboard",
              "description": "Keyboard module to control keyboard events.",
              "source": "@site/versioned_docs/version-0.63/keyboard.md",
              "slug": "/keyboard",
              "permalink": "/docs/keyboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/keyboard.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "InteractionManager",
                "permalink": "/docs/interactionmanager"
              },
              "next": {
                "title": "LayoutAnimation",
                "permalink": "/docs/layoutanimation"
              }
            },
            {
              "unversionedId": "keyboardavoidingview",
              "id": "version-0.63/keyboardavoidingview",
              "isDocsHomePage": false,
              "title": "KeyboardAvoidingView",
              "description": "It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard. It can automatically adjust either its height, position, or bottom padding based on the keyboard height.",
              "source": "@site/versioned_docs/version-0.63/keyboardavoidingview.md",
              "slug": "/keyboardavoidingview",
              "permalink": "/docs/keyboardavoidingview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/keyboardavoidingview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "ImageBackground",
                "permalink": "/docs/imagebackground"
              },
              "next": {
                "title": "Modal",
                "permalink": "/docs/modal"
              }
            },
            {
              "unversionedId": "layout-props",
              "id": "version-0.63/layout-props",
              "isDocsHomePage": false,
              "title": "Layout Props",
              "description": "More detailed examples about those properties can be found on the Layout with Flexbox page.",
              "source": "@site/versioned_docs/version-0.63/layout-props.md",
              "slug": "/layout-props",
              "permalink": "/docs/layout-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/layout-props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Image Style Props",
                "permalink": "/docs/image-style-props"
              },
              "next": {
                "title": "Shadow Props",
                "permalink": "/docs/shadow-props"
              }
            },
            {
              "unversionedId": "layoutanimation",
              "id": "version-0.63/layoutanimation",
              "isDocsHomePage": false,
              "title": "LayoutAnimation",
              "description": "Automatically animates views to their new positions when the next layout happens.",
              "source": "@site/versioned_docs/version-0.63/layoutanimation.md",
              "slug": "/layoutanimation",
              "permalink": "/docs/layoutanimation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/layoutanimation.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Keyboard",
                "permalink": "/docs/keyboard"
              },
              "next": {
                "title": "Linking",
                "permalink": "/docs/linking"
              }
            },
            {
              "unversionedId": "libraries",
              "id": "version-0.63/libraries",
              "isDocsHomePage": false,
              "title": "Using Libraries",
              "description": "This guide introduces React Native developers to finding, installing, and using third-party libraries in their apps.",
              "source": "@site/versioned_docs/version-0.63/libraries.md",
              "slug": "/libraries",
              "permalink": "/docs/libraries",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/libraries.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Testing",
                "permalink": "/docs/testing-overview"
              },
              "next": {
                "title": "Using TypeScript",
                "permalink": "/docs/typescript"
              }
            },
            {
              "unversionedId": "linking",
              "id": "version-0.63/linking",
              "isDocsHomePage": false,
              "title": "Linking",
              "description": "Projects with Native Code Only",
              "source": "@site/versioned_docs/version-0.63/linking.md",
              "slug": "/linking",
              "permalink": "/docs/linking",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/linking.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "LayoutAnimation",
                "permalink": "/docs/layoutanimation"
              },
              "next": {
                "title": "PanResponder",
                "permalink": "/docs/panresponder"
              }
            },
            {
              "unversionedId": "linking-libraries-ios",
              "id": "version-0.63/linking-libraries-ios",
              "isDocsHomePage": false,
              "title": "Linking Libraries",
              "description": "Not every app uses all the native capabilities, and including the code to support all those features would impact the binary size... But we still want to support adding these features whenever you need them.",
              "source": "@site/versioned_docs/version-0.63/linking-libraries-ios.md",
              "slug": "/linking-libraries-ios",
              "permalink": "/docs/linking-libraries-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/linking-libraries-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/removing-default-permissions"
              },
              "next": {
                "title": "Running On Simulator",
                "permalink": "/docs/running-on-simulator-ios"
              }
            },
            {
              "unversionedId": "listview",
              "id": "version-0.63/listview",
              "isDocsHomePage": false,
              "title": "ListView",
              "description": "DEPRECATED - use one of the new list components, such as FlatList or SectionList for bounded memory use, fewer bugs, better performance, an easier to use API, and more features. Check out this blog post for more details.",
              "source": "@site/versioned_docs/version-0.63/listview.md",
              "slug": "/listview",
              "permalink": "/docs/listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/listview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "listviewdatasource",
              "id": "version-0.63/listviewdatasource",
              "isDocsHomePage": false,
              "title": "ListViewDataSource",
              "description": "Provides efficient data processing and access to the ListView component. A ListViewDataSource is created with functions for extracting data from the input blob, and comparing elements (with default implementations for convenience). The input blob can be as flat as an array of strings, or an object with rows nested inside section objects.",
              "source": "@site/versioned_docs/version-0.63/listviewdatasource.md",
              "slug": "/listviewdatasource",
              "permalink": "/docs/listviewdatasource",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/listviewdatasource.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "maskedviewios",
              "id": "version-0.63/maskedviewios",
              "isDocsHomePage": false,
              "title": "🚧 MaskedViewIOS",
              "description": "Deprecated. Use @react-native-masked-view/masked-view instead.",
              "source": "@site/versioned_docs/version-0.63/maskedviewios.md",
              "slug": "/maskedviewios",
              "permalink": "/docs/maskedviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/maskedviewios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "InputAccessoryView",
                "permalink": "/docs/inputaccessoryview"
              },
              "next": {
                "title": "SafeAreaView",
                "permalink": "/docs/safeareaview"
              }
            },
            {
              "unversionedId": "modal",
              "id": "version-0.63/modal",
              "isDocsHomePage": false,
              "title": "Modal",
              "description": "The Modal component is a basic way to present content above an enclosing view.",
              "source": "@site/versioned_docs/version-0.63/modal.md",
              "slug": "/modal",
              "permalink": "/docs/modal",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/modal.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/keyboardavoidingview"
              },
              "next": {
                "title": "Pressable",
                "permalink": "/docs/pressable"
              }
            },
            {
              "unversionedId": "more-resources",
              "id": "version-0.63/more-resources",
              "isDocsHomePage": false,
              "title": "More Resources",
              "description": "Congratulations! You built your first React Native app. But there’s more to learn: developer workflows, shipping to app stores, internationalization, security and more.",
              "source": "@site/versioned_docs/version-0.63/more-resources.md",
              "slug": "/more-resources",
              "permalink": "/docs/more-resources",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/more-resources.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Platform Specific Code",
                "permalink": "/docs/platform-specific-code"
              },
              "next": {
                "title": "Setting up the development environment",
                "permalink": "/docs/environment-setup"
              }
            },
            {
              "unversionedId": "native-components-android",
              "id": "version-0.63/native-components-android",
              "isDocsHomePage": false,
              "title": "Android Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.63/native-components-android.md",
              "slug": "/native-components-android",
              "permalink": "/docs/native-components-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/native-components-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Native Modules NPM Package Setup",
                "permalink": "/docs/native-modules-setup"
              },
              "next": {
                "title": "iOS Native UI Components",
                "permalink": "/docs/native-components-ios"
              }
            },
            {
              "unversionedId": "native-components-ios",
              "id": "version-0.63/native-components-ios",
              "isDocsHomePage": false,
              "title": "iOS Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.63/native-components-ios.md",
              "slug": "/native-components-ios",
              "permalink": "/docs/native-components-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/native-components-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Android Native UI Components",
                "permalink": "/docs/native-components-android"
              },
              "next": {
                "title": "Direct Manipulation",
                "permalink": "/docs/direct-manipulation"
              }
            },
            {
              "unversionedId": "native-modules-android",
              "id": "version-0.63/native-modules-android",
              "isDocsHomePage": false,
              "title": "Android Native Modules",
              "description": "Welcome to Native Modules for Android. Please start by reading the Native Modules Intro for an intro to what native modules are.",
              "source": "@site/versioned_docs/version-0.63/native-modules-android.md",
              "slug": "/native-modules-android",
              "permalink": "/docs/native-modules-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/native-modules-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Native Modules Intro",
                "permalink": "/docs/native-modules-intro"
              },
              "next": {
                "title": "iOS Native Modules",
                "permalink": "/docs/native-modules-ios"
              }
            },
            {
              "unversionedId": "native-modules-intro",
              "id": "version-0.63/native-modules-intro",
              "isDocsHomePage": false,
              "title": "Native Modules Intro",
              "description": "Sometimes a React Native app needs to access a native platform API that is not available by default in JavaScript, for example the native APIs to access Apple or Android pay. Maybe you want to reuse some existing Objective-C, Swift, Java or C++ libraries without having to reimplement it in JavaScript, or write some high performance, multi-threaded code for things like image processing.",
              "source": "@site/versioned_docs/version-0.63/native-modules-intro.md",
              "slug": "/native-modules-intro",
              "permalink": "/docs/native-modules-intro",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/native-modules-intro.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Security",
                "permalink": "/docs/security"
              },
              "next": {
                "title": "Android Native Modules",
                "permalink": "/docs/native-modules-android"
              }
            },
            {
              "unversionedId": "native-modules-ios",
              "id": "version-0.63/native-modules-ios",
              "isDocsHomePage": false,
              "title": "iOS Native Modules",
              "description": "Welcome to Native Modules for iOS. Please start by reading the Native Modules Intro for an intro to what native modules are.",
              "source": "@site/versioned_docs/version-0.63/native-modules-ios.md",
              "slug": "/native-modules-ios",
              "permalink": "/docs/native-modules-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/native-modules-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Android Native Modules",
                "permalink": "/docs/native-modules-android"
              },
              "next": {
                "title": "Native Modules NPM Package Setup",
                "permalink": "/docs/native-modules-setup"
              }
            },
            {
              "unversionedId": "native-modules-setup",
              "id": "version-0.63/native-modules-setup",
              "isDocsHomePage": false,
              "title": "Native Modules NPM Package Setup",
              "description": "Native modules are usually distributed as npm packages, except that on top of the usual JavaScript they will include some native code per platform. To understand more about npm packages you may find this guide useful.",
              "source": "@site/versioned_docs/version-0.63/native-modules-setup.md",
              "slug": "/native-modules-setup",
              "permalink": "/docs/native-modules-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/native-modules-setup.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "iOS Native Modules",
                "permalink": "/docs/native-modules-ios"
              },
              "next": {
                "title": "Android Native UI Components",
                "permalink": "/docs/native-components-android"
              }
            },
            {
              "unversionedId": "navigation",
              "id": "version-0.63/navigation",
              "isDocsHomePage": false,
              "title": "Navigating Between Screens",
              "description": "Mobile apps are rarely made up of a single screen. Managing the presentation of, and transition between, multiple screens is typically handled by what is known as a navigator.",
              "source": "@site/versioned_docs/version-0.63/navigation.md",
              "slug": "/navigation",
              "permalink": "/docs/navigation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/navigation.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Handling Touches",
                "permalink": "/docs/handling-touches"
              },
              "next": {
                "title": "Animations",
                "permalink": "/docs/animations"
              }
            },
            {
              "unversionedId": "netinfo",
              "id": "version-0.63/netinfo",
              "isDocsHomePage": false,
              "title": "NetInfo",
              "description": "Deprecated. Use react-native-community/react-native-netinfo instead.",
              "source": "@site/versioned_docs/version-0.63/netinfo.md",
              "slug": "/netinfo",
              "permalink": "/docs/netinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/netinfo.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "network",
              "id": "version-0.63/network",
              "isDocsHomePage": false,
              "title": "Networking",
              "description": "Many mobile apps need to load resources from a remote URL. You may want to make a POST request to a REST API, or you may need to fetch a chunk of static content from another server.",
              "source": "@site/versioned_docs/version-0.63/network.md",
              "slug": "/network",
              "permalink": "/docs/network",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/network.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Using Hermes",
                "permalink": "/docs/hermes"
              },
              "next": {
                "title": "Security",
                "permalink": "/docs/security"
              }
            },
            {
              "unversionedId": "optimizing-flatlist-configuration",
              "id": "version-0.63/optimizing-flatlist-configuration",
              "isDocsHomePage": false,
              "title": "Optimizing Flatlist Configuration",
              "description": "Terms",
              "source": "@site/versioned_docs/version-0.63/optimizing-flatlist-configuration.md",
              "slug": "/optimizing-flatlist-configuration",
              "permalink": "/docs/optimizing-flatlist-configuration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/optimizing-flatlist-configuration.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Performance Overview",
                "permalink": "/docs/performance"
              },
              "next": {
                "title": "RAM Bundles and Inline Requires",
                "permalink": "/docs/ram-bundles-inline-requires"
              }
            },
            {
              "unversionedId": "out-of-tree-platforms",
              "id": "version-0.63/out-of-tree-platforms",
              "isDocsHomePage": false,
              "title": "Out-of-Tree Platforms",
              "description": "React Native is not only for Android and iOS - there are community-supported projects that bring it to other platforms, such as:",
              "source": "@site/versioned_docs/version-0.63/out-of-tree-platforms.md",
              "slug": "/out-of-tree-platforms",
              "permalink": "/docs/out-of-tree-platforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/out-of-tree-platforms.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Building For TV Devices",
                "permalink": "/docs/building-for-tv"
              },
              "next": {
                "title": "Running On Device",
                "permalink": "/docs/running-on-device"
              }
            },
            {
              "unversionedId": "panresponder",
              "id": "version-0.63/panresponder",
              "isDocsHomePage": false,
              "title": "PanResponder",
              "description": "PanResponder reconciles several touches into a single gesture. It makes single-touch gestures resilient to extra touches, and can be used to recognize basic multi-touch gestures.",
              "source": "@site/versioned_docs/version-0.63/panresponder.md",
              "slug": "/panresponder",
              "permalink": "/docs/panresponder",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/panresponder.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Linking",
                "permalink": "/docs/linking"
              },
              "next": {
                "title": "PixelRatio",
                "permalink": "/docs/pixelratio"
              }
            },
            {
              "unversionedId": "performance",
              "id": "version-0.63/performance",
              "isDocsHomePage": false,
              "title": "Performance Overview",
              "description": "A compelling reason for using React Native instead of WebView-based tools is to achieve 60 frames per second and a native look and feel to your apps. Where possible, we would like for React Native to do the right thing and help you to focus on your app instead of performance optimization, but there are areas where we're not quite there yet, and others where React Native (similar to writing native code directly) cannot possibly determine the best way to optimize for you and so manual intervention will be necessary. We try our best to deliver buttery-smooth UI performance by default, but sometimes that isn't possible.",
              "source": "@site/versioned_docs/version-0.63/performance.md",
              "slug": "/performance",
              "permalink": "/docs/performance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/performance.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Accessibility",
                "permalink": "/docs/accessibility"
              },
              "next": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/optimizing-flatlist-configuration"
              }
            },
            {
              "unversionedId": "permissionsandroid",
              "id": "version-0.63/permissionsandroid",
              "isDocsHomePage": false,
              "title": "PermissionsAndroid",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.63/permissionsandroid.md",
              "slug": "/permissionsandroid",
              "permalink": "/docs/permissionsandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/permissionsandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "BackHandler",
                "permalink": "/docs/backhandler"
              },
              "next": {
                "title": "ToastAndroid",
                "permalink": "/docs/toastandroid"
              }
            },
            {
              "unversionedId": "picker",
              "id": "version-0.63/picker",
              "isDocsHomePage": false,
              "title": "🚧 Picker",
              "description": "Deprecated. Use @react-native-picker/picker instead.",
              "source": "@site/versioned_docs/version-0.63/picker.md",
              "slug": "/picker",
              "permalink": "/docs/picker",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/picker.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-item",
              "id": "version-0.63/picker-item",
              "isDocsHomePage": false,
              "title": "Picker.Item",
              "description": "Individual selectable item in a Picker.",
              "source": "@site/versioned_docs/version-0.63/picker-item.md",
              "slug": "/picker-item",
              "permalink": "/docs/picker-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/picker-item.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-style-props",
              "id": "version-0.63/picker-style-props",
              "isDocsHomePage": false,
              "title": "Picker Style Props",
              "description": "Picker style props.",
              "source": "@site/versioned_docs/version-0.63/picker-style-props.md",
              "slug": "/picker-style-props",
              "permalink": "/docs/picker-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/picker-style-props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pickerios",
              "id": "version-0.63/pickerios",
              "isDocsHomePage": false,
              "title": "🚧 PickerIOS",
              "description": "Deprecated. Use @react-native-community/picker instead.",
              "source": "@site/versioned_docs/version-0.63/pickerios.md",
              "slug": "/pickerios",
              "permalink": "/docs/pickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/pickerios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pixelratio",
              "id": "version-0.63/pixelratio",
              "isDocsHomePage": false,
              "title": "PixelRatio",
              "description": "PixelRatio gives you access to the device's pixel density and font scale.",
              "source": "@site/versioned_docs/version-0.63/pixelratio.md",
              "slug": "/pixelratio",
              "permalink": "/docs/pixelratio",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/pixelratio.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "PanResponder",
                "permalink": "/docs/panresponder"
              },
              "next": {
                "title": "Platform",
                "permalink": "/docs/platform"
              }
            },
            {
              "unversionedId": "platform",
              "id": "version-0.63/platform",
              "isDocsHomePage": false,
              "title": "Platform",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.63/platform.md",
              "slug": "/platform",
              "permalink": "/docs/platform",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/platform.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "PixelRatio",
                "permalink": "/docs/pixelratio"
              },
              "next": {
                "title": "PlatformColor",
                "permalink": "/docs/platformcolor"
              }
            },
            {
              "unversionedId": "platform-specific-code",
              "id": "version-0.63/platform-specific-code",
              "isDocsHomePage": false,
              "title": "Platform Specific Code",
              "description": "When building a cross-platform app, you'll want to re-use as much code as possible. Scenarios may arise where it makes sense for the code to be different, for example you may want to implement separate visual components for Android and iOS.",
              "source": "@site/versioned_docs/version-0.63/platform-specific-code.md",
              "slug": "/platform-specific-code",
              "permalink": "/docs/platform-specific-code",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/platform-specific-code.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Troubleshooting",
                "permalink": "/docs/troubleshooting"
              },
              "next": {
                "title": "More Resources",
                "permalink": "/docs/more-resources"
              }
            },
            {
              "unversionedId": "platformcolor",
              "id": "version-0.63/platformcolor",
              "isDocsHomePage": false,
              "title": "PlatformColor",
              "description": "`js",
              "source": "@site/versioned_docs/version-0.63/platformcolor.md",
              "slug": "/platformcolor",
              "permalink": "/docs/platformcolor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/platformcolor.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Platform",
                "permalink": "/docs/platform"
              },
              "next": {
                "title": "Share",
                "permalink": "/docs/share"
              }
            },
            {
              "unversionedId": "pressable",
              "id": "version-0.63/pressable",
              "isDocsHomePage": false,
              "title": "Pressable",
              "description": "Pressable is a Core Component wrapper that can detect various stages of press interactions on any of its defined children.",
              "source": "@site/versioned_docs/version-0.63/pressable.md",
              "slug": "/pressable",
              "permalink": "/docs/pressable",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/pressable.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Modal",
                "permalink": "/docs/modal"
              },
              "next": {
                "title": "RefreshControl",
                "permalink": "/docs/refreshcontrol"
              }
            },
            {
              "unversionedId": "pressevent",
              "id": "version-0.63/pressevent",
              "isDocsHomePage": false,
              "title": "PressEvent Object Type",
              "description": "PressEvent object is returned in the callback as a result of user press interaction, for example onPress in Button component.",
              "source": "@site/versioned_docs/version-0.63/pressevent.md",
              "slug": "/pressevent",
              "permalink": "/docs/pressevent",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/pressevent.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "View Style Props",
                "permalink": "/docs/view-style-props"
              },
              "next": {
                "title": "React Node Object Type",
                "permalink": "/docs/react-node"
              }
            },
            {
              "unversionedId": "profiling",
              "id": "version-0.63/profiling",
              "isDocsHomePage": false,
              "title": "Profiling",
              "description": "Use the built-in profiler to get detailed information about work done in the JavaScript thread and main thread side-by-side. Access it by selecting Perf Monitor from the Debug menu.",
              "source": "@site/versioned_docs/version-0.63/profiling.md",
              "slug": "/profiling",
              "permalink": "/docs/profiling",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/profiling.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "RAM Bundles and Inline Requires",
                "permalink": "/docs/ram-bundles-inline-requires"
              },
              "next": {
                "title": "JavaScript Environment",
                "permalink": "/docs/javascript-environment"
              }
            },
            {
              "unversionedId": "progressbarandroid",
              "id": "version-0.63/progressbarandroid",
              "isDocsHomePage": false,
              "title": "🚧 ProgressBarAndroid",
              "description": "Deprecated. Use @react-native-community/progress-bar-android instead.",
              "source": "@site/versioned_docs/version-0.63/progressbarandroid.md",
              "slug": "/progressbarandroid",
              "permalink": "/docs/progressbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/progressbarandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "progressviewios",
              "id": "version-0.63/progressviewios",
              "isDocsHomePage": false,
              "title": "🚧 ProgressViewIOS",
              "description": "Deprecated. Use @react-native-community/progress-view instead.",
              "source": "@site/versioned_docs/version-0.63/progressviewios.md",
              "slug": "/progressviewios",
              "permalink": "/docs/progressviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/progressviewios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "props",
              "id": "version-0.63/props",
              "isDocsHomePage": false,
              "title": "Props",
              "description": "Most components can be customized when they are created, with different parameters. These created parameters are called props, short for properties.",
              "source": "@site/versioned_docs/version-0.63/props.md",
              "slug": "/props",
              "permalink": "/docs/props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-forks",
              "id": "version-0.63/publishing-forks",
              "isDocsHomePage": false,
              "title": "Publish your own version of react native",
              "description": "TL;DR",
              "source": "@site/versioned_docs/version-0.63/publishing.md",
              "slug": "/publishing-forks",
              "permalink": "/docs/publishing-forks",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/publishing.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-to-app-store",
              "id": "version-0.63/publishing-to-app-store",
              "isDocsHomePage": false,
              "title": "Publishing to Apple App Store",
              "description": "The publishing process is the same as any other native iOS app, with some additional considerations to take into account.",
              "source": "@site/versioned_docs/version-0.63/publishing-to-app-store.md",
              "slug": "/publishing-to-app-store",
              "permalink": "/docs/publishing-to-app-store",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/publishing-to-app-store.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pushnotificationios",
              "id": "version-0.63/pushnotificationios",
              "isDocsHomePage": false,
              "title": "🚧 PushNotificationIOS",
              "description": "Deprecated. Use @react-native-community/push-notification-ios instead.",
              "source": "@site/versioned_docs/version-0.63/pushnotificationios.md",
              "slug": "/pushnotificationios",
              "permalink": "/docs/pushnotificationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/pushnotificationios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "ram-bundles-inline-requires",
              "id": "version-0.63/ram-bundles-inline-requires",
              "isDocsHomePage": false,
              "title": "RAM Bundles and Inline Requires",
              "description": "If you have a large app you may want to consider the Random Access Modules (RAM) bundle format, and using inline requires. This is useful for apps that have a large number of screens which may not ever be opened during a typical usage of the app. Generally it is useful to apps that have large amounts of code that are not needed for a while after startup. For instance the app includes complicated profile screens or lesser used features, but most sessions only involve visiting the main screen of the app for updates. We can optimize the loading of the bundle by using the RAM format and requiring those features and screens inline (when they are actually used).",
              "source": "@site/versioned_docs/version-0.63/ram-bundles-inline-requires.md",
              "slug": "/ram-bundles-inline-requires",
              "permalink": "/docs/ram-bundles-inline-requires",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/ram-bundles-inline-requires.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/optimizing-flatlist-configuration"
              },
              "next": {
                "title": "Profiling",
                "permalink": "/docs/profiling"
              }
            },
            {
              "unversionedId": "react-node",
              "id": "version-0.63/react-node",
              "isDocsHomePage": false,
              "title": "React Node Object Type",
              "description": "A React Node is one of the following types:",
              "source": "@site/versioned_docs/version-0.63/react-node.md",
              "slug": "/react-node",
              "permalink": "/docs/react-node",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/react-node.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "PressEvent Object Type",
                "permalink": "/docs/pressevent"
              },
              "next": {
                "title": "Rect Object Type",
                "permalink": "/docs/rect"
              }
            },
            {
              "unversionedId": "rect",
              "id": "version-0.63/rect",
              "isDocsHomePage": false,
              "title": "Rect Object Type",
              "description": "Rect accepts numeric pixel values to describe how far to extend a rectangular area. These values are added to the original area's size to expand it.",
              "source": "@site/versioned_docs/version-0.63/rect.md",
              "slug": "/rect",
              "permalink": "/docs/rect",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/rect.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "React Node Object Type",
                "permalink": "/docs/react-node"
              }
            },
            {
              "unversionedId": "refreshcontrol",
              "id": "version-0.63/refreshcontrol",
              "isDocsHomePage": false,
              "title": "RefreshControl",
              "description": "This component is used inside a ScrollView or ListView to add pull to refresh functionality. When the ScrollView is at scrollY: 0, swiping down triggers an onRefresh event.",
              "source": "@site/versioned_docs/version-0.63/refreshcontrol.md",
              "slug": "/refreshcontrol",
              "permalink": "/docs/refreshcontrol",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/refreshcontrol.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Pressable",
                "permalink": "/docs/pressable"
              },
              "next": {
                "title": "ScrollView",
                "permalink": "/docs/scrollview"
              }
            },
            {
              "unversionedId": "removing-default-permissions",
              "id": "version-0.63/removing-default-permissions",
              "isDocsHomePage": false,
              "title": "Removing Default Permissions",
              "description": "By default, some permissions are added to your Android APK.",
              "source": "@site/versioned_docs/version-0.63/removing-default-permissions.md",
              "slug": "/removing-default-permissions",
              "permalink": "/docs/removing-default-permissions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/removing-default-permissions.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/signed-apk-android"
              },
              "next": {
                "title": "Linking Libraries",
                "permalink": "/docs/linking-libraries-ios"
              }
            },
            {
              "unversionedId": "running-on-device",
              "id": "version-0.63/running-on-device",
              "isDocsHomePage": false,
              "title": "Running On Device",
              "description": "It's always a good idea to test your app on an actual device before releasing it to your users. This document will guide you through the necessary steps to run your React Native app on a device and to get it ready for production.",
              "source": "@site/versioned_docs/version-0.63/running-on-device.md",
              "slug": "/running-on-device",
              "permalink": "/docs/running-on-device",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/running-on-device.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/out-of-tree-platforms"
              },
              "next": {
                "title": "Fast Refresh",
                "permalink": "/docs/fast-refresh"
              }
            },
            {
              "unversionedId": "running-on-simulator-ios",
              "id": "version-0.63/running-on-simulator-ios",
              "isDocsHomePage": false,
              "title": "Running On Simulator",
              "description": "Starting the simulator",
              "source": "@site/versioned_docs/version-0.63/running-on-simulator-ios.md",
              "slug": "/running-on-simulator-ios",
              "permalink": "/docs/running-on-simulator-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/running-on-simulator-ios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Linking Libraries",
                "permalink": "/docs/linking-libraries-ios"
              },
              "next": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/communication-ios"
              }
            },
            {
              "unversionedId": "safeareaview",
              "id": "version-0.63/safeareaview",
              "isDocsHomePage": false,
              "title": "SafeAreaView",
              "description": "The purpose of SafeAreaView is to render content within the safe area boundaries of a device. It is currently only applicable to iOS devices with iOS version 11 or later.",
              "source": "@site/versioned_docs/version-0.63/safeareaview.md",
              "slug": "/safeareaview",
              "permalink": "/docs/safeareaview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/safeareaview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "🚧 MaskedViewIOS",
                "permalink": "/docs/maskedviewios"
              },
              "next": {
                "title": "Image Style Props",
                "permalink": "/docs/image-style-props"
              }
            },
            {
              "unversionedId": "scrollview",
              "id": "version-0.63/scrollview",
              "isDocsHomePage": false,
              "title": "ScrollView",
              "description": "Component that wraps platform ScrollView while providing integration with touch locking \"responder\" system.",
              "source": "@site/versioned_docs/version-0.63/scrollview.md",
              "slug": "/scrollview",
              "permalink": "/docs/scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/scrollview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "RefreshControl",
                "permalink": "/docs/refreshcontrol"
              },
              "next": {
                "title": "SectionList",
                "permalink": "/docs/sectionlist"
              }
            },
            {
              "unversionedId": "sectionlist",
              "id": "version-0.63/sectionlist",
              "isDocsHomePage": false,
              "title": "SectionList",
              "description": "A performant interface for rendering sectioned lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.63/sectionlist.md",
              "slug": "/sectionlist",
              "permalink": "/docs/sectionlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/sectionlist.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "ScrollView",
                "permalink": "/docs/scrollview"
              },
              "next": {
                "title": "StatusBar",
                "permalink": "/docs/statusbar"
              }
            },
            {
              "unversionedId": "security",
              "id": "version-0.63/security",
              "isDocsHomePage": false,
              "title": "Security",
              "description": "Security is often overlooked when building apps. It is true that it is impossible to build software that is completely impenetrable—we’ve yet to invent a completely impenetrable lock (bank vaults do, after all, still get broken into). However, the probability of falling victim to a malicious attack or being exposed for a security vulnerability is inversely proportional to the effort you’re willing to put in to protecting your application against any such eventuality. Although an ordinary padlock is pickable, it is still much harder to get past than a cabinet hook!",
              "source": "@site/versioned_docs/version-0.63/security.md",
              "slug": "/security",
              "permalink": "/docs/security",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/security.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Networking",
                "permalink": "/docs/network"
              },
              "next": {
                "title": "Native Modules Intro",
                "permalink": "/docs/native-modules-intro"
              }
            },
            {
              "unversionedId": "segmentedcontrolios",
              "id": "version-0.63/segmentedcontrolios",
              "isDocsHomePage": false,
              "title": "🚧 SegmentedControlIOS",
              "description": "Deprecated. Use @react-native-community/segmented-control instead.",
              "source": "@site/versioned_docs/version-0.63/segmentedcontrolios.md",
              "slug": "/segmentedcontrolios",
              "permalink": "/docs/segmentedcontrolios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/segmentedcontrolios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "settings",
              "id": "version-0.63/settings",
              "isDocsHomePage": false,
              "title": "Settings",
              "description": "Settings serves as a wrapper for NSUserDefaults, a persistent key-value store available only on iOS.",
              "source": "@site/versioned_docs/version-0.63/settings.md",
              "slug": "/settings",
              "permalink": "/docs/settings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/settings.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "DynamicColorIOS",
                "permalink": "/docs/dynamiccolorios"
              }
            },
            {
              "unversionedId": "shadow-props",
              "id": "version-0.63/shadow-props",
              "isDocsHomePage": false,
              "title": "Shadow Props",
              "description": "`SnackPlayer name=Shadow%20Props&supportedPlatforms=ios",
              "source": "@site/versioned_docs/version-0.63/shadow-props.md",
              "slug": "/shadow-props",
              "permalink": "/docs/shadow-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/shadow-props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Layout Props",
                "permalink": "/docs/layout-props"
              },
              "next": {
                "title": "Text Style Props",
                "permalink": "/docs/text-style-props"
              }
            },
            {
              "unversionedId": "share",
              "id": "version-0.63/share",
              "isDocsHomePage": false,
              "title": "Share",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.63/share.md",
              "slug": "/share",
              "permalink": "/docs/share",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/share.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "PlatformColor",
                "permalink": "/docs/platformcolor"
              },
              "next": {
                "title": "StyleSheet",
                "permalink": "/docs/stylesheet"
              }
            },
            {
              "unversionedId": "signed-apk-android",
              "id": "version-0.63/signed-apk-android",
              "isDocsHomePage": false,
              "title": "Publishing to Google Play Store",
              "description": "Android requires that all apps be digitally signed with a certificate before they can be installed. In order to distribute your Android application via Google Play store it needs to be signed with a release key that then needs to be used for all future updates. Since 2017 it is possible for Google Play to manage signing releases automatically thanks to App Signing by Google Play functionality. However, before your application binary is uploaded to Google Play it needs to be signed with an upload key. The Signing Your Applications page on Android Developers documentation describes the topic in detail. This guide covers the process in brief, as well as lists the steps required to package the JavaScript bundle.",
              "source": "@site/versioned_docs/version-0.63/signed-apk-android.md",
              "slug": "/signed-apk-android",
              "permalink": "/docs/signed-apk-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/signed-apk-android.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Headless JS",
                "permalink": "/docs/headless-js-android"
              },
              "next": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/removing-default-permissions"
              }
            },
            {
              "unversionedId": "slider",
              "id": "version-0.63/slider",
              "isDocsHomePage": false,
              "title": "🚧 Slider",
              "description": "Deprecated. Use @react-native-community/slider instead.",
              "source": "@site/versioned_docs/version-0.63/slider.md",
              "slug": "/slider",
              "permalink": "/docs/slider",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/slider.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "snapshotviewios",
              "id": "version-0.63/snapshotviewios",
              "isDocsHomePage": false,
              "title": "SnapshotViewIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.63/snapshotviewios.md",
              "slug": "/snapshotviewios",
              "permalink": "/docs/snapshotviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/snapshotviewios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "state",
              "id": "version-0.63/state",
              "isDocsHomePage": false,
              "title": "State",
              "description": "There are two types of data that control a component: props and state. props are set by the parent and they are fixed throughout the lifetime of a component. For data that is going to change, we have to use state.",
              "source": "@site/versioned_docs/version-0.63/state.md",
              "slug": "/state",
              "permalink": "/docs/state",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/state.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "statusbar",
              "id": "version-0.63/statusbar",
              "isDocsHomePage": false,
              "title": "StatusBar",
              "description": "Component to control the app status bar.",
              "source": "@site/versioned_docs/version-0.63/statusbar.md",
              "slug": "/statusbar",
              "permalink": "/docs/statusbar",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/statusbar.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "SectionList",
                "permalink": "/docs/sectionlist"
              },
              "next": {
                "title": "Switch",
                "permalink": "/docs/switch"
              }
            },
            {
              "unversionedId": "statusbarios",
              "id": "version-0.63/statusbarios",
              "isDocsHomePage": false,
              "title": "🚧 StatusBarIOS",
              "description": "Deprecated. Use StatusBar for mutating the status bar.",
              "source": "@site/versioned_docs/version-0.63/statusbarios.md",
              "slug": "/statusbarios",
              "permalink": "/docs/statusbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/statusbarios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "style",
              "id": "version-0.63/style",
              "isDocsHomePage": false,
              "title": "Style",
              "description": "With React Native, you style your application using JavaScript. All of the core components accept a prop named style. The style names and values usually match how CSS works on the web, except names are written using camel casing, e.g. backgroundColor rather than background-color.",
              "source": "@site/versioned_docs/version-0.63/style.md",
              "slug": "/style",
              "permalink": "/docs/style",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/style.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/upgrading"
              },
              "next": {
                "title": "Height and Width",
                "permalink": "/docs/height-and-width"
              }
            },
            {
              "unversionedId": "stylesheet",
              "id": "version-0.63/stylesheet",
              "isDocsHomePage": false,
              "title": "StyleSheet",
              "description": "A StyleSheet is an abstraction similar to CSS StyleSheets",
              "source": "@site/versioned_docs/version-0.63/stylesheet.md",
              "slug": "/stylesheet",
              "permalink": "/docs/stylesheet",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/stylesheet.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Share",
                "permalink": "/docs/share"
              },
              "next": {
                "title": "Systrace",
                "permalink": "/docs/systrace"
              }
            },
            {
              "unversionedId": "switch",
              "id": "version-0.63/switch",
              "isDocsHomePage": false,
              "title": "Switch",
              "description": "Renders a boolean input.",
              "source": "@site/versioned_docs/version-0.63/switch.md",
              "slug": "/switch",
              "permalink": "/docs/switch",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/switch.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "StatusBar",
                "permalink": "/docs/statusbar"
              },
              "next": {
                "title": "Text",
                "permalink": "/docs/text"
              }
            },
            {
              "unversionedId": "symbolication",
              "id": "version-0.63/symbolication",
              "isDocsHomePage": false,
              "title": "Symbolicating a stack trace",
              "description": "If a React Native app throws an unhandled exception in a release build, the output may be obfuscated and hard to read:",
              "source": "@site/versioned_docs/version-0.63/symbolication.md",
              "slug": "/symbolication",
              "permalink": "/docs/symbolication",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/symbolication.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "systrace",
              "id": "version-0.63/systrace",
              "isDocsHomePage": false,
              "title": "Systrace",
              "description": "Systrace is a standard Android marker-based profiling tool (and is installed when you install the Android platform-tools package). Profiled code blocks are surrounded by start/end markers which are then visualized in a colorful chart format. Both the Android SDK and React Native framework provide standard markers that you can visualize.",
              "source": "@site/versioned_docs/version-0.63/systrace.md",
              "slug": "/systrace",
              "permalink": "/docs/systrace",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/systrace.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "StyleSheet",
                "permalink": "/docs/stylesheet"
              },
              "next": {
                "title": "Transforms",
                "permalink": "/docs/transforms"
              }
            },
            {
              "unversionedId": "tabbarios",
              "id": "version-0.63/tabbarios",
              "isDocsHomePage": false,
              "title": "TabBarIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.63/tabbarios.md",
              "slug": "/tabbarios",
              "permalink": "/docs/tabbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/tabbarios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "tabbarios-item",
              "id": "version-0.63/tabbarios-item",
              "isDocsHomePage": false,
              "title": "TabBarIOS.Item",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.63/tabbarios-item.md",
              "slug": "/tabbarios-item",
              "permalink": "/docs/tabbarios-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/tabbarios-item.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "testing-overview",
              "id": "version-0.63/testing-overview",
              "isDocsHomePage": false,
              "title": "Testing",
              "description": "This guide introduces React Native developers to the key concepts behind testing, how to write good tests, and what kinds of tests you can incorporate into your workflow.",
              "source": "@site/versioned_docs/version-0.63/testing-overview.md",
              "slug": "/testing-overview",
              "permalink": "/docs/testing-overview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/testing-overview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Debugging",
                "permalink": "/docs/debugging"
              },
              "next": {
                "title": "Using Libraries",
                "permalink": "/docs/libraries"
              }
            },
            {
              "unversionedId": "text",
              "id": "version-0.63/text",
              "isDocsHomePage": false,
              "title": "Text",
              "description": "A React component for displaying text.",
              "source": "@site/versioned_docs/version-0.63/text.md",
              "slug": "/text",
              "permalink": "/docs/text",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/text.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Switch",
                "permalink": "/docs/switch"
              },
              "next": {
                "title": "TextInput",
                "permalink": "/docs/textinput"
              }
            },
            {
              "unversionedId": "text-style-props",
              "id": "version-0.63/text-style-props",
              "isDocsHomePage": false,
              "title": "Text Style Props",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.63/text-style-props.md",
              "slug": "/text-style-props",
              "permalink": "/docs/text-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/text-style-props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Shadow Props",
                "permalink": "/docs/shadow-props"
              },
              "next": {
                "title": "View Style Props",
                "permalink": "/docs/view-style-props"
              }
            },
            {
              "unversionedId": "textinput",
              "id": "version-0.63/textinput",
              "isDocsHomePage": false,
              "title": "TextInput",
              "description": "A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.",
              "source": "@site/versioned_docs/version-0.63/textinput.md",
              "slug": "/textinput",
              "permalink": "/docs/textinput",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/textinput.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Text",
                "permalink": "/docs/text"
              },
              "next": {
                "title": "TouchableHighlight",
                "permalink": "/docs/touchablehighlight"
              }
            },
            {
              "unversionedId": "timepickerandroid",
              "id": "version-0.63/timepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 TimePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.63/timepickerandroid.md",
              "slug": "/timepickerandroid",
              "permalink": "/docs/timepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/timepickerandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "timers",
              "id": "version-0.63/timers",
              "isDocsHomePage": false,
              "title": "Timers",
              "description": "Timers are an important part of an application and React Native implements the browser timers.",
              "source": "@site/versioned_docs/version-0.63/timers.md",
              "slug": "/timers",
              "permalink": "/docs/timers",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/timers.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "JavaScript Environment",
                "permalink": "/docs/javascript-environment"
              },
              "next": {
                "title": "Using Hermes",
                "permalink": "/docs/hermes"
              }
            },
            {
              "unversionedId": "toastandroid",
              "id": "version-0.63/toastandroid",
              "isDocsHomePage": false,
              "title": "ToastAndroid",
              "description": "React Native's ToastAndroid API exposes the Android platform's ToastAndroid module as a JS module. It provides the method show(message, duration) which takes the following parameters:",
              "source": "@site/versioned_docs/version-0.63/toastandroid.md",
              "slug": "/toastandroid",
              "permalink": "/docs/toastandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/toastandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/permissionsandroid"
              },
              "next": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/actionsheetios"
              }
            },
            {
              "unversionedId": "toolbarandroid",
              "id": "version-0.63/toolbarandroid",
              "isDocsHomePage": false,
              "title": "ToolbarAndroid",
              "description": "NOTE: Toolbar Android has been deprecated and removed from the package since React Native v0.61.0. Use @react-native-community/toolbar-android instead.",
              "source": "@site/versioned_docs/version-0.63/toolbarandroid.md",
              "slug": "/toolbarandroid",
              "permalink": "/docs/toolbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/toolbarandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "touchablehighlight",
              "id": "version-0.63/touchablehighlight",
              "isDocsHomePage": false,
              "title": "TouchableHighlight",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/versioned_docs/version-0.63/touchablehighlight.md",
              "slug": "/touchablehighlight",
              "permalink": "/docs/touchablehighlight",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/touchablehighlight.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "TextInput",
                "permalink": "/docs/textinput"
              },
              "next": {
                "title": "TouchableOpacity",
                "permalink": "/docs/touchableopacity"
              }
            },
            {
              "unversionedId": "touchablenativefeedback",
              "id": "version-0.63/touchablenativefeedback",
              "isDocsHomePage": false,
              "title": "TouchableNativeFeedback",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/versioned_docs/version-0.63/touchablenativefeedback.md",
              "slug": "/touchablenativefeedback",
              "permalink": "/docs/touchablenativefeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/touchablenativefeedback.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/drawerlayoutandroid"
              },
              "next": {
                "title": "InputAccessoryView",
                "permalink": "/docs/inputaccessoryview"
              }
            },
            {
              "unversionedId": "touchableopacity",
              "id": "version-0.63/touchableopacity",
              "isDocsHomePage": false,
              "title": "TouchableOpacity",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/versioned_docs/version-0.63/touchableopacity.md",
              "slug": "/touchableopacity",
              "permalink": "/docs/touchableopacity",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/touchableopacity.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "TouchableHighlight",
                "permalink": "/docs/touchablehighlight"
              },
              "next": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/touchablewithoutfeedback"
              }
            },
            {
              "unversionedId": "touchablewithoutfeedback",
              "id": "version-0.63/touchablewithoutfeedback",
              "isDocsHomePage": false,
              "title": "TouchableWithoutFeedback",
              "description": "If you're looking for a more extensive and future-proof way to handle touch-based input, check out the Pressable API.",
              "source": "@site/versioned_docs/version-0.63/touchablewithoutfeedback.md",
              "slug": "/touchablewithoutfeedback",
              "permalink": "/docs/touchablewithoutfeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/touchablewithoutfeedback.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "TouchableOpacity",
                "permalink": "/docs/touchableopacity"
              },
              "next": {
                "title": "View",
                "permalink": "/docs/view"
              }
            },
            {
              "unversionedId": "transforms",
              "id": "version-0.63/transforms",
              "isDocsHomePage": false,
              "title": "Transforms",
              "description": "Transforms are style properties that will help you modify the appearance and position of your components using 2D or 3D transformations. However, once you apply transforms, the layouts remain the same around the transformed component hence it might overlap with the nearby components. You can apply margin to the transformed component, the nearby components or padding to the container to prevent such overlaps.",
              "source": "@site/versioned_docs/version-0.63/transforms.md",
              "slug": "/transforms",
              "permalink": "/docs/transforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/transforms.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Systrace",
                "permalink": "/docs/systrace"
              },
              "next": {
                "title": "Vibration",
                "permalink": "/docs/vibration"
              }
            },
            {
              "unversionedId": "troubleshooting",
              "id": "version-0.63/troubleshooting",
              "isDocsHomePage": false,
              "title": "Troubleshooting",
              "description": "These are some common issues you may run into while setting up React Native. If you encounter something that is not listed here, try searching for the issue in GitHub.",
              "source": "@site/versioned_docs/version-0.63/troubleshooting.md",
              "slug": "/troubleshooting",
              "permalink": "/docs/troubleshooting",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/troubleshooting.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Using List Views",
                "permalink": "/docs/using-a-listview"
              },
              "next": {
                "title": "Platform Specific Code",
                "permalink": "/docs/platform-specific-code"
              }
            },
            {
              "unversionedId": "tutorial",
              "id": "version-0.63/tutorial",
              "isDocsHomePage": false,
              "title": "Learn the Basics",
              "description": "React Native is like React, but it uses native components instead of web components as building blocks. So to understand the basic structure of a React Native app, you need to understand some of the basic React concepts, like JSX, components, state, and props. If you already know React, you still need to learn some React-Native-specific stuff, like the native components. This tutorial is aimed at all audiences, whether you have React experience or not.",
              "source": "@site/versioned_docs/version-0.63/tutorial.md",
              "slug": "/tutorial",
              "permalink": "/docs/tutorial",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/tutorial.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "typescript",
              "id": "version-0.63/typescript",
              "isDocsHomePage": false,
              "title": "Using TypeScript",
              "description": "TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",
              "source": "@site/versioned_docs/version-0.63/typescript.md",
              "slug": "/typescript",
              "permalink": "/docs/typescript",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/typescript.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Using Libraries",
                "permalink": "/docs/libraries"
              },
              "next": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/upgrading"
              }
            },
            {
              "unversionedId": "upgrading",
              "id": "version-0.63/upgrading",
              "isDocsHomePage": false,
              "title": "Upgrading to new React Native versions",
              "description": "Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Upgrading requires a small amount of effort, but we try to make it straightforward for you.",
              "source": "@site/versioned_docs/version-0.63/upgrading.md",
              "slug": "/upgrading",
              "permalink": "/docs/upgrading",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/upgrading.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Using TypeScript",
                "permalink": "/docs/typescript"
              },
              "next": {
                "title": "Style",
                "permalink": "/docs/style"
              }
            },
            {
              "unversionedId": "usecolorscheme",
              "id": "version-0.63/usecolorscheme",
              "isDocsHomePage": false,
              "title": "useColorScheme",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.63/usecolorscheme.md",
              "slug": "/usecolorscheme",
              "permalink": "/docs/usecolorscheme",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/usecolorscheme.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Vibration",
                "permalink": "/docs/vibration"
              },
              "next": {
                "title": "useWindowDimensions",
                "permalink": "/docs/usewindowdimensions"
              }
            },
            {
              "unversionedId": "usewindowdimensions",
              "id": "version-0.63/usewindowdimensions",
              "isDocsHomePage": false,
              "title": "useWindowDimensions",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.63/usewindowdimensions.md",
              "slug": "/usewindowdimensions",
              "permalink": "/docs/usewindowdimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/usewindowdimensions.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "useColorScheme",
                "permalink": "/docs/usecolorscheme"
              },
              "next": {
                "title": "BackHandler",
                "permalink": "/docs/backhandler"
              }
            },
            {
              "unversionedId": "using-a-listview",
              "id": "version-0.63/using-a-listview",
              "isDocsHomePage": false,
              "title": "Using List Views",
              "description": "React Native provides a suite of components for presenting lists of data. Generally, you'll want to use either FlatList or SectionList.",
              "source": "@site/versioned_docs/version-0.63/using-a-listview.md",
              "slug": "/using-a-listview",
              "permalink": "/docs/using-a-listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/using-a-listview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Using a ScrollView",
                "permalink": "/docs/using-a-scrollview"
              },
              "next": {
                "title": "Troubleshooting",
                "permalink": "/docs/troubleshooting"
              }
            },
            {
              "unversionedId": "using-a-scrollview",
              "id": "version-0.63/using-a-scrollview",
              "isDocsHomePage": false,
              "title": "Using a ScrollView",
              "description": "The ScrollView is a generic scrolling container that can contain multiple components and views. The scrollable items need not be homogeneous, and you can scroll both vertically and horizontally (by setting the horizontal property).",
              "source": "@site/versioned_docs/version-0.63/using-a-scrollview.md",
              "slug": "/using-a-scrollview",
              "permalink": "/docs/using-a-scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/using-a-scrollview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/docs",
              "previous": {
                "title": "Handling Text Input",
                "permalink": "/docs/handling-text-input"
              },
              "next": {
                "title": "Using List Views",
                "permalink": "/docs/using-a-listview"
              }
            },
            {
              "unversionedId": "vibration",
              "id": "version-0.63/vibration",
              "isDocsHomePage": false,
              "title": "Vibration",
              "description": "Vibrates the device.",
              "source": "@site/versioned_docs/version-0.63/vibration.md",
              "slug": "/vibration",
              "permalink": "/docs/vibration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/vibration.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/api",
              "previous": {
                "title": "Transforms",
                "permalink": "/docs/transforms"
              },
              "next": {
                "title": "useColorScheme",
                "permalink": "/docs/usecolorscheme"
              }
            },
            {
              "unversionedId": "vibrationios",
              "id": "version-0.63/vibrationios",
              "isDocsHomePage": false,
              "title": "VibrationIOS",
              "description": "NOTE: VibrationIOS is being deprecated. Use Vibration instead.",
              "source": "@site/versioned_docs/version-0.63/vibrationios.md",
              "slug": "/vibrationios",
              "permalink": "/docs/vibrationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/vibrationios.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "view",
              "id": "version-0.63/view",
              "isDocsHomePage": false,
              "title": "View",
              "description": "The most fundamental component for building a UI, View is a container that supports layout with flexbox, style, some touch handling, and accessibility controls. View maps directly to the native view equivalent on whatever platform React Native is running on, whether that is a UIView, `, android.view`, etc.",
              "source": "@site/versioned_docs/version-0.63/view.md",
              "slug": "/view",
              "permalink": "/docs/view",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/view.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/touchablewithoutfeedback"
              },
              "next": {
                "title": "VirtualizedList",
                "permalink": "/docs/virtualizedlist"
              }
            },
            {
              "unversionedId": "view-style-props",
              "id": "version-0.63/view-style-props",
              "isDocsHomePage": false,
              "title": "View Style Props",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.63/view-style-props.md",
              "slug": "/view-style-props",
              "permalink": "/docs/view-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/view-style-props.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "Text Style Props",
                "permalink": "/docs/text-style-props"
              },
              "next": {
                "title": "PressEvent Object Type",
                "permalink": "/docs/pressevent"
              }
            },
            {
              "unversionedId": "viewpagerandroid",
              "id": "version-0.63/viewpagerandroid",
              "isDocsHomePage": false,
              "title": "🚧 ViewPagerAndroid",
              "description": "Deprecated. Use @react-native-community/viewpager instead.",
              "source": "@site/versioned_docs/version-0.63/viewpagerandroid.md",
              "slug": "/viewpagerandroid",
              "permalink": "/docs/viewpagerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/viewpagerandroid.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "virtualizedlist",
              "id": "version-0.63/virtualizedlist",
              "isDocsHomePage": false,
              "title": "VirtualizedList",
              "description": "Base implementation for the more convenient ` and  components, which are also better documented. In general, this should only really be used if you need more flexibility than FlatList` provides, e.g. for use with immutable data instead of plain arrays.",
              "source": "@site/versioned_docs/version-0.63/virtualizedlist.md",
              "slug": "/virtualizedlist",
              "permalink": "/docs/virtualizedlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/virtualizedlist.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.63/components",
              "previous": {
                "title": "View",
                "permalink": "/docs/view"
              },
              "next": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/drawerlayoutandroid"
              }
            },
            {
              "unversionedId": "webview",
              "id": "version-0.63/webview",
              "isDocsHomePage": false,
              "title": "🚧 WebView",
              "description": "Deprecated. Use react-native-community/react-native-webview instead.",
              "source": "@site/versioned_docs/version-0.63/webview.md",
              "slug": "/webview",
              "permalink": "/docs/webview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.63/webview.md",
              "version": "0.63",
              "lastUpdatedAt": 1539502055
            }
          ]
        },
        {
          "versionName": "0.62",
          "versionLabel": "0.62",
          "versionPath": "/docs/0.62",
          "isLast": false,
          "sidebarFilePath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_sidebars/version-0.62-sidebars.json",
          "docsDirPath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_docs/version-0.62",
          "mainDocId": "getting-started",
          "sidebars": {
            "version-0.62/docs": [
              {
                "collapsed": true,
                "type": "category",
                "label": "The Basics",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/getting-started"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/intro-react-native-components"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/intro-react"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/handling-text-input"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/using-a-scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/using-a-listview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/troubleshooting"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/platform-specific-code"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/more-resources"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Environment setup",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/environment-setup"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/integration-with-existing-apps"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/building-for-tv"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/out-of-tree-platforms"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Workflow",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/running-on-device"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/fast-refresh"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/debugging"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/testing-overview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/libraries"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/typescript"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/upgrading"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Design",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/style"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/height-and-width"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/flexbox"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/images"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/colors"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Interaction",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/handling-touches"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/navigation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/animations"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/gesture-responder-system"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Inclusion",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/accessibility"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Performance",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/performance"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/optimizing-flatlist-configuration"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/ram-bundles-inline-requires"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/profiling"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "JavaScript Runtime",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/javascript-environment"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/timers"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/hermes"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Connectivity",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/network"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/security"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Native Components and Modules",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/native-modules-setup"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/direct-manipulation"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (Android)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/native-modules-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/native-components-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/headless-js-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/signed-apk-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/removing-default-permissions"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (iOS)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/native-modules-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/native-components-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/linking-libraries-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/running-on-simulator-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/communication-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/app-extensions"
                  }
                ]
              }
            ],
            "version-0.62/components": [
              {
                "collapsed": true,
                "type": "category",
                "label": "Core Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/components-and-apis"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/activityindicator"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/button"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/flatlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/image"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/imagebackground"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/keyboardavoidingview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/modal"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/refreshcontrol"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/safeareaview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/sectionlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/statusbar"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/switch"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/text"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/textinput"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/touchablehighlight"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/touchableopacity"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/touchablewithoutfeedback"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/view"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/virtualizedlist"
                  },
                  {
                    "collapsed": true,
                    "type": "category",
                    "label": "Android Components",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.62/drawerlayoutandroid"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.62/touchablenativefeedback"
                      }
                    ]
                  },
                  {
                    "collapsed": true,
                    "type": "category",
                    "label": "iOS Components",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.62/inputaccessoryview"
                      }
                    ]
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Props",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/image-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/layout-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/shadow-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/text-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/view-style-props"
                  }
                ]
              }
            ],
            "version-0.62/api": [
              {
                "collapsed": true,
                "type": "category",
                "label": "APIs",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.62/accessibilityinfo"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/alert"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/animated"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/appearance"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/appregistry"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/appstate"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/devsettings"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/dimensions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/easing"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/interactionmanager"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/keyboard"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/layoutanimation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/linking"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/panresponder"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/pixelratio"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/share"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/stylesheet"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/systrace"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/transforms"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.62/vibration"
                  },
                  {
                    "collapsed": true,
                    "type": "category",
                    "label": "Hooks",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.62/usecolorscheme"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.62/usewindowdimensions"
                      }
                    ]
                  },
                  {
                    "collapsed": true,
                    "type": "category",
                    "label": "Android APIs",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.62/backhandler"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.62/permissionsandroid"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.62/toastandroid"
                      }
                    ]
                  },
                  {
                    "collapsed": true,
                    "type": "category",
                    "label": "iOS APIs",
                    "items": [
                      {
                        "type": "doc",
                        "id": "version-0.62/actionsheetios"
                      },
                      {
                        "type": "doc",
                        "id": "version-0.62/settings"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "permalinkToSidebar": {
            "/docs/0.62/accessibility": "version-0.62/docs",
            "/docs/0.62/accessibilityinfo": "version-0.62/api",
            "/docs/0.62/actionsheetios": "version-0.62/api",
            "/docs/0.62/activityindicator": "version-0.62/components",
            "/docs/0.62/alert": "version-0.62/api",
            "/docs/0.62/animated": "version-0.62/api",
            "/docs/0.62/animations": "version-0.62/docs",
            "/docs/0.62/app-extensions": "version-0.62/docs",
            "/docs/0.62/appearance": "version-0.62/api",
            "/docs/0.62/appregistry": "version-0.62/api",
            "/docs/0.62/appstate": "version-0.62/api",
            "/docs/0.62/backhandler": "version-0.62/api",
            "/docs/0.62/building-for-tv": "version-0.62/docs",
            "/docs/0.62/button": "version-0.62/components",
            "/docs/0.62/colors": "version-0.62/docs",
            "/docs/0.62/communication-ios": "version-0.62/docs",
            "/docs/0.62/components-and-apis": "version-0.62/components",
            "/docs/0.62/debugging": "version-0.62/docs",
            "/docs/0.62/devsettings": "version-0.62/api",
            "/docs/0.62/dimensions": "version-0.62/api",
            "/docs/0.62/direct-manipulation": "version-0.62/docs",
            "/docs/0.62/drawerlayoutandroid": "version-0.62/components",
            "/docs/0.62/easing": "version-0.62/api",
            "/docs/0.62/environment-setup": "version-0.62/docs",
            "/docs/0.62/fast-refresh": "version-0.62/docs",
            "/docs/0.62/flatlist": "version-0.62/components",
            "/docs/0.62/flexbox": "version-0.62/docs",
            "/docs/0.62/gesture-responder-system": "version-0.62/docs",
            "/docs/0.62/getting-started": "version-0.62/docs",
            "/docs/0.62/handling-text-input": "version-0.62/docs",
            "/docs/0.62/handling-touches": "version-0.62/docs",
            "/docs/0.62/headless-js-android": "version-0.62/docs",
            "/docs/0.62/height-and-width": "version-0.62/docs",
            "/docs/0.62/hermes": "version-0.62/docs",
            "/docs/0.62/image": "version-0.62/components",
            "/docs/0.62/image-style-props": "version-0.62/components",
            "/docs/0.62/imagebackground": "version-0.62/components",
            "/docs/0.62/images": "version-0.62/docs",
            "/docs/0.62/inputaccessoryview": "version-0.62/components",
            "/docs/0.62/integration-with-existing-apps": "version-0.62/docs",
            "/docs/0.62/interactionmanager": "version-0.62/api",
            "/docs/0.62/intro-react": "version-0.62/docs",
            "/docs/0.62/intro-react-native-components": "version-0.62/docs",
            "/docs/0.62/javascript-environment": "version-0.62/docs",
            "/docs/0.62/keyboard": "version-0.62/api",
            "/docs/0.62/keyboardavoidingview": "version-0.62/components",
            "/docs/0.62/layout-props": "version-0.62/components",
            "/docs/0.62/layoutanimation": "version-0.62/api",
            "/docs/0.62/libraries": "version-0.62/docs",
            "/docs/0.62/linking": "version-0.62/api",
            "/docs/0.62/linking-libraries-ios": "version-0.62/docs",
            "/docs/0.62/modal": "version-0.62/components",
            "/docs/0.62/more-resources": "version-0.62/docs",
            "/docs/0.62/native-components-android": "version-0.62/docs",
            "/docs/0.62/native-components-ios": "version-0.62/docs",
            "/docs/0.62/native-modules-android": "version-0.62/docs",
            "/docs/0.62/native-modules-ios": "version-0.62/docs",
            "/docs/0.62/native-modules-setup": "version-0.62/docs",
            "/docs/0.62/navigation": "version-0.62/docs",
            "/docs/0.62/network": "version-0.62/docs",
            "/docs/0.62/optimizing-flatlist-configuration": "version-0.62/docs",
            "/docs/0.62/out-of-tree-platforms": "version-0.62/docs",
            "/docs/0.62/panresponder": "version-0.62/api",
            "/docs/0.62/performance": "version-0.62/docs",
            "/docs/0.62/permissionsandroid": "version-0.62/api",
            "/docs/0.62/pixelratio": "version-0.62/api",
            "/docs/0.62/platform-specific-code": "version-0.62/docs",
            "/docs/0.62/profiling": "version-0.62/docs",
            "/docs/0.62/ram-bundles-inline-requires": "version-0.62/docs",
            "/docs/0.62/refreshcontrol": "version-0.62/components",
            "/docs/0.62/removing-default-permissions": "version-0.62/docs",
            "/docs/0.62/running-on-device": "version-0.62/docs",
            "/docs/0.62/running-on-simulator-ios": "version-0.62/docs",
            "/docs/0.62/safeareaview": "version-0.62/components",
            "/docs/0.62/scrollview": "version-0.62/components",
            "/docs/0.62/sectionlist": "version-0.62/components",
            "/docs/0.62/security": "version-0.62/docs",
            "/docs/0.62/settings": "version-0.62/api",
            "/docs/0.62/shadow-props": "version-0.62/components",
            "/docs/0.62/share": "version-0.62/api",
            "/docs/0.62/signed-apk-android": "version-0.62/docs",
            "/docs/0.62/statusbar": "version-0.62/components",
            "/docs/0.62/style": "version-0.62/docs",
            "/docs/0.62/stylesheet": "version-0.62/api",
            "/docs/0.62/switch": "version-0.62/components",
            "/docs/0.62/systrace": "version-0.62/api",
            "/docs/0.62/testing-overview": "version-0.62/docs",
            "/docs/0.62/text": "version-0.62/components",
            "/docs/0.62/text-style-props": "version-0.62/components",
            "/docs/0.62/textinput": "version-0.62/components",
            "/docs/0.62/timers": "version-0.62/docs",
            "/docs/0.62/toastandroid": "version-0.62/api",
            "/docs/0.62/touchablehighlight": "version-0.62/components",
            "/docs/0.62/touchablenativefeedback": "version-0.62/components",
            "/docs/0.62/touchableopacity": "version-0.62/components",
            "/docs/0.62/touchablewithoutfeedback": "version-0.62/components",
            "/docs/0.62/transforms": "version-0.62/api",
            "/docs/0.62/troubleshooting": "version-0.62/docs",
            "/docs/0.62/typescript": "version-0.62/docs",
            "/docs/0.62/upgrading": "version-0.62/docs",
            "/docs/0.62/usecolorscheme": "version-0.62/api",
            "/docs/0.62/usewindowdimensions": "version-0.62/api",
            "/docs/0.62/using-a-listview": "version-0.62/docs",
            "/docs/0.62/using-a-scrollview": "version-0.62/docs",
            "/docs/0.62/vibration": "version-0.62/api",
            "/docs/0.62/view": "version-0.62/components",
            "/docs/0.62/view-style-props": "version-0.62/components",
            "/docs/0.62/virtualizedlist": "version-0.62/components"
          },
          "docs": [
            {
              "unversionedId": "_getting-started-linux-android",
              "id": "version-0.62/_getting-started-linux-android",
              "isDocsHomePage": false,
              "title": "_getting-started-linux-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.62/_getting-started-linux-android.md",
              "slug": "/_getting-started-linux-android",
              "permalink": "/docs/0.62/_getting-started-linux-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_getting-started-linux-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-android",
              "id": "version-0.62/_getting-started-macos-android",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.62/_getting-started-macos-android.md",
              "slug": "/_getting-started-macos-android",
              "permalink": "/docs/0.62/_getting-started-macos-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_getting-started-macos-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-ios",
              "id": "version-0.62/_getting-started-macos-ios",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-ios",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.62/_getting-started-macos-ios.md",
              "slug": "/_getting-started-macos-ios",
              "permalink": "/docs/0.62/_getting-started-macos-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_getting-started-macos-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-windows-android",
              "id": "version-0.62/_getting-started-windows-android",
              "isDocsHomePage": false,
              "title": "_getting-started-windows-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.62/_getting-started-windows-android.md",
              "slug": "/_getting-started-windows-android",
              "permalink": "/docs/0.62/_getting-started-windows-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_getting-started-windows-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-java",
              "id": "version-0.62/_integration-with-exisiting-apps-java",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-java",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.62/_integration-with-exisiting-apps-java.md",
              "slug": "/_integration-with-exisiting-apps-java",
              "permalink": "/docs/0.62/_integration-with-exisiting-apps-java",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_integration-with-exisiting-apps-java.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-objc",
              "id": "version-0.62/_integration-with-exisiting-apps-objc",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-objc",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.62/_integration-with-exisiting-apps-objc.md",
              "slug": "/_integration-with-exisiting-apps-objc",
              "permalink": "/docs/0.62/_integration-with-exisiting-apps-objc",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_integration-with-exisiting-apps-objc.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-swift",
              "id": "version-0.62/_integration-with-exisiting-apps-swift",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-swift",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.62/_integration-with-exisiting-apps-swift.md",
              "slug": "/_integration-with-exisiting-apps-swift",
              "permalink": "/docs/0.62/_integration-with-exisiting-apps-swift",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/_integration-with-exisiting-apps-swift.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "accessibility",
              "id": "version-0.62/accessibility",
              "isDocsHomePage": false,
              "title": "Accessibility",
              "description": "Both Android and iOS provide APIs for integrating apps with assistive technologies like the bundled screen readers VoiceOver (iOS) and TalkBack (Android). React Native has complimentary APIs that let your app accommodate all users.",
              "source": "@site/versioned_docs/version-0.62/accessibility.md",
              "slug": "/accessibility",
              "permalink": "/docs/0.62/accessibility",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/accessibility.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Gesture Responder System",
                "permalink": "/docs/0.62/gesture-responder-system"
              },
              "next": {
                "title": "Performance Overview",
                "permalink": "/docs/0.62/performance"
              }
            },
            {
              "unversionedId": "accessibilityinfo",
              "id": "version-0.62/accessibilityinfo",
              "isDocsHomePage": false,
              "title": "AccessibilityInfo",
              "description": "Sometimes it's useful to know whether or not the device has a screen reader that is currently active. The AccessibilityInfo API is designed for this purpose. You can use it to query the current state of the screen reader as well as to register to be notified when the state of the screen reader changes.",
              "source": "@site/versioned_docs/version-0.62/accessibilityinfo.md",
              "slug": "/accessibilityinfo",
              "permalink": "/docs/0.62/accessibilityinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/accessibilityinfo.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "next": {
                "title": "Alert",
                "permalink": "/docs/0.62/alert"
              }
            },
            {
              "unversionedId": "actionsheetios",
              "id": "version-0.62/actionsheetios",
              "isDocsHomePage": false,
              "title": "ActionSheetIOS",
              "description": "Displays native to iOS Action Sheet component.",
              "source": "@site/versioned_docs/version-0.62/actionsheetios.md",
              "slug": "/actionsheetios",
              "permalink": "/docs/0.62/actionsheetios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/actionsheetios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "ToastAndroid",
                "permalink": "/docs/0.62/toastandroid"
              },
              "next": {
                "title": "Settings",
                "permalink": "/docs/0.62/settings"
              }
            },
            {
              "unversionedId": "activityindicator",
              "id": "version-0.62/activityindicator",
              "isDocsHomePage": false,
              "title": "ActivityIndicator",
              "description": "Displays a circular loading indicator.",
              "source": "@site/versioned_docs/version-0.62/activityindicator.md",
              "slug": "/activityindicator",
              "permalink": "/docs/0.62/activityindicator",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/activityindicator.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Core Components and APIs",
                "permalink": "/docs/0.62/components-and-apis"
              },
              "next": {
                "title": "Button",
                "permalink": "/docs/0.62/button"
              }
            },
            {
              "unversionedId": "alert",
              "id": "version-0.62/alert",
              "isDocsHomePage": false,
              "title": "Alert",
              "description": "Launches an alert dialog with the specified title and message.",
              "source": "@site/versioned_docs/version-0.62/alert.md",
              "slug": "/alert",
              "permalink": "/docs/0.62/alert",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/alert.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "AccessibilityInfo",
                "permalink": "/docs/0.62/accessibilityinfo"
              },
              "next": {
                "title": "Animated",
                "permalink": "/docs/0.62/animated"
              }
            },
            {
              "unversionedId": "alertios",
              "id": "version-0.62/alertios",
              "isDocsHomePage": false,
              "title": "🚧 AlertIOS",
              "description": "Deprecated. Use Alert instead.",
              "source": "@site/versioned_docs/version-0.62/alertios.md",
              "slug": "/alertios",
              "permalink": "/docs/0.62/alertios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/alertios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animated",
              "id": "version-0.62/animated",
              "isDocsHomePage": false,
              "title": "Animated",
              "description": "The Animated library is designed to make animations fluid, powerful, and painless to build and maintain. Animated focuses on declarative relationships between inputs and outputs, configurable transforms in between, and start/stop methods to control time-based animation execution.",
              "source": "@site/versioned_docs/version-0.62/animated.md",
              "slug": "/animated",
              "permalink": "/docs/0.62/animated",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/animated.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Alert",
                "permalink": "/docs/0.62/alert"
              },
              "next": {
                "title": "Appearance",
                "permalink": "/docs/0.62/appearance"
              }
            },
            {
              "unversionedId": "animatedvalue",
              "id": "version-0.62/animatedvalue",
              "isDocsHomePage": false,
              "title": "AnimatedValue",
              "description": "Standard value for driving animations. One Animated.Value can drive multiple properties in a synchronized fashion, but can only be driven by one mechanism at a time. Using a new mechanism (e.g. starting a new animation, or calling setValue) will stop any previous ones.",
              "source": "@site/versioned_docs/version-0.62/animatedvalue.md",
              "slug": "/animatedvalue",
              "permalink": "/docs/0.62/animatedvalue",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/animatedvalue.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animatedvaluexy",
              "id": "version-0.62/animatedvaluexy",
              "isDocsHomePage": false,
              "title": "AnimatedValueXY",
              "description": "2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal Animated.Value, but multiplexed. Contains two regular Animated.Values under the hood.",
              "source": "@site/versioned_docs/version-0.62/animatedvaluexy.md",
              "slug": "/animatedvaluexy",
              "permalink": "/docs/0.62/animatedvaluexy",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/animatedvaluexy.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animations",
              "id": "version-0.62/animations",
              "isDocsHomePage": false,
              "title": "Animations",
              "description": "Animations are very important to create a great user experience. Stationary objects must overcome inertia as they start moving. Objects in motion have momentum and rarely come to a stop immediately. Animations allow you to convey physically believable motion in your interface.",
              "source": "@site/versioned_docs/version-0.62/animations.md",
              "slug": "/animations",
              "permalink": "/docs/0.62/animations",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/animations.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/0.62/navigation"
              },
              "next": {
                "title": "Gesture Responder System",
                "permalink": "/docs/0.62/gesture-responder-system"
              }
            },
            {
              "unversionedId": "app-extensions",
              "id": "version-0.62/app-extensions",
              "isDocsHomePage": false,
              "title": "App Extensions",
              "description": "App extensions let you provide custom functionality and content outside of your main app. There are different types of app extensions on iOS, and they are all covered in the App Extension Programming Guide. In this guide, we'll briefly cover how you may take advantage of app extensions on iOS.",
              "source": "@site/versioned_docs/version-0.62/app-extensions.md",
              "slug": "/app-extensions",
              "permalink": "/docs/0.62/app-extensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/app-extensions.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/0.62/communication-ios"
              }
            },
            {
              "unversionedId": "appearance",
              "id": "version-0.62/appearance",
              "isDocsHomePage": false,
              "title": "Appearance",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.62/appearance.md",
              "slug": "/appearance",
              "permalink": "/docs/0.62/appearance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/appearance.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Animated",
                "permalink": "/docs/0.62/animated"
              },
              "next": {
                "title": "AppRegistry",
                "permalink": "/docs/0.62/appregistry"
              }
            },
            {
              "unversionedId": "appregistry",
              "id": "version-0.62/appregistry",
              "isDocsHomePage": false,
              "title": "AppRegistry",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.62/appregistry.md",
              "slug": "/appregistry",
              "permalink": "/docs/0.62/appregistry",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/appregistry.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Appearance",
                "permalink": "/docs/0.62/appearance"
              },
              "next": {
                "title": "AppState",
                "permalink": "/docs/0.62/appstate"
              }
            },
            {
              "unversionedId": "appstate",
              "id": "version-0.62/appstate",
              "isDocsHomePage": false,
              "title": "AppState",
              "description": "AppState can tell you if the app is in the foreground or background, and notify you when the state changes.",
              "source": "@site/versioned_docs/version-0.62/appstate.md",
              "slug": "/appstate",
              "permalink": "/docs/0.62/appstate",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/appstate.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "AppRegistry",
                "permalink": "/docs/0.62/appregistry"
              },
              "next": {
                "title": "DevSettings",
                "permalink": "/docs/0.62/devsettings"
              }
            },
            {
              "unversionedId": "asyncstorage",
              "id": "version-0.62/asyncstorage",
              "isDocsHomePage": false,
              "title": "🚧 AsyncStorage",
              "description": "Deprecated. Use @react-native-community/async-storage instead.",
              "source": "@site/versioned_docs/version-0.62/asyncstorage.md",
              "slug": "/asyncstorage",
              "permalink": "/docs/0.62/asyncstorage",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/asyncstorage.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backandroid",
              "id": "version-0.62/backandroid",
              "isDocsHomePage": false,
              "title": "BackAndroid",
              "description": "Deprecated. Use BackHandler instead.",
              "source": "@site/versioned_docs/version-0.62/backandroid.md",
              "slug": "/backandroid",
              "permalink": "/docs/0.62/backandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/backandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backhandler",
              "id": "version-0.62/backhandler",
              "isDocsHomePage": false,
              "title": "BackHandler",
              "description": "The Backhandler API detects hardware button presses for back navigation, lets you register event listeners for the system's back action, and lets you control how your application responds. It is Android-only.",
              "source": "@site/versioned_docs/version-0.62/backhandler.md",
              "slug": "/backhandler",
              "permalink": "/docs/0.62/backhandler",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/backhandler.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "useWindowDimensions",
                "permalink": "/docs/0.62/usewindowdimensions"
              },
              "next": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/0.62/permissionsandroid"
              }
            },
            {
              "unversionedId": "building-for-tv",
              "id": "version-0.62/building-for-tv",
              "isDocsHomePage": false,
              "title": "Building For TV Devices",
              "description": "TV devices support has been implemented with the intention of making existing React Native applications work on Apple TV and Android TV, with few or no changes needed in the JavaScript code for the applications.",
              "source": "@site/versioned_docs/version-0.62/building-for-tv.md",
              "slug": "/building-for-tv",
              "permalink": "/docs/0.62/building-for-tv",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/building-for-tv.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/0.62/integration-with-existing-apps"
              },
              "next": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/0.62/out-of-tree-platforms"
              }
            },
            {
              "unversionedId": "button",
              "id": "version-0.62/button",
              "isDocsHomePage": false,
              "title": "Button",
              "description": "A basic button component that should render nicely on any platform. Supports a minimal level of customization.",
              "source": "@site/versioned_docs/version-0.62/button.md",
              "slug": "/button",
              "permalink": "/docs/0.62/button",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/button.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "ActivityIndicator",
                "permalink": "/docs/0.62/activityindicator"
              },
              "next": {
                "title": "FlatList",
                "permalink": "/docs/0.62/flatlist"
              }
            },
            {
              "unversionedId": "cameraroll",
              "id": "version-0.62/cameraroll",
              "isDocsHomePage": false,
              "title": "🚧 CameraRoll",
              "description": "Deprecated. Use @react-native-community/cameraroll instead.",
              "source": "@site/versioned_docs/version-0.62/cameraroll.md",
              "slug": "/cameraroll",
              "permalink": "/docs/0.62/cameraroll",
              "editUrl": "https://github.com/facebook/react-native-website/edit/master/website/versioned_docs/version-0.58/cameraroll.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "checkbox",
              "id": "version-0.62/checkbox",
              "isDocsHomePage": false,
              "title": "🚧 CheckBox",
              "description": "Deprecated. Use @react-native-community/checkbox instead.",
              "source": "@site/versioned_docs/version-0.62/checkbox.md",
              "slug": "/checkbox",
              "permalink": "/docs/0.62/checkbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/checkbox.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "clipboard",
              "id": "version-0.62/clipboard",
              "isDocsHomePage": false,
              "title": "🚧 Clipboard",
              "description": "Deprecated. Use @react-native-community/clipboard instead.",
              "source": "@site/versioned_docs/version-0.62/clipboard.md",
              "slug": "/clipboard",
              "permalink": "/docs/0.62/clipboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/clipboard.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "colors",
              "id": "version-0.62/colors",
              "isDocsHomePage": false,
              "title": "Color Reference",
              "description": "Components in React Native are styled using JavaScript. Color properties usually match how CSS works on the web.",
              "source": "@site/versioned_docs/version-0.62/colors.md",
              "slug": "/colors",
              "permalink": "/docs/0.62/colors",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/colors.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Images",
                "permalink": "/docs/0.62/images"
              },
              "next": {
                "title": "Handling Touches",
                "permalink": "/docs/0.62/handling-touches"
              }
            },
            {
              "unversionedId": "communication-android",
              "id": "version-0.62/communication-android",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.62/communication-android.md",
              "slug": "/communication-android",
              "permalink": "/docs/0.62/communication-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/communication-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "communication-ios",
              "id": "version-0.62/communication-ios",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.62/communication-ios.md",
              "slug": "/communication-ios",
              "permalink": "/docs/0.62/communication-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/communication-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Running On Simulator",
                "permalink": "/docs/0.62/running-on-simulator-ios"
              },
              "next": {
                "title": "App Extensions",
                "permalink": "/docs/0.62/app-extensions"
              }
            },
            {
              "unversionedId": "components-and-apis",
              "id": "version-0.62/components-and-apis",
              "isDocsHomePage": false,
              "title": "Core Components and APIs",
              "description": "React Native provides a number of built-in Core Components ready for you to use in your app. You can find them all in the left sidebar (or menu above, if you are on a narrow screen). If you're not sure where to get started, take a look at the following categories:",
              "source": "@site/versioned_docs/version-0.62/components-and-apis.md",
              "slug": "/components-and-apis",
              "permalink": "/docs/0.62/components-and-apis",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/components-and-apis.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "next": {
                "title": "ActivityIndicator",
                "permalink": "/docs/0.62/activityindicator"
              }
            },
            {
              "unversionedId": "custom-webview-android",
              "id": "version-0.62/custom-webview-android",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.62/custom-webview-android.md",
              "slug": "/custom-webview-android",
              "permalink": "/docs/0.62/custom-webview-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/custom-webview-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "custom-webview-ios",
              "id": "version-0.62/custom-webview-ios",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.62/custom-webview-ios.md",
              "slug": "/custom-webview-ios",
              "permalink": "/docs/0.62/custom-webview-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/custom-webview-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerandroid",
              "id": "version-0.62/datepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.62/datepickerandroid.md",
              "slug": "/datepickerandroid",
              "permalink": "/docs/0.62/datepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/datepickerandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerios",
              "id": "version-0.62/datepickerios",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerIOS",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.62/datepickerios.md",
              "slug": "/datepickerios",
              "permalink": "/docs/0.62/datepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/datepickerios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "debugging",
              "id": "version-0.62/debugging",
              "isDocsHomePage": false,
              "title": "Debugging",
              "description": "Accessing the In-App Developer Menu",
              "source": "@site/versioned_docs/version-0.62/debugging.md",
              "slug": "/debugging",
              "permalink": "/docs/0.62/debugging",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/debugging.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Fast Refresh",
                "permalink": "/docs/0.62/fast-refresh"
              },
              "next": {
                "title": "Testing",
                "permalink": "/docs/0.62/testing-overview"
              }
            },
            {
              "unversionedId": "devsettings",
              "id": "version-0.62/devsettings",
              "isDocsHomePage": false,
              "title": "DevSettings",
              "description": "The DevSettings module exposes methods for customizing settings for developers in development.",
              "source": "@site/versioned_docs/version-0.62/devsettings.md",
              "slug": "/devsettings",
              "permalink": "/docs/0.62/devsettings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/devsettings.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "AppState",
                "permalink": "/docs/0.62/appstate"
              },
              "next": {
                "title": "Dimensions",
                "permalink": "/docs/0.62/dimensions"
              }
            },
            {
              "unversionedId": "dimensions",
              "id": "version-0.62/dimensions",
              "isDocsHomePage": false,
              "title": "Dimensions",
              "description": "useWindowDimensions is the preferred API for React components. Unlike Dimensions, it updates as the window's dimensions update. This works nicely with the React paradigm.",
              "source": "@site/versioned_docs/version-0.62/dimensions.md",
              "slug": "/dimensions",
              "permalink": "/docs/0.62/dimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/dimensions.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "DevSettings",
                "permalink": "/docs/0.62/devsettings"
              },
              "next": {
                "title": "Easing",
                "permalink": "/docs/0.62/easing"
              }
            },
            {
              "unversionedId": "direct-manipulation",
              "id": "version-0.62/direct-manipulation",
              "isDocsHomePage": false,
              "title": "Direct Manipulation",
              "description": "It is sometimes necessary to make changes directly to a component without using state/props to trigger a re-render of the entire subtree. When using React in the browser for example, you sometimes need to directly modify a DOM node, and the same is true for views in mobile apps. setNativeProps is the React Native equivalent to setting properties directly on a DOM node.",
              "source": "@site/versioned_docs/version-0.62/direct-manipulation.md",
              "slug": "/direct-manipulation",
              "permalink": "/docs/0.62/direct-manipulation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/direct-manipulation.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Native Modules Setup",
                "permalink": "/docs/0.62/native-modules-setup"
              },
              "next": {
                "title": "Native Modules",
                "permalink": "/docs/0.62/native-modules-android"
              }
            },
            {
              "unversionedId": "drawerlayoutandroid",
              "id": "version-0.62/drawerlayoutandroid",
              "isDocsHomePage": false,
              "title": "DrawerLayoutAndroid",
              "description": "React component that wraps the platform DrawerLayout (Android only). The Drawer (typically used for navigation) is rendered with renderNavigationView and direct children are the main view (where your content goes). The navigation view is initially not visible on the screen, but can be pulled in from the side of the window specified by the drawerPosition prop and its width can be set by the drawerWidth prop.",
              "source": "@site/versioned_docs/version-0.62/drawerlayoutandroid.md",
              "slug": "/drawerlayoutandroid",
              "permalink": "/docs/0.62/drawerlayoutandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/drawerlayoutandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "VirtualizedList",
                "permalink": "/docs/0.62/virtualizedlist"
              },
              "next": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/0.62/touchablenativefeedback"
              }
            },
            {
              "unversionedId": "easing",
              "id": "version-0.62/easing",
              "isDocsHomePage": false,
              "title": "Easing",
              "description": "The Easing module implements common easing functions. This module is used by Animated.timing() to convey physically believable motion in animations.",
              "source": "@site/versioned_docs/version-0.62/easing.md",
              "slug": "/easing",
              "permalink": "/docs/0.62/easing",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/easing.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Dimensions",
                "permalink": "/docs/0.62/dimensions"
              },
              "next": {
                "title": "InteractionManager",
                "permalink": "/docs/0.62/interactionmanager"
              }
            },
            {
              "unversionedId": "environment-setup",
              "id": "version-0.62/environment-setup",
              "isDocsHomePage": false,
              "title": "Setting up the development environment",
              "description": "This page will help you install and build your first React Native app.",
              "source": "@site/versioned_docs/version-0.62/getting-started.md",
              "slug": "/environment-setup",
              "permalink": "/docs/0.62/environment-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/getting-started.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "More Resources",
                "permalink": "/docs/0.62/more-resources"
              },
              "next": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/0.62/integration-with-existing-apps"
              }
            },
            {
              "unversionedId": "fast-refresh",
              "id": "version-0.62/fast-refresh",
              "isDocsHomePage": false,
              "title": "Fast Refresh",
              "description": "Fast Refresh is a React Native feature that allows you to get near-instant feedback for changes in your React components. Fast Refresh is enabled by default, and you can toggle \"Enable Fast Refresh\" in the React Native developer menu. With Fast Refresh enabled, most edits should be visible within a second or two.",
              "source": "@site/versioned_docs/version-0.62/fast-refresh.md",
              "slug": "/fast-refresh",
              "permalink": "/docs/0.62/fast-refresh",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/fast-refresh.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Running On Device",
                "permalink": "/docs/0.62/running-on-device"
              },
              "next": {
                "title": "Debugging",
                "permalink": "/docs/0.62/debugging"
              }
            },
            {
              "unversionedId": "flatlist",
              "id": "version-0.62/flatlist",
              "isDocsHomePage": false,
              "title": "FlatList",
              "description": "A performant interface for rendering basic, flat lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.62/flatlist.md",
              "slug": "/flatlist",
              "permalink": "/docs/0.62/flatlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/flatlist.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Button",
                "permalink": "/docs/0.62/button"
              },
              "next": {
                "title": "Image",
                "permalink": "/docs/0.62/image"
              }
            },
            {
              "unversionedId": "flexbox",
              "id": "version-0.62/flexbox",
              "isDocsHomePage": false,
              "title": "Layout with Flexbox",
              "description": "A component can specify the layout of its children using the Flexbox algorithm. Flexbox is designed to provide a consistent layout on different screen sizes.",
              "source": "@site/versioned_docs/version-0.62/flexbox.md",
              "slug": "/flexbox",
              "permalink": "/docs/0.62/flexbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/flexbox.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Height and Width",
                "permalink": "/docs/0.62/height-and-width"
              },
              "next": {
                "title": "Images",
                "permalink": "/docs/0.62/images"
              }
            },
            {
              "unversionedId": "geolocation",
              "id": "version-0.62/geolocation",
              "isDocsHomePage": false,
              "title": "🚧 Geolocation",
              "description": "Deprecated. Use @react-native-community/geolocation instead.",
              "source": "@site/versioned_docs/version-0.62/geolocation.md",
              "slug": "/geolocation",
              "permalink": "/docs/0.62/geolocation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/geolocation.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "gesture-responder-system",
              "id": "version-0.62/gesture-responder-system",
              "isDocsHomePage": false,
              "title": "Gesture Responder System",
              "description": "The gesture responder system manages the lifecycle of gestures in your app. A touch can go through several phases as the app determines what the user's intention is. For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping. This can even change during the duration of a touch. There can also be multiple simultaneous touches.",
              "source": "@site/versioned_docs/version-0.62/gesture-responder-system.md",
              "slug": "/gesture-responder-system",
              "permalink": "/docs/0.62/gesture-responder-system",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/gesture-responder-system.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Animations",
                "permalink": "/docs/0.62/animations"
              },
              "next": {
                "title": "Accessibility",
                "permalink": "/docs/0.62/accessibility"
              }
            },
            {
              "unversionedId": "getting-started",
              "id": "version-0.62/getting-started",
              "isDocsHomePage": false,
              "title": "Introduction",
              "description": "This helpful guide lays out the prerequisites for learning React Native, using these docs, and setting up your environment.",
              "source": "@site/versioned_docs/version-0.62/introduction.md",
              "slug": "/getting-started",
              "permalink": "/docs/0.62/getting-started",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/introduction.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "next": {
                "title": "Core Components and Native Components",
                "permalink": "/docs/0.62/intro-react-native-components"
              }
            },
            {
              "unversionedId": "handling-text-input",
              "id": "version-0.62/handling-text-input",
              "isDocsHomePage": false,
              "title": "Handling Text Input",
              "description": "TextInput is a Core Component that allows the user to enter text. It has an onChangeText prop that takes a function to be called every time the text changed, and an onSubmitEditing prop that takes a function to be called when the text is submitted.",
              "source": "@site/versioned_docs/version-0.62/handling-text-input.md",
              "slug": "/handling-text-input",
              "permalink": "/docs/0.62/handling-text-input",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/handling-text-input.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "React Fundamentals",
                "permalink": "/docs/0.62/intro-react"
              },
              "next": {
                "title": "Using a ScrollView",
                "permalink": "/docs/0.62/using-a-scrollview"
              }
            },
            {
              "unversionedId": "handling-touches",
              "id": "version-0.62/handling-touches",
              "isDocsHomePage": false,
              "title": "Handling Touches",
              "description": "Users interact with mobile apps mainly through touch. They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. React Native provides components to handle all sorts of common gestures, as well as a comprehensive gesture responder system to allow for more advanced gesture recognition, but the one component you will most likely be interested in is the basic Button.",
              "source": "@site/versioned_docs/version-0.62/handling-touches.md",
              "slug": "/handling-touches",
              "permalink": "/docs/0.62/handling-touches",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/handling-touches.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Color Reference",
                "permalink": "/docs/0.62/colors"
              },
              "next": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/0.62/navigation"
              }
            },
            {
              "unversionedId": "headless-js-android",
              "id": "version-0.62/headless-js-android",
              "isDocsHomePage": false,
              "title": "Headless JS",
              "description": "Headless JS is a way to run tasks in JavaScript while your app is in the background. It can be used, for example, to sync fresh data, handle push notifications, or play music.",
              "source": "@site/versioned_docs/version-0.62/headless-js-android.md",
              "slug": "/headless-js-android",
              "permalink": "/docs/0.62/headless-js-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/headless-js-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Native UI Components",
                "permalink": "/docs/0.62/native-components-android"
              },
              "next": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/0.62/signed-apk-android"
              }
            },
            {
              "unversionedId": "height-and-width",
              "id": "version-0.62/height-and-width",
              "isDocsHomePage": false,
              "title": "Height and Width",
              "description": "A component's height and width determine its size on the screen.",
              "source": "@site/versioned_docs/version-0.62/height-and-width.md",
              "slug": "/height-and-width",
              "permalink": "/docs/0.62/height-and-width",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/height-and-width.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Style",
                "permalink": "/docs/0.62/style"
              },
              "next": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/0.62/flexbox"
              }
            },
            {
              "unversionedId": "hermes",
              "id": "version-0.62/hermes",
              "isDocsHomePage": false,
              "title": "Using Hermes",
              "description": "Hermes is an open-source JavaScript engine optimized for running React Native apps on Android. For many apps, enabling Hermes will result in improved start-up time, decreased memory usage, and smaller app size. At this time Hermes is an opt-in React Native feature, and this guide explains how to enable it.",
              "source": "@site/versioned_docs/version-0.62/hermes.md",
              "slug": "/hermes",
              "permalink": "/docs/0.62/hermes",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/hermes.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Timers",
                "permalink": "/docs/0.62/timers"
              },
              "next": {
                "title": "Networking",
                "permalink": "/docs/0.62/network"
              }
            },
            {
              "unversionedId": "image",
              "id": "version-0.62/image",
              "isDocsHomePage": false,
              "title": "Image",
              "description": "A React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.",
              "source": "@site/versioned_docs/version-0.62/image.md",
              "slug": "/image",
              "permalink": "/docs/0.62/image",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/image.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "FlatList",
                "permalink": "/docs/0.62/flatlist"
              },
              "next": {
                "title": "ImageBackground",
                "permalink": "/docs/0.62/imagebackground"
              }
            },
            {
              "unversionedId": "image-style-props",
              "id": "version-0.62/image-style-props",
              "isDocsHomePage": false,
              "title": "Image Style Props",
              "description": "Examples",
              "source": "@site/versioned_docs/version-0.62/image-style-props.md",
              "slug": "/image-style-props",
              "permalink": "/docs/0.62/image-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/image-style-props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "InputAccessoryView",
                "permalink": "/docs/0.62/inputaccessoryview"
              },
              "next": {
                "title": "Layout Props",
                "permalink": "/docs/0.62/layout-props"
              }
            },
            {
              "unversionedId": "imagebackground",
              "id": "version-0.62/imagebackground",
              "isDocsHomePage": false,
              "title": "ImageBackground",
              "description": "A common feature request from developers familiar with the web is background-image. To handle this use case, you can use the ` component, which has the same props as `, and add whatever children to it you would like to layer on top of it.",
              "source": "@site/versioned_docs/version-0.62/imagebackground.md",
              "slug": "/imagebackground",
              "permalink": "/docs/0.62/imagebackground",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/imagebackground.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Image",
                "permalink": "/docs/0.62/image"
              },
              "next": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/0.62/keyboardavoidingview"
              }
            },
            {
              "unversionedId": "imageeditor",
              "id": "version-0.62/imageeditor",
              "isDocsHomePage": false,
              "title": "🚧 ImageEditor",
              "description": "Deprecated. Use @react-native-community/image-editor instead.",
              "source": "@site/versioned_docs/version-0.62/imageeditor.md",
              "slug": "/imageeditor",
              "permalink": "/docs/0.62/imageeditor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/imageeditor.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "imagepickerios",
              "id": "version-0.62/imagepickerios",
              "isDocsHomePage": false,
              "title": "🚧 ImagePickerIOS",
              "description": "Deprecated. Use @react-native-community/image-picker-ios instead.",
              "source": "@site/versioned_docs/version-0.62/imagepickerios.md",
              "slug": "/imagepickerios",
              "permalink": "/docs/0.62/imagepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/imagepickerios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "images",
              "id": "version-0.62/images",
              "isDocsHomePage": false,
              "title": "Images",
              "description": "Static Image Resources",
              "source": "@site/versioned_docs/version-0.62/images.md",
              "slug": "/images",
              "permalink": "/docs/0.62/images",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/images.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/0.62/flexbox"
              },
              "next": {
                "title": "Color Reference",
                "permalink": "/docs/0.62/colors"
              }
            },
            {
              "unversionedId": "imagestore",
              "id": "version-0.62/imagestore",
              "isDocsHomePage": false,
              "title": "ImageStore",
              "description": "Deprecated. Use expo-file-system or react-native-fs instead.",
              "source": "@site/versioned_docs/version-0.62/imagestore.md",
              "slug": "/imagestore",
              "permalink": "/docs/0.62/imagestore",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/imagestore.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "improvingux",
              "id": "version-0.62/improvingux",
              "isDocsHomePage": false,
              "title": "Improving User Experience",
              "description": "Configure text inputs",
              "source": "@site/versioned_docs/version-0.62/improvingux.md",
              "slug": "/improvingux",
              "permalink": "/docs/0.62/improvingux",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/improvingux.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "inputaccessoryview",
              "id": "version-0.62/inputaccessoryview",
              "isDocsHomePage": false,
              "title": "InputAccessoryView",
              "description": "A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars.",
              "source": "@site/versioned_docs/version-0.62/inputaccessoryview.md",
              "slug": "/inputaccessoryview",
              "permalink": "/docs/0.62/inputaccessoryview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/inputaccessoryview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/0.62/touchablenativefeedback"
              },
              "next": {
                "title": "Image Style Props",
                "permalink": "/docs/0.62/image-style-props"
              }
            },
            {
              "unversionedId": "integration-with-existing-apps",
              "id": "version-0.62/integration-with-existing-apps",
              "isDocsHomePage": false,
              "title": "Integration with Existing Apps",
              "description": "React Native is great when you are starting a new mobile app from scratch. However, it also works well for adding a single view or user flow to existing native applications. With a few steps, you can add new React Native based features, screens, views, etc.",
              "source": "@site/versioned_docs/version-0.62/integration-with-existing-apps.md",
              "slug": "/integration-with-existing-apps",
              "permalink": "/docs/0.62/integration-with-existing-apps",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/integration-with-existing-apps.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Setting up the development environment",
                "permalink": "/docs/0.62/environment-setup"
              },
              "next": {
                "title": "Building For TV Devices",
                "permalink": "/docs/0.62/building-for-tv"
              }
            },
            {
              "unversionedId": "interactionmanager",
              "id": "version-0.62/interactionmanager",
              "isDocsHomePage": false,
              "title": "InteractionManager",
              "description": "InteractionManager allows long-running work to be scheduled after any interactions/animations have completed. In particular, this allows JavaScript animations to run smoothly.",
              "source": "@site/versioned_docs/version-0.62/interactionmanager.md",
              "slug": "/interactionmanager",
              "permalink": "/docs/0.62/interactionmanager",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/interactionmanager.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Easing",
                "permalink": "/docs/0.62/easing"
              },
              "next": {
                "title": "Keyboard",
                "permalink": "/docs/0.62/keyboard"
              }
            },
            {
              "unversionedId": "intro-react",
              "id": "version-0.62/intro-react",
              "isDocsHomePage": false,
              "title": "React Fundamentals",
              "description": "To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed.",
              "source": "@site/versioned_docs/version-0.62/intro-react.md",
              "slug": "/intro-react",
              "permalink": "/docs/0.62/intro-react",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/intro-react.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Core Components and Native Components",
                "permalink": "/docs/0.62/intro-react-native-components"
              },
              "next": {
                "title": "Handling Text Input",
                "permalink": "/docs/0.62/handling-text-input"
              }
            },
            {
              "unversionedId": "intro-react-native-components",
              "id": "version-0.62/intro-react-native-components",
              "isDocsHomePage": false,
              "title": "Core Components and Native Components",
              "description": "React Native lets you compose app interfaces using Native Components. Conveniently, it comes with a set of these components for you to get started with right now—the Core Components!",
              "source": "@site/versioned_docs/version-0.62/intro-react-native-components.md",
              "slug": "/intro-react-native-components",
              "permalink": "/docs/0.62/intro-react-native-components",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/intro-react-native-components.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/0.62/getting-started"
              },
              "next": {
                "title": "React Fundamentals",
                "permalink": "/docs/0.62/intro-react"
              }
            },
            {
              "unversionedId": "javascript-environment",
              "id": "version-0.62/javascript-environment",
              "isDocsHomePage": false,
              "title": "JavaScript Environment",
              "description": "JavaScript Runtime",
              "source": "@site/versioned_docs/version-0.62/javascript-environment.md",
              "slug": "/javascript-environment",
              "permalink": "/docs/0.62/javascript-environment",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/javascript-environment.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Profiling",
                "permalink": "/docs/0.62/profiling"
              },
              "next": {
                "title": "Timers",
                "permalink": "/docs/0.62/timers"
              }
            },
            {
              "unversionedId": "keyboard",
              "id": "version-0.62/keyboard",
              "isDocsHomePage": false,
              "title": "Keyboard",
              "description": "Keyboard module to control keyboard events.",
              "source": "@site/versioned_docs/version-0.62/keyboard.md",
              "slug": "/keyboard",
              "permalink": "/docs/0.62/keyboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/keyboard.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "InteractionManager",
                "permalink": "/docs/0.62/interactionmanager"
              },
              "next": {
                "title": "LayoutAnimation",
                "permalink": "/docs/0.62/layoutanimation"
              }
            },
            {
              "unversionedId": "keyboardavoidingview",
              "id": "version-0.62/keyboardavoidingview",
              "isDocsHomePage": false,
              "title": "KeyboardAvoidingView",
              "description": "It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard. It can automatically adjust either its height, position, or bottom padding based on the keyboard height.",
              "source": "@site/versioned_docs/version-0.62/keyboardavoidingview.md",
              "slug": "/keyboardavoidingview",
              "permalink": "/docs/0.62/keyboardavoidingview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/keyboardavoidingview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "ImageBackground",
                "permalink": "/docs/0.62/imagebackground"
              },
              "next": {
                "title": "Modal",
                "permalink": "/docs/0.62/modal"
              }
            },
            {
              "unversionedId": "layout-props",
              "id": "version-0.62/layout-props",
              "isDocsHomePage": false,
              "title": "Layout Props",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.62/layout-props.md",
              "slug": "/layout-props",
              "permalink": "/docs/0.62/layout-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/layout-props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Image Style Props",
                "permalink": "/docs/0.62/image-style-props"
              },
              "next": {
                "title": "Shadow Props",
                "permalink": "/docs/0.62/shadow-props"
              }
            },
            {
              "unversionedId": "layoutanimation",
              "id": "version-0.62/layoutanimation",
              "isDocsHomePage": false,
              "title": "LayoutAnimation",
              "description": "Automatically animates views to their new positions when the next layout happens.",
              "source": "@site/versioned_docs/version-0.62/layoutanimation.md",
              "slug": "/layoutanimation",
              "permalink": "/docs/0.62/layoutanimation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/layoutanimation.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Keyboard",
                "permalink": "/docs/0.62/keyboard"
              },
              "next": {
                "title": "Linking",
                "permalink": "/docs/0.62/linking"
              }
            },
            {
              "unversionedId": "libraries",
              "id": "version-0.62/libraries",
              "isDocsHomePage": false,
              "title": "Using Libraries",
              "description": "This guide introduces React Native developers to finding, installing, and using third-party libraries in their apps.",
              "source": "@site/versioned_docs/version-0.62/libraries.md",
              "slug": "/libraries",
              "permalink": "/docs/0.62/libraries",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/libraries.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Testing",
                "permalink": "/docs/0.62/testing-overview"
              },
              "next": {
                "title": "Using TypeScript with React Native",
                "permalink": "/docs/0.62/typescript"
              }
            },
            {
              "unversionedId": "linking",
              "id": "version-0.62/linking",
              "isDocsHomePage": false,
              "title": "Linking",
              "description": "Projects with Native Code Only",
              "source": "@site/versioned_docs/version-0.62/linking.md",
              "slug": "/linking",
              "permalink": "/docs/0.62/linking",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/linking.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "LayoutAnimation",
                "permalink": "/docs/0.62/layoutanimation"
              },
              "next": {
                "title": "PanResponder",
                "permalink": "/docs/0.62/panresponder"
              }
            },
            {
              "unversionedId": "linking-libraries-ios",
              "id": "version-0.62/linking-libraries-ios",
              "isDocsHomePage": false,
              "title": "Linking Libraries",
              "description": "Not every app uses all the native capabilities, and including the code to support all those features would impact the binary size... But we still want to support adding these features whenever you need them.",
              "source": "@site/versioned_docs/version-0.62/linking-libraries-ios.md",
              "slug": "/linking-libraries-ios",
              "permalink": "/docs/0.62/linking-libraries-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/linking-libraries-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Native UI Components",
                "permalink": "/docs/0.62/native-components-ios"
              },
              "next": {
                "title": "Running On Simulator",
                "permalink": "/docs/0.62/running-on-simulator-ios"
              }
            },
            {
              "unversionedId": "listview",
              "id": "version-0.62/listview",
              "isDocsHomePage": false,
              "title": "ListView",
              "description": "DEPRECATED - use one of the new list components, such as FlatList or SectionList for bounded memory use, fewer bugs, better performance, an easier to use API, and more features. Check out this blog post for more details.",
              "source": "@site/versioned_docs/version-0.62/listview.md",
              "slug": "/listview",
              "permalink": "/docs/0.62/listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/listview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "listviewdatasource",
              "id": "version-0.62/listviewdatasource",
              "isDocsHomePage": false,
              "title": "ListViewDataSource",
              "description": "Provides efficient data processing and access to the ListView component. A ListViewDataSource is created with functions for extracting data from the input blob, and comparing elements (with default implementations for convenience). The input blob can be as flat as an array of strings, or an object with rows nested inside section objects.",
              "source": "@site/versioned_docs/version-0.62/listviewdatasource.md",
              "slug": "/listviewdatasource",
              "permalink": "/docs/0.62/listviewdatasource",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/listviewdatasource.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "maskedviewios",
              "id": "version-0.62/maskedviewios",
              "isDocsHomePage": false,
              "title": "🚧 MaskedViewIOS",
              "description": "Deprecated. Use @react-native-community/masked-view instead.",
              "source": "@site/versioned_docs/version-0.62/maskedviewios.md",
              "slug": "/maskedviewios",
              "permalink": "/docs/0.62/maskedviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/maskedviewios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "modal",
              "id": "version-0.62/modal",
              "isDocsHomePage": false,
              "title": "Modal",
              "description": "The Modal component is a basic way to present content above an enclosing view.",
              "source": "@site/versioned_docs/version-0.62/modal.md",
              "slug": "/modal",
              "permalink": "/docs/0.62/modal",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/modal.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/0.62/keyboardavoidingview"
              },
              "next": {
                "title": "RefreshControl",
                "permalink": "/docs/0.62/refreshcontrol"
              }
            },
            {
              "unversionedId": "more-resources",
              "id": "version-0.62/more-resources",
              "isDocsHomePage": false,
              "title": "More Resources",
              "description": "Congratulations! You built your first React Native app. But there’s more to learn: developer workflows, shipping to app stores, internationalization, security and more.",
              "source": "@site/versioned_docs/version-0.62/more-resources.md",
              "slug": "/more-resources",
              "permalink": "/docs/0.62/more-resources",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/more-resources.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Platform Specific Code",
                "permalink": "/docs/0.62/platform-specific-code"
              },
              "next": {
                "title": "Setting up the development environment",
                "permalink": "/docs/0.62/environment-setup"
              }
            },
            {
              "unversionedId": "native-components-android",
              "id": "version-0.62/native-components-android",
              "isDocsHomePage": false,
              "title": "Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.62/native-components-android.md",
              "slug": "/native-components-android",
              "permalink": "/docs/0.62/native-components-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/native-components-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Native Modules",
                "permalink": "/docs/0.62/native-modules-android"
              },
              "next": {
                "title": "Headless JS",
                "permalink": "/docs/0.62/headless-js-android"
              }
            },
            {
              "unversionedId": "native-components-ios",
              "id": "version-0.62/native-components-ios",
              "isDocsHomePage": false,
              "title": "Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.62/native-components-ios.md",
              "slug": "/native-components-ios",
              "permalink": "/docs/0.62/native-components-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/native-components-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Native Modules",
                "permalink": "/docs/0.62/native-modules-ios"
              },
              "next": {
                "title": "Linking Libraries",
                "permalink": "/docs/0.62/linking-libraries-ios"
              }
            },
            {
              "unversionedId": "native-modules-android",
              "id": "version-0.62/native-modules-android",
              "isDocsHomePage": false,
              "title": "Native Modules",
              "description": "Sometimes an app needs access to a platform API that React Native doesn't have a corresponding module for yet. Maybe you want to reuse some existing Java code without having to reimplement it in JavaScript, or write some high performance, multi-threaded code such as for image processing, a database, or any number of advanced extensions.",
              "source": "@site/versioned_docs/version-0.62/native-modules-android.md",
              "slug": "/native-modules-android",
              "permalink": "/docs/0.62/native-modules-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/native-modules-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Direct Manipulation",
                "permalink": "/docs/0.62/direct-manipulation"
              },
              "next": {
                "title": "Native UI Components",
                "permalink": "/docs/0.62/native-components-android"
              }
            },
            {
              "unversionedId": "native-modules-ios",
              "id": "version-0.62/native-modules-ios",
              "isDocsHomePage": false,
              "title": "Native Modules",
              "description": "Sometimes an app needs to access a platform API and React Native doesn't have a corresponding module yet. Maybe you want to reuse some existing Objective-C, Swift or C++ code without having to reimplement it in JavaScript, or write some high performance, multi-threaded code such as for image processing, a database, or any number of advanced extensions.",
              "source": "@site/versioned_docs/version-0.62/native-modules-ios.md",
              "slug": "/native-modules-ios",
              "permalink": "/docs/0.62/native-modules-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/native-modules-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/0.62/removing-default-permissions"
              },
              "next": {
                "title": "Native UI Components",
                "permalink": "/docs/0.62/native-components-ios"
              }
            },
            {
              "unversionedId": "native-modules-setup",
              "id": "version-0.62/native-modules-setup",
              "isDocsHomePage": false,
              "title": "Native Modules Setup",
              "description": "Native modules are usually distributed as npm packages, except that on top of the usual JavaScript they will include some native code per platform. To understand more about npm packages you may find this guide useful.",
              "source": "@site/versioned_docs/version-0.62/native-modules-setup.md",
              "slug": "/native-modules-setup",
              "permalink": "/docs/0.62/native-modules-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/native-modules-setup.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Security",
                "permalink": "/docs/0.62/security"
              },
              "next": {
                "title": "Direct Manipulation",
                "permalink": "/docs/0.62/direct-manipulation"
              }
            },
            {
              "unversionedId": "navigation",
              "id": "version-0.62/navigation",
              "isDocsHomePage": false,
              "title": "Navigating Between Screens",
              "description": "Mobile apps are rarely made up of a single screen. Managing the presentation of, and transition between, multiple screens is typically handled by what is known as a navigator.",
              "source": "@site/versioned_docs/version-0.62/navigation.md",
              "slug": "/navigation",
              "permalink": "/docs/0.62/navigation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/navigation.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Handling Touches",
                "permalink": "/docs/0.62/handling-touches"
              },
              "next": {
                "title": "Animations",
                "permalink": "/docs/0.62/animations"
              }
            },
            {
              "unversionedId": "netinfo",
              "id": "version-0.62/netinfo",
              "isDocsHomePage": false,
              "title": "NetInfo",
              "description": "Deprecated. Use react-native-community/react-native-netinfo instead.",
              "source": "@site/versioned_docs/version-0.62/netinfo.md",
              "slug": "/netinfo",
              "permalink": "/docs/0.62/netinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/netinfo.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "network",
              "id": "version-0.62/network",
              "isDocsHomePage": false,
              "title": "Networking",
              "description": "Many mobile apps need to load resources from a remote URL. You may want to make a POST request to a REST API, or you may need to fetch a chunk of static content from another server.",
              "source": "@site/versioned_docs/version-0.62/network.md",
              "slug": "/network",
              "permalink": "/docs/0.62/network",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/network.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Using Hermes",
                "permalink": "/docs/0.62/hermes"
              },
              "next": {
                "title": "Security",
                "permalink": "/docs/0.62/security"
              }
            },
            {
              "unversionedId": "optimizing-flatlist-configuration",
              "id": "version-0.62/optimizing-flatlist-configuration",
              "isDocsHomePage": false,
              "title": "Optimizing Flatlist Configuration",
              "description": "Terms",
              "source": "@site/versioned_docs/version-0.62/optimizing-flatlist-configuration.md",
              "slug": "/optimizing-flatlist-configuration",
              "permalink": "/docs/0.62/optimizing-flatlist-configuration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/optimizing-flatlist-configuration.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Performance Overview",
                "permalink": "/docs/0.62/performance"
              },
              "next": {
                "title": "RAM Bundles and Inline Requires",
                "permalink": "/docs/0.62/ram-bundles-inline-requires"
              }
            },
            {
              "unversionedId": "out-of-tree-platforms",
              "id": "version-0.62/out-of-tree-platforms",
              "isDocsHomePage": false,
              "title": "Out-of-Tree Platforms",
              "description": "React Native is not only for Android and iOS - there are community-supported projects that bring it to other platforms, such as:",
              "source": "@site/versioned_docs/version-0.62/out-of-tree-platforms.md",
              "slug": "/out-of-tree-platforms",
              "permalink": "/docs/0.62/out-of-tree-platforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/out-of-tree-platforms.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Building For TV Devices",
                "permalink": "/docs/0.62/building-for-tv"
              },
              "next": {
                "title": "Running On Device",
                "permalink": "/docs/0.62/running-on-device"
              }
            },
            {
              "unversionedId": "panresponder",
              "id": "version-0.62/panresponder",
              "isDocsHomePage": false,
              "title": "PanResponder",
              "description": "PanResponder reconciles several touches into a single gesture. It makes single-touch gestures resilient to extra touches, and can be used to recognize basic multi-touch gestures.",
              "source": "@site/versioned_docs/version-0.62/panresponder.md",
              "slug": "/panresponder",
              "permalink": "/docs/0.62/panresponder",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/panresponder.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Linking",
                "permalink": "/docs/0.62/linking"
              },
              "next": {
                "title": "PixelRatio",
                "permalink": "/docs/0.62/pixelratio"
              }
            },
            {
              "unversionedId": "performance",
              "id": "version-0.62/performance",
              "isDocsHomePage": false,
              "title": "Performance Overview",
              "description": "A compelling reason for using React Native instead of WebView-based tools is to achieve 60 frames per second and a native look and feel to your apps. Where possible, we would like for React Native to do the right thing and help you to focus on your app instead of performance optimization, but there are areas where we're not quite there yet, and others where React Native (similar to writing native code directly) cannot possibly determine the best way to optimize for you and so manual intervention will be necessary. We try our best to deliver buttery-smooth UI performance by default, but sometimes that isn't possible.",
              "source": "@site/versioned_docs/version-0.62/performance.md",
              "slug": "/performance",
              "permalink": "/docs/0.62/performance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/performance.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Accessibility",
                "permalink": "/docs/0.62/accessibility"
              },
              "next": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/0.62/optimizing-flatlist-configuration"
              }
            },
            {
              "unversionedId": "permissionsandroid",
              "id": "version-0.62/permissionsandroid",
              "isDocsHomePage": false,
              "title": "PermissionsAndroid",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.62/permissionsandroid.md",
              "slug": "/permissionsandroid",
              "permalink": "/docs/0.62/permissionsandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/permissionsandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "BackHandler",
                "permalink": "/docs/0.62/backhandler"
              },
              "next": {
                "title": "ToastAndroid",
                "permalink": "/docs/0.62/toastandroid"
              }
            },
            {
              "unversionedId": "picker",
              "id": "version-0.62/picker",
              "isDocsHomePage": false,
              "title": "🚧 Picker",
              "description": "Deprecated. Use @react-native-community/picker instead.",
              "source": "@site/versioned_docs/version-0.62/picker.md",
              "slug": "/picker",
              "permalink": "/docs/0.62/picker",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/picker.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-item",
              "id": "version-0.62/picker-item",
              "isDocsHomePage": false,
              "title": "Picker.Item",
              "description": "Individual selectable item in a Picker.",
              "source": "@site/versioned_docs/version-0.62/picker-item.md",
              "slug": "/picker-item",
              "permalink": "/docs/0.62/picker-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/picker-item.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-style-props",
              "id": "version-0.62/picker-style-props",
              "isDocsHomePage": false,
              "title": "Picker Style Props",
              "description": "Picker style props.",
              "source": "@site/versioned_docs/version-0.62/picker-style-props.md",
              "slug": "/picker-style-props",
              "permalink": "/docs/0.62/picker-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/picker-style-props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pickerios",
              "id": "version-0.62/pickerios",
              "isDocsHomePage": false,
              "title": "🚧 PickerIOS",
              "description": "Deprecated. Use @react-native-community/picker instead.",
              "source": "@site/versioned_docs/version-0.62/pickerios.md",
              "slug": "/pickerios",
              "permalink": "/docs/0.62/pickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/pickerios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pixelratio",
              "id": "version-0.62/pixelratio",
              "isDocsHomePage": false,
              "title": "PixelRatio",
              "description": "PixelRatio gives you access to the device's pixel density and font scale.",
              "source": "@site/versioned_docs/version-0.62/pixelratio.md",
              "slug": "/pixelratio",
              "permalink": "/docs/0.62/pixelratio",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/pixelratio.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "PanResponder",
                "permalink": "/docs/0.62/panresponder"
              },
              "next": {
                "title": "Share",
                "permalink": "/docs/0.62/share"
              }
            },
            {
              "unversionedId": "platform-specific-code",
              "id": "version-0.62/platform-specific-code",
              "isDocsHomePage": false,
              "title": "Platform Specific Code",
              "description": "When building a cross-platform app, you'll want to re-use as much code as possible. Scenarios may arise where it makes sense for the code to be different, for example you may want to implement separate visual components for Android and iOS.",
              "source": "@site/versioned_docs/version-0.62/platform-specific-code.md",
              "slug": "/platform-specific-code",
              "permalink": "/docs/0.62/platform-specific-code",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/platform-specific-code.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Troubleshooting",
                "permalink": "/docs/0.62/troubleshooting"
              },
              "next": {
                "title": "More Resources",
                "permalink": "/docs/0.62/more-resources"
              }
            },
            {
              "unversionedId": "profiling",
              "id": "version-0.62/profiling",
              "isDocsHomePage": false,
              "title": "Profiling",
              "description": "Use the built-in profiler to get detailed information about work done in the JavaScript thread and main thread side-by-side. Access it by selecting Perf Monitor from the Debug menu.",
              "source": "@site/versioned_docs/version-0.62/profiling.md",
              "slug": "/profiling",
              "permalink": "/docs/0.62/profiling",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/profiling.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "RAM Bundles and Inline Requires",
                "permalink": "/docs/0.62/ram-bundles-inline-requires"
              },
              "next": {
                "title": "JavaScript Environment",
                "permalink": "/docs/0.62/javascript-environment"
              }
            },
            {
              "unversionedId": "progressbarandroid",
              "id": "version-0.62/progressbarandroid",
              "isDocsHomePage": false,
              "title": "🚧 ProgressBarAndroid",
              "description": "Deprecated. Use @react-native-community/progress-bar-android instead.",
              "source": "@site/versioned_docs/version-0.62/progressbarandroid.md",
              "slug": "/progressbarandroid",
              "permalink": "/docs/0.62/progressbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/progressbarandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "progressviewios",
              "id": "version-0.62/progressviewios",
              "isDocsHomePage": false,
              "title": "🚧 ProgressViewIOS",
              "description": "Deprecated. Use @react-native-community/progress-view instead.",
              "source": "@site/versioned_docs/version-0.62/progressviewios.md",
              "slug": "/progressviewios",
              "permalink": "/docs/0.62/progressviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/progressviewios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "props",
              "id": "version-0.62/props",
              "isDocsHomePage": false,
              "title": "Props",
              "description": "Most components can be customized when they are created, with different parameters. These created parameters are called props, short for properties.",
              "source": "@site/versioned_docs/version-0.62/props.md",
              "slug": "/props",
              "permalink": "/docs/0.62/props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-forks",
              "id": "version-0.62/publishing-forks",
              "isDocsHomePage": false,
              "title": "Publish your own version of react native",
              "description": "TL;DR",
              "source": "@site/versioned_docs/version-0.62/publishing.md",
              "slug": "/publishing-forks",
              "permalink": "/docs/0.62/publishing-forks",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/publishing.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-to-app-store",
              "id": "version-0.62/publishing-to-app-store",
              "isDocsHomePage": false,
              "title": "Publishing to Apple App Store",
              "description": "The publishing process is the same as any other native iOS app, with some additional considerations to take into account.",
              "source": "@site/versioned_docs/version-0.62/publishing-to-app-store.md",
              "slug": "/publishing-to-app-store",
              "permalink": "/docs/0.62/publishing-to-app-store",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/publishing-to-app-store.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pushnotificationios",
              "id": "version-0.62/pushnotificationios",
              "isDocsHomePage": false,
              "title": "🚧 PushNotificationIOS",
              "description": "Deprecated. Use @react-native-community/push-notification-ios instead.",
              "source": "@site/versioned_docs/version-0.62/pushnotificationios.md",
              "slug": "/pushnotificationios",
              "permalink": "/docs/0.62/pushnotificationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/pushnotificationios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "ram-bundles-inline-requires",
              "id": "version-0.62/ram-bundles-inline-requires",
              "isDocsHomePage": false,
              "title": "RAM Bundles and Inline Requires",
              "description": "If you have a large app you may want to consider the Random Access Modules (RAM) bundle format, and using inline requires. This is useful for apps that have a large number of screens which may not ever be opened during a typical usage of the app. Generally it is useful to apps that have large amounts of code that are not needed for a while after startup. For instance the app includes complicated profile screens or lesser used features, but most sessions only involve visiting the main screen of the app for updates. We can optimize the loading of the bundle by using the RAM format and requiring those features and screens inline (when they are actually used).",
              "source": "@site/versioned_docs/version-0.62/ram-bundles-inline-requires.md",
              "slug": "/ram-bundles-inline-requires",
              "permalink": "/docs/0.62/ram-bundles-inline-requires",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/ram-bundles-inline-requires.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/0.62/optimizing-flatlist-configuration"
              },
              "next": {
                "title": "Profiling",
                "permalink": "/docs/0.62/profiling"
              }
            },
            {
              "unversionedId": "react-node",
              "id": "version-0.62/react-node",
              "isDocsHomePage": false,
              "title": "React Node Object Type",
              "description": "A React Node is one of the following types:",
              "source": "@site/versioned_docs/version-0.62/react-node.md",
              "slug": "/react-node",
              "permalink": "/docs/0.62/react-node",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/react-node.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "refreshcontrol",
              "id": "version-0.62/refreshcontrol",
              "isDocsHomePage": false,
              "title": "RefreshControl",
              "description": "This component is used inside a ScrollView or ListView to add pull to refresh functionality. When the ScrollView is at scrollY: 0, swiping down triggers an onRefresh event.",
              "source": "@site/versioned_docs/version-0.62/refreshcontrol.md",
              "slug": "/refreshcontrol",
              "permalink": "/docs/0.62/refreshcontrol",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/refreshcontrol.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Modal",
                "permalink": "/docs/0.62/modal"
              },
              "next": {
                "title": "SafeAreaView",
                "permalink": "/docs/0.62/safeareaview"
              }
            },
            {
              "unversionedId": "removing-default-permissions",
              "id": "version-0.62/removing-default-permissions",
              "isDocsHomePage": false,
              "title": "Removing Default Permissions",
              "description": "By default, some permissions are added to your Android APK.",
              "source": "@site/versioned_docs/version-0.62/removing-default-permissions.md",
              "slug": "/removing-default-permissions",
              "permalink": "/docs/0.62/removing-default-permissions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/removing-default-permissions.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/0.62/signed-apk-android"
              },
              "next": {
                "title": "Native Modules",
                "permalink": "/docs/0.62/native-modules-ios"
              }
            },
            {
              "unversionedId": "running-on-device",
              "id": "version-0.62/running-on-device",
              "isDocsHomePage": false,
              "title": "Running On Device",
              "description": "It's always a good idea to test your app on an actual device before releasing it to your users. This document will guide you through the necessary steps to run your React Native app on a device and to get it ready for production.",
              "source": "@site/versioned_docs/version-0.62/running-on-device.md",
              "slug": "/running-on-device",
              "permalink": "/docs/0.62/running-on-device",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/running-on-device.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/0.62/out-of-tree-platforms"
              },
              "next": {
                "title": "Fast Refresh",
                "permalink": "/docs/0.62/fast-refresh"
              }
            },
            {
              "unversionedId": "running-on-simulator-ios",
              "id": "version-0.62/running-on-simulator-ios",
              "isDocsHomePage": false,
              "title": "Running On Simulator",
              "description": "Starting the simulator",
              "source": "@site/versioned_docs/version-0.62/running-on-simulator-ios.md",
              "slug": "/running-on-simulator-ios",
              "permalink": "/docs/0.62/running-on-simulator-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/running-on-simulator-ios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Linking Libraries",
                "permalink": "/docs/0.62/linking-libraries-ios"
              },
              "next": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/0.62/communication-ios"
              }
            },
            {
              "unversionedId": "safeareaview",
              "id": "version-0.62/safeareaview",
              "isDocsHomePage": false,
              "title": "SafeAreaView",
              "description": "The purpose of SafeAreaView is to render content within the safe area boundaries of a device. It is currently only applicable to iOS devices with iOS version 11 or later.",
              "source": "@site/versioned_docs/version-0.62/safeareaview.md",
              "slug": "/safeareaview",
              "permalink": "/docs/0.62/safeareaview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/safeareaview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "RefreshControl",
                "permalink": "/docs/0.62/refreshcontrol"
              },
              "next": {
                "title": "ScrollView",
                "permalink": "/docs/0.62/scrollview"
              }
            },
            {
              "unversionedId": "scrollview",
              "id": "version-0.62/scrollview",
              "isDocsHomePage": false,
              "title": "ScrollView",
              "description": "Component that wraps platform ScrollView while providing integration with touch locking \"responder\" system.",
              "source": "@site/versioned_docs/version-0.62/scrollview.md",
              "slug": "/scrollview",
              "permalink": "/docs/0.62/scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/scrollview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "SafeAreaView",
                "permalink": "/docs/0.62/safeareaview"
              },
              "next": {
                "title": "SectionList",
                "permalink": "/docs/0.62/sectionlist"
              }
            },
            {
              "unversionedId": "sectionlist",
              "id": "version-0.62/sectionlist",
              "isDocsHomePage": false,
              "title": "SectionList",
              "description": "A performant interface for rendering sectioned lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.62/sectionlist.md",
              "slug": "/sectionlist",
              "permalink": "/docs/0.62/sectionlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/sectionlist.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "ScrollView",
                "permalink": "/docs/0.62/scrollview"
              },
              "next": {
                "title": "StatusBar",
                "permalink": "/docs/0.62/statusbar"
              }
            },
            {
              "unversionedId": "security",
              "id": "version-0.62/security",
              "isDocsHomePage": false,
              "title": "Security",
              "description": "Security is often overlooked when building apps. It is true that it is impossible to build software that is completely impenetrable—we’ve yet to invent a completely impenetrable lock (bank vaults do, after all, still get broken into). However, the probability of falling victim to a malicious attack or being exposed for a security vulnerability is inversely proportional to the effort you’re willing to put in to protecting your application against any such eventuality. Although an ordinary padlock is pickable, it is still much harder to get past than a cabinet hook!",
              "source": "@site/versioned_docs/version-0.62/security.md",
              "slug": "/security",
              "permalink": "/docs/0.62/security",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/security.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Networking",
                "permalink": "/docs/0.62/network"
              },
              "next": {
                "title": "Native Modules Setup",
                "permalink": "/docs/0.62/native-modules-setup"
              }
            },
            {
              "unversionedId": "segmentedcontrolios",
              "id": "version-0.62/segmentedcontrolios",
              "isDocsHomePage": false,
              "title": "🚧 SegmentedControlIOS",
              "description": "Deprecated. Use @react-native-community/segmented-control instead.",
              "source": "@site/versioned_docs/version-0.62/segmentedcontrolios.md",
              "slug": "/segmentedcontrolios",
              "permalink": "/docs/0.62/segmentedcontrolios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/segmentedcontrolios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "settings",
              "id": "version-0.62/settings",
              "isDocsHomePage": false,
              "title": "Settings",
              "description": "Settings serves as a wrapper for NSUserDefaults, a persistent key-value store available only on iOS.",
              "source": "@site/versioned_docs/version-0.62/settings.md",
              "slug": "/settings",
              "permalink": "/docs/0.62/settings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/settings.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/0.62/actionsheetios"
              }
            },
            {
              "unversionedId": "shadow-props",
              "id": "version-0.62/shadow-props",
              "isDocsHomePage": false,
              "title": "Shadow Props",
              "description": "`SnackPlayer name=Shadow%20Props&supportedPlatforms=ios",
              "source": "@site/versioned_docs/version-0.62/shadow-props.md",
              "slug": "/shadow-props",
              "permalink": "/docs/0.62/shadow-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/shadow-props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Layout Props",
                "permalink": "/docs/0.62/layout-props"
              },
              "next": {
                "title": "Text Style Props",
                "permalink": "/docs/0.62/text-style-props"
              }
            },
            {
              "unversionedId": "share",
              "id": "version-0.62/share",
              "isDocsHomePage": false,
              "title": "Share",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.62/share.md",
              "slug": "/share",
              "permalink": "/docs/0.62/share",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/share.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "PixelRatio",
                "permalink": "/docs/0.62/pixelratio"
              },
              "next": {
                "title": "StyleSheet",
                "permalink": "/docs/0.62/stylesheet"
              }
            },
            {
              "unversionedId": "signed-apk-android",
              "id": "version-0.62/signed-apk-android",
              "isDocsHomePage": false,
              "title": "Publishing to Google Play Store",
              "description": "Android requires that all apps be digitally signed with a certificate before they can be installed. In order to distribute your Android application via Google Play store it needs to be signed with a release key that then needs to be used for all future updates. Since 2017 it is possible for Google Play to manage signing releases automatically thanks to App Signing by Google Play functionality. However, before your application binary is uploaded to Google Play it needs to be signed with an upload key. The Signing Your Applications page on Android Developers documentation describes the topic in detail. This guide covers the process in brief, as well as lists the steps required to package the JavaScript bundle.",
              "source": "@site/versioned_docs/version-0.62/signed-apk-android.md",
              "slug": "/signed-apk-android",
              "permalink": "/docs/0.62/signed-apk-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/signed-apk-android.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Headless JS",
                "permalink": "/docs/0.62/headless-js-android"
              },
              "next": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/0.62/removing-default-permissions"
              }
            },
            {
              "unversionedId": "slider",
              "id": "version-0.62/slider",
              "isDocsHomePage": false,
              "title": "🚧 Slider",
              "description": "Deprecated. Use @react-native-community/slider instead.",
              "source": "@site/versioned_docs/version-0.62/slider.md",
              "slug": "/slider",
              "permalink": "/docs/0.62/slider",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/slider.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "snapshotviewios",
              "id": "version-0.62/snapshotviewios",
              "isDocsHomePage": false,
              "title": "SnapshotViewIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.62/snapshotviewios.md",
              "slug": "/snapshotviewios",
              "permalink": "/docs/0.62/snapshotviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/snapshotviewios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "state",
              "id": "version-0.62/state",
              "isDocsHomePage": false,
              "title": "State",
              "description": "There are two types of data that control a component: props and state. props are set by the parent and they are fixed throughout the lifetime of a component. For data that is going to change, we have to use state.",
              "source": "@site/versioned_docs/version-0.62/state.md",
              "slug": "/state",
              "permalink": "/docs/0.62/state",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/state.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "statusbar",
              "id": "version-0.62/statusbar",
              "isDocsHomePage": false,
              "title": "StatusBar",
              "description": "Component to control the app status bar.",
              "source": "@site/versioned_docs/version-0.62/statusbar.md",
              "slug": "/statusbar",
              "permalink": "/docs/0.62/statusbar",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/statusbar.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "SectionList",
                "permalink": "/docs/0.62/sectionlist"
              },
              "next": {
                "title": "Switch",
                "permalink": "/docs/0.62/switch"
              }
            },
            {
              "unversionedId": "statusbarios",
              "id": "version-0.62/statusbarios",
              "isDocsHomePage": false,
              "title": "🚧 StatusBarIOS",
              "description": "Deprecated. Use StatusBar for mutating the status bar.",
              "source": "@site/versioned_docs/version-0.62/statusbarios.md",
              "slug": "/statusbarios",
              "permalink": "/docs/0.62/statusbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/statusbarios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "style",
              "id": "version-0.62/style",
              "isDocsHomePage": false,
              "title": "Style",
              "description": "With React Native, you style your application using JavaScript. All of the core components accept a prop named style. The style names and values usually match how CSS works on the web, except names are written using camel casing, e.g. backgroundColor rather than background-color.",
              "source": "@site/versioned_docs/version-0.62/style.md",
              "slug": "/style",
              "permalink": "/docs/0.62/style",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/style.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/0.62/upgrading"
              },
              "next": {
                "title": "Height and Width",
                "permalink": "/docs/0.62/height-and-width"
              }
            },
            {
              "unversionedId": "stylesheet",
              "id": "version-0.62/stylesheet",
              "isDocsHomePage": false,
              "title": "StyleSheet",
              "description": "A StyleSheet is an abstraction similar to CSS StyleSheets",
              "source": "@site/versioned_docs/version-0.62/stylesheet.md",
              "slug": "/stylesheet",
              "permalink": "/docs/0.62/stylesheet",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/stylesheet.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Share",
                "permalink": "/docs/0.62/share"
              },
              "next": {
                "title": "Systrace",
                "permalink": "/docs/0.62/systrace"
              }
            },
            {
              "unversionedId": "switch",
              "id": "version-0.62/switch",
              "isDocsHomePage": false,
              "title": "Switch",
              "description": "Renders a boolean input.",
              "source": "@site/versioned_docs/version-0.62/switch.md",
              "slug": "/switch",
              "permalink": "/docs/0.62/switch",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/switch.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "StatusBar",
                "permalink": "/docs/0.62/statusbar"
              },
              "next": {
                "title": "Text",
                "permalink": "/docs/0.62/text"
              }
            },
            {
              "unversionedId": "symbolication",
              "id": "version-0.62/symbolication",
              "isDocsHomePage": false,
              "title": "Symbolicating a stack trace",
              "description": "If a React Native app throws an unhandled exception in a release build, the output may be obfuscated and hard to read:",
              "source": "@site/versioned_docs/version-0.62/symbolication.md",
              "slug": "/symbolication",
              "permalink": "/docs/0.62/symbolication",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/symbolication.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "systrace",
              "id": "version-0.62/systrace",
              "isDocsHomePage": false,
              "title": "Systrace",
              "description": "Systrace is a standard Android marker-based profiling tool (and is installed when you install the Android platform-tools package). Profiled code blocks are surrounded by start/end markers which are then visualized in a colorful chart format. Both the Android SDK and React Native framework provide standard markers that you can visualize.",
              "source": "@site/versioned_docs/version-0.62/systrace.md",
              "slug": "/systrace",
              "permalink": "/docs/0.62/systrace",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/systrace.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "StyleSheet",
                "permalink": "/docs/0.62/stylesheet"
              },
              "next": {
                "title": "Transforms",
                "permalink": "/docs/0.62/transforms"
              }
            },
            {
              "unversionedId": "tabbarios",
              "id": "version-0.62/tabbarios",
              "isDocsHomePage": false,
              "title": "TabBarIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.62/tabbarios.md",
              "slug": "/tabbarios",
              "permalink": "/docs/0.62/tabbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/tabbarios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "tabbarios-item",
              "id": "version-0.62/tabbarios-item",
              "isDocsHomePage": false,
              "title": "TabBarIOS.Item",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.62/tabbarios-item.md",
              "slug": "/tabbarios-item",
              "permalink": "/docs/0.62/tabbarios-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/tabbarios-item.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "testing-overview",
              "id": "version-0.62/testing-overview",
              "isDocsHomePage": false,
              "title": "Testing",
              "description": "This guide introduces React Native developers to the key concepts behind testing, how to write good tests, and what kinds of tests you can incorporate into your workflow.",
              "source": "@site/versioned_docs/version-0.62/testing-overview.md",
              "slug": "/testing-overview",
              "permalink": "/docs/0.62/testing-overview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/testing-overview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Debugging",
                "permalink": "/docs/0.62/debugging"
              },
              "next": {
                "title": "Using Libraries",
                "permalink": "/docs/0.62/libraries"
              }
            },
            {
              "unversionedId": "text",
              "id": "version-0.62/text",
              "isDocsHomePage": false,
              "title": "Text",
              "description": "A React component for displaying text.",
              "source": "@site/versioned_docs/version-0.62/text.md",
              "slug": "/text",
              "permalink": "/docs/0.62/text",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/text.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Switch",
                "permalink": "/docs/0.62/switch"
              },
              "next": {
                "title": "TextInput",
                "permalink": "/docs/0.62/textinput"
              }
            },
            {
              "unversionedId": "text-style-props",
              "id": "version-0.62/text-style-props",
              "isDocsHomePage": false,
              "title": "Text Style Props",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.62/text-style-props.md",
              "slug": "/text-style-props",
              "permalink": "/docs/0.62/text-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/text-style-props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Shadow Props",
                "permalink": "/docs/0.62/shadow-props"
              },
              "next": {
                "title": "View Style Props",
                "permalink": "/docs/0.62/view-style-props"
              }
            },
            {
              "unversionedId": "textinput",
              "id": "version-0.62/textinput",
              "isDocsHomePage": false,
              "title": "TextInput",
              "description": "A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.",
              "source": "@site/versioned_docs/version-0.62/textinput.md",
              "slug": "/textinput",
              "permalink": "/docs/0.62/textinput",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/textinput.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Text",
                "permalink": "/docs/0.62/text"
              },
              "next": {
                "title": "TouchableHighlight",
                "permalink": "/docs/0.62/touchablehighlight"
              }
            },
            {
              "unversionedId": "timepickerandroid",
              "id": "version-0.62/timepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 TimePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.62/timepickerandroid.md",
              "slug": "/timepickerandroid",
              "permalink": "/docs/0.62/timepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/timepickerandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "timers",
              "id": "version-0.62/timers",
              "isDocsHomePage": false,
              "title": "Timers",
              "description": "Timers are an important part of an application and React Native implements the browser timers.",
              "source": "@site/versioned_docs/version-0.62/timers.md",
              "slug": "/timers",
              "permalink": "/docs/0.62/timers",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/timers.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "JavaScript Environment",
                "permalink": "/docs/0.62/javascript-environment"
              },
              "next": {
                "title": "Using Hermes",
                "permalink": "/docs/0.62/hermes"
              }
            },
            {
              "unversionedId": "toastandroid",
              "id": "version-0.62/toastandroid",
              "isDocsHomePage": false,
              "title": "ToastAndroid",
              "description": "React Native's ToastAndroid API exposes the Android platform's ToastAndroid module as a JS module. It provides the method show(message, duration) which takes the following parameters:",
              "source": "@site/versioned_docs/version-0.62/toastandroid.md",
              "slug": "/toastandroid",
              "permalink": "/docs/0.62/toastandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/toastandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/0.62/permissionsandroid"
              },
              "next": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/0.62/actionsheetios"
              }
            },
            {
              "unversionedId": "toolbarandroid",
              "id": "version-0.62/toolbarandroid",
              "isDocsHomePage": false,
              "title": "ToolbarAndroid",
              "description": "NOTE: Toolbar Android has been deprecated and removed from the package since React Native v0.61.0. Use @react-native-community/toolbar-android instead.",
              "source": "@site/versioned_docs/version-0.62/toolbarandroid.md",
              "slug": "/toolbarandroid",
              "permalink": "/docs/0.62/toolbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/toolbarandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "touchablehighlight",
              "id": "version-0.62/touchablehighlight",
              "isDocsHomePage": false,
              "title": "TouchableHighlight",
              "description": "A wrapper for making views respond properly to touches. On press down, the opacity of the wrapped view is decreased, which allows the underlay color to show through, darkening or tinting the view.",
              "source": "@site/versioned_docs/version-0.62/touchablehighlight.md",
              "slug": "/touchablehighlight",
              "permalink": "/docs/0.62/touchablehighlight",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/touchablehighlight.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "TextInput",
                "permalink": "/docs/0.62/textinput"
              },
              "next": {
                "title": "TouchableOpacity",
                "permalink": "/docs/0.62/touchableopacity"
              }
            },
            {
              "unversionedId": "touchablenativefeedback",
              "id": "version-0.62/touchablenativefeedback",
              "isDocsHomePage": false,
              "title": "TouchableNativeFeedback",
              "description": "A wrapper for making views respond properly to touches (Android only). On Android this component uses native state drawable to display touch feedback.",
              "source": "@site/versioned_docs/version-0.62/touchablenativefeedback.md",
              "slug": "/touchablenativefeedback",
              "permalink": "/docs/0.62/touchablenativefeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/touchablenativefeedback.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/0.62/drawerlayoutandroid"
              },
              "next": {
                "title": "InputAccessoryView",
                "permalink": "/docs/0.62/inputaccessoryview"
              }
            },
            {
              "unversionedId": "touchableopacity",
              "id": "version-0.62/touchableopacity",
              "isDocsHomePage": false,
              "title": "TouchableOpacity",
              "description": "A wrapper for making views respond properly to touches. On press down, the opacity of the wrapped view is decreased, dimming it.",
              "source": "@site/versioned_docs/version-0.62/touchableopacity.md",
              "slug": "/touchableopacity",
              "permalink": "/docs/0.62/touchableopacity",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/touchableopacity.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "TouchableHighlight",
                "permalink": "/docs/0.62/touchablehighlight"
              },
              "next": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/0.62/touchablewithoutfeedback"
              }
            },
            {
              "unversionedId": "touchablewithoutfeedback",
              "id": "version-0.62/touchablewithoutfeedback",
              "isDocsHomePage": false,
              "title": "TouchableWithoutFeedback",
              "description": "Do not use unless you have a very good reason. All elements that respond to press should have a visual feedback when touched.",
              "source": "@site/versioned_docs/version-0.62/touchablewithoutfeedback.md",
              "slug": "/touchablewithoutfeedback",
              "permalink": "/docs/0.62/touchablewithoutfeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/touchablewithoutfeedback.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "TouchableOpacity",
                "permalink": "/docs/0.62/touchableopacity"
              },
              "next": {
                "title": "View",
                "permalink": "/docs/0.62/view"
              }
            },
            {
              "unversionedId": "transforms",
              "id": "version-0.62/transforms",
              "isDocsHomePage": false,
              "title": "Transforms",
              "description": "Transforms are style properties that will help you modify the appearance and position of your components using 2D or 3D transformations. However, once you apply transforms, the layouts remain the same around the transformed component hence it might overlap with the nearby components. You can apply margin to the transformed component, the nearby components or padding to the container to prevent such overlaps.",
              "source": "@site/versioned_docs/version-0.62/transforms.md",
              "slug": "/transforms",
              "permalink": "/docs/0.62/transforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/transforms.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Systrace",
                "permalink": "/docs/0.62/systrace"
              },
              "next": {
                "title": "Vibration",
                "permalink": "/docs/0.62/vibration"
              }
            },
            {
              "unversionedId": "troubleshooting",
              "id": "version-0.62/troubleshooting",
              "isDocsHomePage": false,
              "title": "Troubleshooting",
              "description": "These are some common issues you may run into while setting up React Native. If you encounter something that is not listed here, try searching for the issue in GitHub.",
              "source": "@site/versioned_docs/version-0.62/troubleshooting.md",
              "slug": "/troubleshooting",
              "permalink": "/docs/0.62/troubleshooting",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/troubleshooting.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Using List Views",
                "permalink": "/docs/0.62/using-a-listview"
              },
              "next": {
                "title": "Platform Specific Code",
                "permalink": "/docs/0.62/platform-specific-code"
              }
            },
            {
              "unversionedId": "tutorial",
              "id": "version-0.62/tutorial",
              "isDocsHomePage": false,
              "title": "Learn the Basics",
              "description": "React Native is like React, but it uses native components instead of web components as building blocks. So to understand the basic structure of a React Native app, you need to understand some of the basic React concepts, like JSX, components, state, and props. If you already know React, you still need to learn some React-Native-specific stuff, like the native components. This tutorial is aimed at all audiences, whether you have React experience or not.",
              "source": "@site/versioned_docs/version-0.62/tutorial.md",
              "slug": "/tutorial",
              "permalink": "/docs/0.62/tutorial",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/tutorial.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "typescript",
              "id": "version-0.62/typescript",
              "isDocsHomePage": false,
              "title": "Using TypeScript with React Native",
              "description": "TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",
              "source": "@site/versioned_docs/version-0.62/typescript.md",
              "slug": "/typescript",
              "permalink": "/docs/0.62/typescript",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/typescript.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Using Libraries",
                "permalink": "/docs/0.62/libraries"
              },
              "next": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/0.62/upgrading"
              }
            },
            {
              "unversionedId": "upgrading",
              "id": "version-0.62/upgrading",
              "isDocsHomePage": false,
              "title": "Upgrading to new React Native versions",
              "description": "Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Upgrading requires a small amount of effort, but we try to make it straightforward for you.",
              "source": "@site/versioned_docs/version-0.62/upgrading.md",
              "slug": "/upgrading",
              "permalink": "/docs/0.62/upgrading",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/upgrading.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Using TypeScript with React Native",
                "permalink": "/docs/0.62/typescript"
              },
              "next": {
                "title": "Style",
                "permalink": "/docs/0.62/style"
              }
            },
            {
              "unversionedId": "usecolorscheme",
              "id": "version-0.62/usecolorscheme",
              "isDocsHomePage": false,
              "title": "useColorScheme",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.62/usecolorscheme.md",
              "slug": "/usecolorscheme",
              "permalink": "/docs/0.62/usecolorscheme",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/usecolorscheme.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Vibration",
                "permalink": "/docs/0.62/vibration"
              },
              "next": {
                "title": "useWindowDimensions",
                "permalink": "/docs/0.62/usewindowdimensions"
              }
            },
            {
              "unversionedId": "usewindowdimensions",
              "id": "version-0.62/usewindowdimensions",
              "isDocsHomePage": false,
              "title": "useWindowDimensions",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.62/usewindowdimensions.md",
              "slug": "/usewindowdimensions",
              "permalink": "/docs/0.62/usewindowdimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/usewindowdimensions.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "useColorScheme",
                "permalink": "/docs/0.62/usecolorscheme"
              },
              "next": {
                "title": "BackHandler",
                "permalink": "/docs/0.62/backhandler"
              }
            },
            {
              "unversionedId": "using-a-listview",
              "id": "version-0.62/using-a-listview",
              "isDocsHomePage": false,
              "title": "Using List Views",
              "description": "React Native provides a suite of components for presenting lists of data. Generally, you'll want to use either FlatList or SectionList.",
              "source": "@site/versioned_docs/version-0.62/using-a-listview.md",
              "slug": "/using-a-listview",
              "permalink": "/docs/0.62/using-a-listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/using-a-listview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Using a ScrollView",
                "permalink": "/docs/0.62/using-a-scrollview"
              },
              "next": {
                "title": "Troubleshooting",
                "permalink": "/docs/0.62/troubleshooting"
              }
            },
            {
              "unversionedId": "using-a-scrollview",
              "id": "version-0.62/using-a-scrollview",
              "isDocsHomePage": false,
              "title": "Using a ScrollView",
              "description": "The ScrollView is a generic scrolling container that can contain multiple components and views. The scrollable items need not be homogeneous, and you can scroll both vertically and horizontally (by setting the horizontal property).",
              "source": "@site/versioned_docs/version-0.62/using-a-scrollview.md",
              "slug": "/using-a-scrollview",
              "permalink": "/docs/0.62/using-a-scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/using-a-scrollview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/docs",
              "previous": {
                "title": "Handling Text Input",
                "permalink": "/docs/0.62/handling-text-input"
              },
              "next": {
                "title": "Using List Views",
                "permalink": "/docs/0.62/using-a-listview"
              }
            },
            {
              "unversionedId": "vibration",
              "id": "version-0.62/vibration",
              "isDocsHomePage": false,
              "title": "Vibration",
              "description": "Vibrates the device.",
              "source": "@site/versioned_docs/version-0.62/vibration.md",
              "slug": "/vibration",
              "permalink": "/docs/0.62/vibration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/vibration.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/api",
              "previous": {
                "title": "Transforms",
                "permalink": "/docs/0.62/transforms"
              },
              "next": {
                "title": "useColorScheme",
                "permalink": "/docs/0.62/usecolorscheme"
              }
            },
            {
              "unversionedId": "vibrationios",
              "id": "version-0.62/vibrationios",
              "isDocsHomePage": false,
              "title": "VibrationIOS",
              "description": "NOTE: VibrationIOS is being deprecated. Use Vibration instead.",
              "source": "@site/versioned_docs/version-0.62/vibrationios.md",
              "slug": "/vibrationios",
              "permalink": "/docs/0.62/vibrationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/vibrationios.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "view",
              "id": "version-0.62/view",
              "isDocsHomePage": false,
              "title": "View",
              "description": "The most fundamental component for building a UI, View is a container that supports layout with flexbox, style, some touch handling, and accessibility controls. View maps directly to the native view equivalent on whatever platform React Native is running on, whether that is a UIView, `, android.view`, etc.",
              "source": "@site/versioned_docs/version-0.62/view.md",
              "slug": "/view",
              "permalink": "/docs/0.62/view",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/view.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/0.62/touchablewithoutfeedback"
              },
              "next": {
                "title": "VirtualizedList",
                "permalink": "/docs/0.62/virtualizedlist"
              }
            },
            {
              "unversionedId": "view-style-props",
              "id": "version-0.62/view-style-props",
              "isDocsHomePage": false,
              "title": "View Style Props",
              "description": "Example",
              "source": "@site/versioned_docs/version-0.62/view-style-props.md",
              "slug": "/view-style-props",
              "permalink": "/docs/0.62/view-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/view-style-props.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "Text Style Props",
                "permalink": "/docs/0.62/text-style-props"
              }
            },
            {
              "unversionedId": "viewpagerandroid",
              "id": "version-0.62/viewpagerandroid",
              "isDocsHomePage": false,
              "title": "🚧 ViewPagerAndroid",
              "description": "Deprecated. Use @react-native-community/viewpager instead.",
              "source": "@site/versioned_docs/version-0.62/viewpagerandroid.md",
              "slug": "/viewpagerandroid",
              "permalink": "/docs/0.62/viewpagerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/viewpagerandroid.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "virtualizedlist",
              "id": "version-0.62/virtualizedlist",
              "isDocsHomePage": false,
              "title": "VirtualizedList",
              "description": "Base implementation for the more convenient ` and  components, which are also better documented. In general, this should only really be used if you need more flexibility than FlatList` provides, e.g. for use with immutable data instead of plain arrays.",
              "source": "@site/versioned_docs/version-0.62/virtualizedlist.md",
              "slug": "/virtualizedlist",
              "permalink": "/docs/0.62/virtualizedlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/virtualizedlist.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.62/components",
              "previous": {
                "title": "View",
                "permalink": "/docs/0.62/view"
              },
              "next": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/0.62/drawerlayoutandroid"
              }
            },
            {
              "unversionedId": "webview",
              "id": "version-0.62/webview",
              "isDocsHomePage": false,
              "title": "🚧 WebView",
              "description": "Deprecated. Use react-native-community/react-native-webview instead.",
              "source": "@site/versioned_docs/version-0.62/webview.md",
              "slug": "/webview",
              "permalink": "/docs/0.62/webview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.62/webview.md",
              "version": "0.62",
              "lastUpdatedAt": 1539502055
            }
          ]
        },
        {
          "versionName": "0.61",
          "versionLabel": "0.61",
          "versionPath": "/docs/0.61",
          "isLast": false,
          "sidebarFilePath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_sidebars/version-0.61-sidebars.json",
          "docsDirPath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_docs/version-0.61",
          "mainDocId": "getting-started",
          "sidebars": {
            "version-0.61/docs": [
              {
                "collapsed": true,
                "type": "category",
                "label": "The Basics",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.61/getting-started"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/tutorial"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/state"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/style"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/height-and-width"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/flexbox"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/handling-text-input"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/handling-touches"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/using-a-scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/using-a-listview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/network"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/more-resources"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.61/fast-refresh"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/platform-specific-code"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/navigation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/images"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/animations"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/accessibility"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/improvingux"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/optimizing-flatlist-configuration"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/timers"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/debugging"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/performance"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/gesture-responder-system"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/javascript-environment"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/typescript"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/direct-manipulation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/colors"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/integration-with-existing-apps"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/building-for-tv"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/running-on-device"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/upgrading"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/troubleshooting"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/native-modules-setup"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/out-of-tree-platforms"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (iOS)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.61/native-modules-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/native-components-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/linking-libraries-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/running-on-simulator-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/communication-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/app-extensions"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (Android)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.61/native-modules-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/native-components-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/headless-js-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/signed-apk-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/removing-default-permissions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/hermes"
                  }
                ]
              }
            ],
            "version-0.61/components": [
              {
                "collapsed": true,
                "type": "category",
                "label": "Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.61/components-and-apis"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/activityindicator"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/button"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/checkbox"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/datepickerios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/drawerlayoutandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/flatlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/image"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/imagebackground"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/inputaccessoryview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/keyboardavoidingview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/maskedviewios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/modal"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/picker"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/pickerios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/progressbarandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/progressviewios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/refreshcontrol"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/safeareaview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/sectionlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/segmentedcontrolios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/slider"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/statusbar"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/switch"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/tabbarios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/tabbarios-item"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/text"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/textinput"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/toolbarandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/touchablehighlight"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/touchablenativefeedback"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/touchableopacity"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/touchablewithoutfeedback"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/view"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/viewpagerandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/virtualizedlist"
                  }
                ]
              }
            ],
            "version-0.61/api": [
              {
                "collapsed": true,
                "type": "category",
                "label": "APIs",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.61/accessibilityinfo"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/actionsheetios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/alert"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/alertios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/animated"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/appregistry"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/appstate"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/asyncstorage"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/backhandler"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/clipboard"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/datepickerandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/dimensions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/easing"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/imageeditor"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/imagepickerios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/image-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/interactionmanager"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/keyboard"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/layout-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/layoutanimation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/linking"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/panresponder"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/permissionsandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/pixelratio"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/pushnotificationios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/settings"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/shadow-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/share"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/statusbarios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/stylesheet"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/systrace"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/text-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/timepickerandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/toastandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/transforms"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/usewindowdimensions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/vibration"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.61/view-style-props"
                  }
                ]
              }
            ]
          },
          "permalinkToSidebar": {
            "/docs/0.61/accessibility": "version-0.61/docs",
            "/docs/0.61/accessibilityinfo": "version-0.61/api",
            "/docs/0.61/actionsheetios": "version-0.61/api",
            "/docs/0.61/activityindicator": "version-0.61/components",
            "/docs/0.61/alert": "version-0.61/api",
            "/docs/0.61/alertios": "version-0.61/api",
            "/docs/0.61/animated": "version-0.61/api",
            "/docs/0.61/animations": "version-0.61/docs",
            "/docs/0.61/app-extensions": "version-0.61/docs",
            "/docs/0.61/appregistry": "version-0.61/api",
            "/docs/0.61/appstate": "version-0.61/api",
            "/docs/0.61/asyncstorage": "version-0.61/api",
            "/docs/0.61/backhandler": "version-0.61/api",
            "/docs/0.61/building-for-tv": "version-0.61/docs",
            "/docs/0.61/button": "version-0.61/components",
            "/docs/0.61/checkbox": "version-0.61/components",
            "/docs/0.61/clipboard": "version-0.61/api",
            "/docs/0.61/colors": "version-0.61/docs",
            "/docs/0.61/communication-ios": "version-0.61/docs",
            "/docs/0.61/components-and-apis": "version-0.61/components",
            "/docs/0.61/datepickerandroid": "version-0.61/api",
            "/docs/0.61/datepickerios": "version-0.61/components",
            "/docs/0.61/debugging": "version-0.61/docs",
            "/docs/0.61/dimensions": "version-0.61/api",
            "/docs/0.61/direct-manipulation": "version-0.61/docs",
            "/docs/0.61/drawerlayoutandroid": "version-0.61/components",
            "/docs/0.61/easing": "version-0.61/api",
            "/docs/0.61/fast-refresh": "version-0.61/docs",
            "/docs/0.61/flatlist": "version-0.61/components",
            "/docs/0.61/flexbox": "version-0.61/docs",
            "/docs/0.61/gesture-responder-system": "version-0.61/docs",
            "/docs/0.61/getting-started": "version-0.61/docs",
            "/docs/0.61/handling-text-input": "version-0.61/docs",
            "/docs/0.61/handling-touches": "version-0.61/docs",
            "/docs/0.61/headless-js-android": "version-0.61/docs",
            "/docs/0.61/height-and-width": "version-0.61/docs",
            "/docs/0.61/hermes": "version-0.61/docs",
            "/docs/0.61/image": "version-0.61/components",
            "/docs/0.61/image-style-props": "version-0.61/api",
            "/docs/0.61/imagebackground": "version-0.61/components",
            "/docs/0.61/imageeditor": "version-0.61/api",
            "/docs/0.61/imagepickerios": "version-0.61/api",
            "/docs/0.61/images": "version-0.61/docs",
            "/docs/0.61/improvingux": "version-0.61/docs",
            "/docs/0.61/inputaccessoryview": "version-0.61/components",
            "/docs/0.61/integration-with-existing-apps": "version-0.61/docs",
            "/docs/0.61/interactionmanager": "version-0.61/api",
            "/docs/0.61/javascript-environment": "version-0.61/docs",
            "/docs/0.61/keyboard": "version-0.61/api",
            "/docs/0.61/keyboardavoidingview": "version-0.61/components",
            "/docs/0.61/layout-props": "version-0.61/api",
            "/docs/0.61/layoutanimation": "version-0.61/api",
            "/docs/0.61/linking": "version-0.61/api",
            "/docs/0.61/linking-libraries-ios": "version-0.61/docs",
            "/docs/0.61/maskedviewios": "version-0.61/components",
            "/docs/0.61/modal": "version-0.61/components",
            "/docs/0.61/more-resources": "version-0.61/docs",
            "/docs/0.61/native-components-android": "version-0.61/docs",
            "/docs/0.61/native-components-ios": "version-0.61/docs",
            "/docs/0.61/native-modules-android": "version-0.61/docs",
            "/docs/0.61/native-modules-ios": "version-0.61/docs",
            "/docs/0.61/native-modules-setup": "version-0.61/docs",
            "/docs/0.61/navigation": "version-0.61/docs",
            "/docs/0.61/network": "version-0.61/docs",
            "/docs/0.61/optimizing-flatlist-configuration": "version-0.61/docs",
            "/docs/0.61/out-of-tree-platforms": "version-0.61/docs",
            "/docs/0.61/panresponder": "version-0.61/api",
            "/docs/0.61/performance": "version-0.61/docs",
            "/docs/0.61/permissionsandroid": "version-0.61/api",
            "/docs/0.61/picker": "version-0.61/components",
            "/docs/0.61/pickerios": "version-0.61/components",
            "/docs/0.61/pixelratio": "version-0.61/api",
            "/docs/0.61/platform-specific-code": "version-0.61/docs",
            "/docs/0.61/progressbarandroid": "version-0.61/components",
            "/docs/0.61/progressviewios": "version-0.61/components",
            "/docs/0.61/props": "version-0.61/docs",
            "/docs/0.61/pushnotificationios": "version-0.61/api",
            "/docs/0.61/refreshcontrol": "version-0.61/components",
            "/docs/0.61/removing-default-permissions": "version-0.61/docs",
            "/docs/0.61/running-on-device": "version-0.61/docs",
            "/docs/0.61/running-on-simulator-ios": "version-0.61/docs",
            "/docs/0.61/safeareaview": "version-0.61/components",
            "/docs/0.61/scrollview": "version-0.61/components",
            "/docs/0.61/sectionlist": "version-0.61/components",
            "/docs/0.61/segmentedcontrolios": "version-0.61/components",
            "/docs/0.61/settings": "version-0.61/api",
            "/docs/0.61/shadow-props": "version-0.61/api",
            "/docs/0.61/share": "version-0.61/api",
            "/docs/0.61/signed-apk-android": "version-0.61/docs",
            "/docs/0.61/slider": "version-0.61/components",
            "/docs/0.61/state": "version-0.61/docs",
            "/docs/0.61/statusbar": "version-0.61/components",
            "/docs/0.61/statusbarios": "version-0.61/api",
            "/docs/0.61/style": "version-0.61/docs",
            "/docs/0.61/stylesheet": "version-0.61/api",
            "/docs/0.61/switch": "version-0.61/components",
            "/docs/0.61/systrace": "version-0.61/api",
            "/docs/0.61/tabbarios": "version-0.61/components",
            "/docs/0.61/tabbarios-item": "version-0.61/components",
            "/docs/0.61/text": "version-0.61/components",
            "/docs/0.61/text-style-props": "version-0.61/api",
            "/docs/0.61/textinput": "version-0.61/components",
            "/docs/0.61/timepickerandroid": "version-0.61/api",
            "/docs/0.61/timers": "version-0.61/docs",
            "/docs/0.61/toastandroid": "version-0.61/api",
            "/docs/0.61/toolbarandroid": "version-0.61/components",
            "/docs/0.61/touchablehighlight": "version-0.61/components",
            "/docs/0.61/touchablenativefeedback": "version-0.61/components",
            "/docs/0.61/touchableopacity": "version-0.61/components",
            "/docs/0.61/touchablewithoutfeedback": "version-0.61/components",
            "/docs/0.61/transforms": "version-0.61/api",
            "/docs/0.61/troubleshooting": "version-0.61/docs",
            "/docs/0.61/tutorial": "version-0.61/docs",
            "/docs/0.61/typescript": "version-0.61/docs",
            "/docs/0.61/upgrading": "version-0.61/docs",
            "/docs/0.61/usewindowdimensions": "version-0.61/api",
            "/docs/0.61/using-a-listview": "version-0.61/docs",
            "/docs/0.61/using-a-scrollview": "version-0.61/docs",
            "/docs/0.61/vibration": "version-0.61/api",
            "/docs/0.61/view": "version-0.61/components",
            "/docs/0.61/view-style-props": "version-0.61/api",
            "/docs/0.61/viewpagerandroid": "version-0.61/components",
            "/docs/0.61/virtualizedlist": "version-0.61/components"
          },
          "docs": [
            {
              "unversionedId": "_getting-started-linux-android",
              "id": "version-0.61/_getting-started-linux-android",
              "isDocsHomePage": false,
              "title": "_getting-started-linux-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.61/_getting-started-linux-android.md",
              "slug": "/_getting-started-linux-android",
              "permalink": "/docs/0.61/_getting-started-linux-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_getting-started-linux-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-android",
              "id": "version-0.61/_getting-started-macos-android",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.61/_getting-started-macos-android.md",
              "slug": "/_getting-started-macos-android",
              "permalink": "/docs/0.61/_getting-started-macos-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_getting-started-macos-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-ios",
              "id": "version-0.61/_getting-started-macos-ios",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-ios",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.61/_getting-started-macos-ios.md",
              "slug": "/_getting-started-macos-ios",
              "permalink": "/docs/0.61/_getting-started-macos-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_getting-started-macos-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-windows-android",
              "id": "version-0.61/_getting-started-windows-android",
              "isDocsHomePage": false,
              "title": "_getting-started-windows-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.61/_getting-started-windows-android.md",
              "slug": "/_getting-started-windows-android",
              "permalink": "/docs/0.61/_getting-started-windows-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_getting-started-windows-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-java",
              "id": "version-0.61/_integration-with-exisiting-apps-java",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-java",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.61/_integration-with-exisiting-apps-java.md",
              "slug": "/_integration-with-exisiting-apps-java",
              "permalink": "/docs/0.61/_integration-with-exisiting-apps-java",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_integration-with-exisiting-apps-java.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-objc",
              "id": "version-0.61/_integration-with-exisiting-apps-objc",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-objc",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.61/_integration-with-exisiting-apps-objc.md",
              "slug": "/_integration-with-exisiting-apps-objc",
              "permalink": "/docs/0.61/_integration-with-exisiting-apps-objc",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_integration-with-exisiting-apps-objc.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-swift",
              "id": "version-0.61/_integration-with-exisiting-apps-swift",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-swift",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.61/_integration-with-exisiting-apps-swift.md",
              "slug": "/_integration-with-exisiting-apps-swift",
              "permalink": "/docs/0.61/_integration-with-exisiting-apps-swift",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/_integration-with-exisiting-apps-swift.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "accessibility",
              "id": "version-0.61/accessibility",
              "isDocsHomePage": false,
              "title": "Accessibility",
              "description": "Both Android and iOS provide APIs for integrating apps with assistive technologies like the bundled screen readers VoiceOver (iOS) and TalkBack (Android). React Native has complimentary APIs that let your app accommodate all users.",
              "source": "@site/versioned_docs/version-0.61/accessibility.md",
              "slug": "/accessibility",
              "permalink": "/docs/0.61/accessibility",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/accessibility.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Animations",
                "permalink": "/docs/0.61/animations"
              },
              "next": {
                "title": "Improving User Experience",
                "permalink": "/docs/0.61/improvingux"
              }
            },
            {
              "unversionedId": "accessibilityinfo",
              "id": "version-0.61/accessibilityinfo",
              "isDocsHomePage": false,
              "title": "AccessibilityInfo",
              "description": "Sometimes it's useful to know whether or not the device has a screen reader that is currently active. The AccessibilityInfo API is designed for this purpose. You can use it to query the current state of the screen reader as well as to register to be notified when the state of the screen reader changes.",
              "source": "@site/versioned_docs/version-0.61/accessibilityinfo.md",
              "slug": "/accessibilityinfo",
              "permalink": "/docs/0.61/accessibilityinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/accessibilityinfo.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "next": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/0.61/actionsheetios"
              }
            },
            {
              "unversionedId": "actionsheetios",
              "id": "version-0.61/actionsheetios",
              "isDocsHomePage": false,
              "title": "ActionSheetIOS",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/actionsheetios.md",
              "slug": "/actionsheetios",
              "permalink": "/docs/0.61/actionsheetios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/actionsheetios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "AccessibilityInfo",
                "permalink": "/docs/0.61/accessibilityinfo"
              },
              "next": {
                "title": "Alert",
                "permalink": "/docs/0.61/alert"
              }
            },
            {
              "unversionedId": "activityindicator",
              "id": "version-0.61/activityindicator",
              "isDocsHomePage": false,
              "title": "ActivityIndicator",
              "description": "Displays a circular loading indicator.",
              "source": "@site/versioned_docs/version-0.61/activityindicator.md",
              "slug": "/activityindicator",
              "permalink": "/docs/0.61/activityindicator",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/activityindicator.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Components and APIs",
                "permalink": "/docs/0.61/components-and-apis"
              },
              "next": {
                "title": "Button",
                "permalink": "/docs/0.61/button"
              }
            },
            {
              "unversionedId": "alert",
              "id": "version-0.61/alert",
              "isDocsHomePage": false,
              "title": "Alert",
              "description": "Launches an alert dialog with the specified title and message.",
              "source": "@site/versioned_docs/version-0.61/alert.md",
              "slug": "/alert",
              "permalink": "/docs/0.61/alert",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/alert.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/0.61/actionsheetios"
              },
              "next": {
                "title": "🚧 AlertIOS",
                "permalink": "/docs/0.61/alertios"
              }
            },
            {
              "unversionedId": "alertios",
              "id": "version-0.61/alertios",
              "isDocsHomePage": false,
              "title": "🚧 AlertIOS",
              "description": "Deprecated. Use Alert instead.",
              "source": "@site/versioned_docs/version-0.61/alertios.md",
              "slug": "/alertios",
              "permalink": "/docs/0.61/alertios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/alertios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Alert",
                "permalink": "/docs/0.61/alert"
              },
              "next": {
                "title": "Animated",
                "permalink": "/docs/0.61/animated"
              }
            },
            {
              "unversionedId": "animated",
              "id": "version-0.61/animated",
              "isDocsHomePage": false,
              "title": "Animated",
              "description": "The Animated library is designed to make animations fluid, powerful, and painless to build and maintain. Animated focuses on declarative relationships between inputs and outputs, with configurable transforms in between, and start/stop methods to control time-based animation execution.",
              "source": "@site/versioned_docs/version-0.61/animated.md",
              "slug": "/animated",
              "permalink": "/docs/0.61/animated",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/animated.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 AlertIOS",
                "permalink": "/docs/0.61/alertios"
              },
              "next": {
                "title": "AppRegistry",
                "permalink": "/docs/0.61/appregistry"
              }
            },
            {
              "unversionedId": "animatedvalue",
              "id": "version-0.61/animatedvalue",
              "isDocsHomePage": false,
              "title": "AnimatedValue",
              "description": "Standard value for driving animations. One Animated.Value can drive multiple properties in a synchronized fashion, but can only be driven by one mechanism at a time. Using a new mechanism (e.g. starting a new animation, or calling setValue) will stop any previous ones.",
              "source": "@site/versioned_docs/version-0.61/animatedvalue.md",
              "slug": "/animatedvalue",
              "permalink": "/docs/0.61/animatedvalue",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/animatedvalue.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animatedvaluexy",
              "id": "version-0.61/animatedvaluexy",
              "isDocsHomePage": false,
              "title": "AnimatedValueXY",
              "description": "2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal Animated.Value, but multiplexed. Contains two regular Animated.Values under the hood.",
              "source": "@site/versioned_docs/version-0.61/animatedvaluexy.md",
              "slug": "/animatedvaluexy",
              "permalink": "/docs/0.61/animatedvaluexy",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/animatedvaluexy.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animations",
              "id": "version-0.61/animations",
              "isDocsHomePage": false,
              "title": "Animations",
              "description": "Animations are very important to create a great user experience. Stationary objects must overcome inertia as they start moving. Objects in motion have momentum and rarely come to a stop immediately. Animations allow you to convey physically believable motion in your interface.",
              "source": "@site/versioned_docs/version-0.61/animations.md",
              "slug": "/animations",
              "permalink": "/docs/0.61/animations",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/animations.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Images",
                "permalink": "/docs/0.61/images"
              },
              "next": {
                "title": "Accessibility",
                "permalink": "/docs/0.61/accessibility"
              }
            },
            {
              "unversionedId": "app-extensions",
              "id": "version-0.61/app-extensions",
              "isDocsHomePage": false,
              "title": "App Extensions",
              "description": "App extensions let you provide custom functionality and content outside of your main app. There are different types of app extensions on iOS, and they are all covered in the App Extension Programming Guide. In this guide, we'll briefly cover how you may take advantage of app extensions on iOS.",
              "source": "@site/versioned_docs/version-0.61/app-extensions.md",
              "slug": "/app-extensions",
              "permalink": "/docs/0.61/app-extensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/app-extensions.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/0.61/communication-ios"
              },
              "next": {
                "title": "Native Modules",
                "permalink": "/docs/0.61/native-modules-android"
              }
            },
            {
              "unversionedId": "appearance",
              "id": "version-0.61/appearance",
              "isDocsHomePage": false,
              "title": "Appearance",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.61/appearance.md",
              "slug": "/appearance",
              "permalink": "/docs/0.61/appearance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/appearance.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "appregistry",
              "id": "version-0.61/appregistry",
              "isDocsHomePage": false,
              "title": "AppRegistry",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.61/appregistry.md",
              "slug": "/appregistry",
              "permalink": "/docs/0.61/appregistry",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/appregistry.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Animated",
                "permalink": "/docs/0.61/animated"
              },
              "next": {
                "title": "AppState",
                "permalink": "/docs/0.61/appstate"
              }
            },
            {
              "unversionedId": "appstate",
              "id": "version-0.61/appstate",
              "isDocsHomePage": false,
              "title": "AppState",
              "description": "AppState can tell you if the app is in the foreground or background, and notify you when the state changes.",
              "source": "@site/versioned_docs/version-0.61/appstate.md",
              "slug": "/appstate",
              "permalink": "/docs/0.61/appstate",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/appstate.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "AppRegistry",
                "permalink": "/docs/0.61/appregistry"
              },
              "next": {
                "title": "🚧 AsyncStorage",
                "permalink": "/docs/0.61/asyncstorage"
              }
            },
            {
              "unversionedId": "asyncstorage",
              "id": "version-0.61/asyncstorage",
              "isDocsHomePage": false,
              "title": "🚧 AsyncStorage",
              "description": "Deprecated. Use @react-native-community/async-storage instead.",
              "source": "@site/versioned_docs/version-0.61/asyncstorage.md",
              "slug": "/asyncstorage",
              "permalink": "/docs/0.61/asyncstorage",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/asyncstorage.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "AppState",
                "permalink": "/docs/0.61/appstate"
              },
              "next": {
                "title": "BackHandler",
                "permalink": "/docs/0.61/backhandler"
              }
            },
            {
              "unversionedId": "backandroid",
              "id": "version-0.61/backandroid",
              "isDocsHomePage": false,
              "title": "BackAndroid",
              "description": "Deprecated. Use BackHandler instead.",
              "source": "@site/versioned_docs/version-0.61/backandroid.md",
              "slug": "/backandroid",
              "permalink": "/docs/0.61/backandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/backandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backhandler",
              "id": "version-0.61/backhandler",
              "isDocsHomePage": false,
              "title": "BackHandler",
              "description": "Detect hardware button presses for back navigation.",
              "source": "@site/versioned_docs/version-0.61/backhandler.md",
              "slug": "/backhandler",
              "permalink": "/docs/0.61/backhandler",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/backhandler.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 AsyncStorage",
                "permalink": "/docs/0.61/asyncstorage"
              },
              "next": {
                "title": "🚧 Clipboard",
                "permalink": "/docs/0.61/clipboard"
              }
            },
            {
              "unversionedId": "building-for-tv",
              "id": "version-0.61/building-for-tv",
              "isDocsHomePage": false,
              "title": "Building For TV Devices",
              "description": "TV devices support has been implemented with the intention of making existing React Native applications work on Apple TV and Android TV, with few or no changes needed in the JavaScript code for the applications.",
              "source": "@site/versioned_docs/version-0.61/building-for-tv.md",
              "slug": "/building-for-tv",
              "permalink": "/docs/0.61/building-for-tv",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/building-for-tv.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/0.61/integration-with-existing-apps"
              },
              "next": {
                "title": "Running On Device",
                "permalink": "/docs/0.61/running-on-device"
              }
            },
            {
              "unversionedId": "button",
              "id": "version-0.61/button",
              "isDocsHomePage": false,
              "title": "Button",
              "description": "A basic button component that should render nicely on any platform. Supports a minimal level of customization.",
              "source": "@site/versioned_docs/version-0.61/button.md",
              "slug": "/button",
              "permalink": "/docs/0.61/button",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/button.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "ActivityIndicator",
                "permalink": "/docs/0.61/activityindicator"
              },
              "next": {
                "title": "🚧 CheckBox",
                "permalink": "/docs/0.61/checkbox"
              }
            },
            {
              "unversionedId": "cameraroll",
              "id": "version-0.61/cameraroll",
              "isDocsHomePage": false,
              "title": "🚧 CameraRoll",
              "description": "Deprecated. Use @react-native-community/cameraroll instead.",
              "source": "@site/versioned_docs/version-0.61/cameraroll.md",
              "slug": "/cameraroll",
              "permalink": "/docs/0.61/cameraroll",
              "editUrl": "https://github.com/facebook/react-native-website/edit/master/website/versioned_docs/version-0.58/cameraroll.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "checkbox",
              "id": "version-0.61/checkbox",
              "isDocsHomePage": false,
              "title": "🚧 CheckBox",
              "description": "Deprecated. Use @react-native-community/checkbox instead.",
              "source": "@site/versioned_docs/version-0.61/checkbox.md",
              "slug": "/checkbox",
              "permalink": "/docs/0.61/checkbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/checkbox.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Button",
                "permalink": "/docs/0.61/button"
              },
              "next": {
                "title": "🚧 DatePickerIOS",
                "permalink": "/docs/0.61/datepickerios"
              }
            },
            {
              "unversionedId": "clipboard",
              "id": "version-0.61/clipboard",
              "isDocsHomePage": false,
              "title": "🚧 Clipboard",
              "description": "Deprecated. Use @react-native-community/clipboard instead.",
              "source": "@site/versioned_docs/version-0.61/clipboard.md",
              "slug": "/clipboard",
              "permalink": "/docs/0.61/clipboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/clipboard.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "BackHandler",
                "permalink": "/docs/0.61/backhandler"
              },
              "next": {
                "title": "🚧 DatePickerAndroid",
                "permalink": "/docs/0.61/datepickerandroid"
              }
            },
            {
              "unversionedId": "colors",
              "id": "version-0.61/colors",
              "isDocsHomePage": false,
              "title": "Color Reference",
              "description": "Components in React Native are styled using JavaScript. Color properties usually match how CSS works on the web.",
              "source": "@site/versioned_docs/version-0.61/colors.md",
              "slug": "/colors",
              "permalink": "/docs/0.61/colors",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/colors.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Direct Manipulation",
                "permalink": "/docs/0.61/direct-manipulation"
              },
              "next": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/0.61/integration-with-existing-apps"
              }
            },
            {
              "unversionedId": "communication-android",
              "id": "version-0.61/communication-android",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.61/communication-android.md",
              "slug": "/communication-android",
              "permalink": "/docs/0.61/communication-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/communication-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "communication-ios",
              "id": "version-0.61/communication-ios",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.61/communication-ios.md",
              "slug": "/communication-ios",
              "permalink": "/docs/0.61/communication-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/communication-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Running On Simulator",
                "permalink": "/docs/0.61/running-on-simulator-ios"
              },
              "next": {
                "title": "App Extensions",
                "permalink": "/docs/0.61/app-extensions"
              }
            },
            {
              "unversionedId": "components-and-apis",
              "id": "version-0.61/components-and-apis",
              "isDocsHomePage": false,
              "title": "Components and APIs",
              "description": "React Native provides a number of Core Components. You will find a full list of components and APIs on the sidebar to the left. If you're not sure where to get started, take a look at the following categories:",
              "source": "@site/versioned_docs/version-0.61/components-and-apis.md",
              "slug": "/components-and-apis",
              "permalink": "/docs/0.61/components-and-apis",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/components-and-apis.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "next": {
                "title": "ActivityIndicator",
                "permalink": "/docs/0.61/activityindicator"
              }
            },
            {
              "unversionedId": "custom-webview-android",
              "id": "version-0.61/custom-webview-android",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.61/custom-webview-android.md",
              "slug": "/custom-webview-android",
              "permalink": "/docs/0.61/custom-webview-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/custom-webview-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "custom-webview-ios",
              "id": "version-0.61/custom-webview-ios",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.61/custom-webview-ios.md",
              "slug": "/custom-webview-ios",
              "permalink": "/docs/0.61/custom-webview-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/custom-webview-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerandroid",
              "id": "version-0.61/datepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.61/datepickerandroid.md",
              "slug": "/datepickerandroid",
              "permalink": "/docs/0.61/datepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/datepickerandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 Clipboard",
                "permalink": "/docs/0.61/clipboard"
              },
              "next": {
                "title": "Dimensions",
                "permalink": "/docs/0.61/dimensions"
              }
            },
            {
              "unversionedId": "datepickerios",
              "id": "version-0.61/datepickerios",
              "isDocsHomePage": false,
              "title": "🚧 DatePickerIOS",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.61/datepickerios.md",
              "slug": "/datepickerios",
              "permalink": "/docs/0.61/datepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/datepickerios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 CheckBox",
                "permalink": "/docs/0.61/checkbox"
              },
              "next": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/0.61/drawerlayoutandroid"
              }
            },
            {
              "unversionedId": "debugging",
              "id": "version-0.61/debugging",
              "isDocsHomePage": false,
              "title": "Debugging",
              "description": "Accessing the In-App Developer Menu",
              "source": "@site/versioned_docs/version-0.61/debugging.md",
              "slug": "/debugging",
              "permalink": "/docs/0.61/debugging",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/debugging.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Timers",
                "permalink": "/docs/0.61/timers"
              },
              "next": {
                "title": "Performance",
                "permalink": "/docs/0.61/performance"
              }
            },
            {
              "unversionedId": "devsettings",
              "id": "version-0.61/devsettings",
              "isDocsHomePage": false,
              "title": "DevSettings",
              "description": "The DevSettings module exposes methods for customizing settings for developers in development.",
              "source": "@site/versioned_docs/version-0.61/devsettings.md",
              "slug": "/devsettings",
              "permalink": "/docs/0.61/devsettings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/devsettings.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "dimensions",
              "id": "version-0.61/dimensions",
              "isDocsHomePage": false,
              "title": "Dimensions",
              "description": "useWindowDimensions is the preffered API for React components. Unlike Dimensions, it updates as the window's dimensions update. This works nicely with the React paradigm.",
              "source": "@site/versioned_docs/version-0.61/dimensions.md",
              "slug": "/dimensions",
              "permalink": "/docs/0.61/dimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/dimensions.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 DatePickerAndroid",
                "permalink": "/docs/0.61/datepickerandroid"
              },
              "next": {
                "title": "Easing",
                "permalink": "/docs/0.61/easing"
              }
            },
            {
              "unversionedId": "direct-manipulation",
              "id": "version-0.61/direct-manipulation",
              "isDocsHomePage": false,
              "title": "Direct Manipulation",
              "description": "It is sometimes necessary to make changes directly to a component without using state/props to trigger a re-render of the entire subtree. When using React in the browser for example, you sometimes need to directly modify a DOM node, and the same is true for views in mobile apps. setNativeProps is the React Native equivalent to setting properties directly on a DOM node.",
              "source": "@site/versioned_docs/version-0.61/direct-manipulation.md",
              "slug": "/direct-manipulation",
              "permalink": "/docs/0.61/direct-manipulation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/direct-manipulation.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Using TypeScript with React Native",
                "permalink": "/docs/0.61/typescript"
              },
              "next": {
                "title": "Color Reference",
                "permalink": "/docs/0.61/colors"
              }
            },
            {
              "unversionedId": "drawerlayoutandroid",
              "id": "version-0.61/drawerlayoutandroid",
              "isDocsHomePage": false,
              "title": "DrawerLayoutAndroid",
              "description": "React component that wraps the platform DrawerLayout (Android only). The Drawer (typically used for navigation) is rendered with renderNavigationView and direct children are the main view (where your content goes). The navigation view is initially not visible on the screen, but can be pulled in from the side of the window specified by the drawerPosition prop and its width can be set by the drawerWidth prop.",
              "source": "@site/versioned_docs/version-0.61/drawerlayoutandroid.md",
              "slug": "/drawerlayoutandroid",
              "permalink": "/docs/0.61/drawerlayoutandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/drawerlayoutandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 DatePickerIOS",
                "permalink": "/docs/0.61/datepickerios"
              },
              "next": {
                "title": "FlatList",
                "permalink": "/docs/0.61/flatlist"
              }
            },
            {
              "unversionedId": "easing",
              "id": "version-0.61/easing",
              "isDocsHomePage": false,
              "title": "Easing",
              "description": "The Easing module implements common easing functions. This module is used by Animated.timing() to convey physically believable motion in animations.",
              "source": "@site/versioned_docs/version-0.61/easing.md",
              "slug": "/easing",
              "permalink": "/docs/0.61/easing",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/easing.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Dimensions",
                "permalink": "/docs/0.61/dimensions"
              },
              "next": {
                "title": "🚧 ImageEditor",
                "permalink": "/docs/0.61/imageeditor"
              }
            },
            {
              "unversionedId": "enviroment-setup",
              "id": "version-0.61/enviroment-setup",
              "isDocsHomePage": false,
              "title": "Getting Started",
              "description": "This page will help you install and build your first React Native app.",
              "source": "@site/versioned_docs/version-0.61/getting-started.md",
              "slug": "/enviroment-setup",
              "permalink": "/docs/0.61/enviroment-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/getting-started.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "fast-refresh",
              "id": "version-0.61/fast-refresh",
              "isDocsHomePage": false,
              "title": "Fast Refresh",
              "description": "Fast Refresh is a React Native feature that allows you to get near-instant feedback for changes in your React components. Fast Refresh is enabled by default, and you can toggle \"Enable Fast Refresh\" in the React Native developer menu. With Fast Refresh enabled, most edits should be visible within a second or two.",
              "source": "@site/versioned_docs/version-0.61/fast-refresh.md",
              "slug": "/fast-refresh",
              "permalink": "/docs/0.61/fast-refresh",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/fast-refresh.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "More Resources",
                "permalink": "/docs/0.61/more-resources"
              },
              "next": {
                "title": "Platform Specific Code",
                "permalink": "/docs/0.61/platform-specific-code"
              }
            },
            {
              "unversionedId": "flatlist",
              "id": "version-0.61/flatlist",
              "isDocsHomePage": false,
              "title": "FlatList",
              "description": "A performant interface for rendering basic, flat lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.61/flatlist.md",
              "slug": "/flatlist",
              "permalink": "/docs/0.61/flatlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/flatlist.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/0.61/drawerlayoutandroid"
              },
              "next": {
                "title": "Image",
                "permalink": "/docs/0.61/image"
              }
            },
            {
              "unversionedId": "flexbox",
              "id": "version-0.61/flexbox",
              "isDocsHomePage": false,
              "title": "Layout with Flexbox",
              "description": "A component can specify the layout of its children using the flexbox algorithm. Flexbox is designed to provide a consistent layout on different screen sizes.",
              "source": "@site/versioned_docs/version-0.61/flexbox.md",
              "slug": "/flexbox",
              "permalink": "/docs/0.61/flexbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/flexbox.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Height and Width",
                "permalink": "/docs/0.61/height-and-width"
              },
              "next": {
                "title": "Handling Text Input",
                "permalink": "/docs/0.61/handling-text-input"
              }
            },
            {
              "unversionedId": "geolocation",
              "id": "version-0.61/geolocation",
              "isDocsHomePage": false,
              "title": "🚧 Geolocation",
              "description": "Deprecated. Use @react-native-community/geolocation instead.",
              "source": "@site/versioned_docs/version-0.61/geolocation.md",
              "slug": "/geolocation",
              "permalink": "/docs/0.61/geolocation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/geolocation.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "gesture-responder-system",
              "id": "version-0.61/gesture-responder-system",
              "isDocsHomePage": false,
              "title": "Gesture Responder System",
              "description": "The gesture responder system manages the lifecycle of gestures in your app. A touch can go through several phases as the app determines what the user's intention is. For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping. This can even change during the duration of a touch. There can also be multiple simultaneous touches.",
              "source": "@site/versioned_docs/version-0.61/gesture-responder-system.md",
              "slug": "/gesture-responder-system",
              "permalink": "/docs/0.61/gesture-responder-system",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/gesture-responder-system.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Performance",
                "permalink": "/docs/0.61/performance"
              },
              "next": {
                "title": "JavaScript Environment",
                "permalink": "/docs/0.61/javascript-environment"
              }
            },
            {
              "unversionedId": "getting-started",
              "id": "version-0.61/getting-started",
              "isDocsHomePage": false,
              "title": "Introduction",
              "description": "This helpful guide lays out the prerequisites for learning React Native, using these docs, and setting up your environment.",
              "source": "@site/versioned_docs/version-0.61/introduction.md",
              "slug": "/getting-started",
              "permalink": "/docs/0.61/getting-started",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/introduction.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "next": {
                "title": "Learn the Basics",
                "permalink": "/docs/0.61/tutorial"
              }
            },
            {
              "unversionedId": "handling-text-input",
              "id": "version-0.61/handling-text-input",
              "isDocsHomePage": false,
              "title": "Handling Text Input",
              "description": "TextInput is a Core Component that allows the user to enter text. It has an onChangeText prop that takes a function to be called every time the text changed, and an onSubmitEditing prop that takes a function to be called when the text is submitted.",
              "source": "@site/versioned_docs/version-0.61/handling-text-input.md",
              "slug": "/handling-text-input",
              "permalink": "/docs/0.61/handling-text-input",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/handling-text-input.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/0.61/flexbox"
              },
              "next": {
                "title": "Handling Touches",
                "permalink": "/docs/0.61/handling-touches"
              }
            },
            {
              "unversionedId": "handling-touches",
              "id": "version-0.61/handling-touches",
              "isDocsHomePage": false,
              "title": "Handling Touches",
              "description": "Users interact with mobile apps mainly through touch. They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. React Native provides components to handle all sorts of common gestures, as well as a comprehensive gesture responder system to allow for more advanced gesture recognition, but the one component you will most likely be interested in is the basic Button.",
              "source": "@site/versioned_docs/version-0.61/handling-touches.md",
              "slug": "/handling-touches",
              "permalink": "/docs/0.61/handling-touches",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/handling-touches.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Handling Text Input",
                "permalink": "/docs/0.61/handling-text-input"
              },
              "next": {
                "title": "Using a ScrollView",
                "permalink": "/docs/0.61/using-a-scrollview"
              }
            },
            {
              "unversionedId": "headless-js-android",
              "id": "version-0.61/headless-js-android",
              "isDocsHomePage": false,
              "title": "Headless JS",
              "description": "Headless JS is a way to run tasks in JavaScript while your app is in the background. It can be used, for example, to sync fresh data, handle push notifications, or play music.",
              "source": "@site/versioned_docs/version-0.61/headless-js-android.md",
              "slug": "/headless-js-android",
              "permalink": "/docs/0.61/headless-js-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/headless-js-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Native UI Components",
                "permalink": "/docs/0.61/native-components-android"
              },
              "next": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/0.61/signed-apk-android"
              }
            },
            {
              "unversionedId": "height-and-width",
              "id": "version-0.61/height-and-width",
              "isDocsHomePage": false,
              "title": "Height and Width",
              "description": "A component's height and width determine its size on the screen.",
              "source": "@site/versioned_docs/version-0.61/height-and-width.md",
              "slug": "/height-and-width",
              "permalink": "/docs/0.61/height-and-width",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/height-and-width.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Style",
                "permalink": "/docs/0.61/style"
              },
              "next": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/0.61/flexbox"
              }
            },
            {
              "unversionedId": "hermes",
              "id": "version-0.61/hermes",
              "isDocsHomePage": false,
              "title": "Using Hermes",
              "description": "Hermes is an open-source JavaScript engine optimized for running React Native apps on Android. For many apps, enabling Hermes will result in improved start-up time, decreased memory usage, and smaller app size. At this time Hermes is an opt-in React Native feature, and this guide explains how to enable it.",
              "source": "@site/versioned_docs/version-0.61/hermes.md",
              "slug": "/hermes",
              "permalink": "/docs/0.61/hermes",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/hermes.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/0.61/removing-default-permissions"
              }
            },
            {
              "unversionedId": "image",
              "id": "version-0.61/image",
              "isDocsHomePage": false,
              "title": "Image",
              "description": "A React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.",
              "source": "@site/versioned_docs/version-0.61/image.md",
              "slug": "/image",
              "permalink": "/docs/0.61/image",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/image.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "FlatList",
                "permalink": "/docs/0.61/flatlist"
              },
              "next": {
                "title": "ImageBackground",
                "permalink": "/docs/0.61/imagebackground"
              }
            },
            {
              "unversionedId": "image-style-props",
              "id": "version-0.61/image-style-props",
              "isDocsHomePage": false,
              "title": "Image Style Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/image-style-props.md",
              "slug": "/image-style-props",
              "permalink": "/docs/0.61/image-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/image-style-props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 ImagePickerIOS",
                "permalink": "/docs/0.61/imagepickerios"
              },
              "next": {
                "title": "InteractionManager",
                "permalink": "/docs/0.61/interactionmanager"
              }
            },
            {
              "unversionedId": "imagebackground",
              "id": "version-0.61/imagebackground",
              "isDocsHomePage": false,
              "title": "ImageBackground",
              "description": "A common feature request from developers familiar with the web is background-image. To handle this use case, you can use the ` component, which has the same props as `, and add whatever children to it you would like to layer on top of it.",
              "source": "@site/versioned_docs/version-0.61/imagebackground.md",
              "slug": "/imagebackground",
              "permalink": "/docs/0.61/imagebackground",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/imagebackground.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Image",
                "permalink": "/docs/0.61/image"
              },
              "next": {
                "title": "InputAccessoryView",
                "permalink": "/docs/0.61/inputaccessoryview"
              }
            },
            {
              "unversionedId": "imageeditor",
              "id": "version-0.61/imageeditor",
              "isDocsHomePage": false,
              "title": "🚧 ImageEditor",
              "description": "Deprecated. Use @react-native-community/image-editor instead.",
              "source": "@site/versioned_docs/version-0.61/imageeditor.md",
              "slug": "/imageeditor",
              "permalink": "/docs/0.61/imageeditor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/imageeditor.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Easing",
                "permalink": "/docs/0.61/easing"
              },
              "next": {
                "title": "🚧 ImagePickerIOS",
                "permalink": "/docs/0.61/imagepickerios"
              }
            },
            {
              "unversionedId": "imagepickerios",
              "id": "version-0.61/imagepickerios",
              "isDocsHomePage": false,
              "title": "🚧 ImagePickerIOS",
              "description": "Deprecated. Use @react-native-community/image-picker-ios instead.",
              "source": "@site/versioned_docs/version-0.61/imagepickerios.md",
              "slug": "/imagepickerios",
              "permalink": "/docs/0.61/imagepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/imagepickerios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 ImageEditor",
                "permalink": "/docs/0.61/imageeditor"
              },
              "next": {
                "title": "Image Style Props",
                "permalink": "/docs/0.61/image-style-props"
              }
            },
            {
              "unversionedId": "images",
              "id": "version-0.61/images",
              "isDocsHomePage": false,
              "title": "Images",
              "description": "Static Image Resources",
              "source": "@site/versioned_docs/version-0.61/images.md",
              "slug": "/images",
              "permalink": "/docs/0.61/images",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/images.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/0.61/navigation"
              },
              "next": {
                "title": "Animations",
                "permalink": "/docs/0.61/animations"
              }
            },
            {
              "unversionedId": "imagestore",
              "id": "version-0.61/imagestore",
              "isDocsHomePage": false,
              "title": "ImageStore",
              "description": "Deprecated. Use expo-file-system or react-native-fs instead.",
              "source": "@site/versioned_docs/version-0.61/imagestore.md",
              "slug": "/imagestore",
              "permalink": "/docs/0.61/imagestore",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/imagestore.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "improvingux",
              "id": "version-0.61/improvingux",
              "isDocsHomePage": false,
              "title": "Improving User Experience",
              "description": "Configure text inputs",
              "source": "@site/versioned_docs/version-0.61/improvingux.md",
              "slug": "/improvingux",
              "permalink": "/docs/0.61/improvingux",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/improvingux.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Accessibility",
                "permalink": "/docs/0.61/accessibility"
              },
              "next": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/0.61/optimizing-flatlist-configuration"
              }
            },
            {
              "unversionedId": "inputaccessoryview",
              "id": "version-0.61/inputaccessoryview",
              "isDocsHomePage": false,
              "title": "InputAccessoryView",
              "description": "A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars.",
              "source": "@site/versioned_docs/version-0.61/inputaccessoryview.md",
              "slug": "/inputaccessoryview",
              "permalink": "/docs/0.61/inputaccessoryview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/inputaccessoryview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "ImageBackground",
                "permalink": "/docs/0.61/imagebackground"
              },
              "next": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/0.61/keyboardavoidingview"
              }
            },
            {
              "unversionedId": "integration-with-existing-apps",
              "id": "version-0.61/integration-with-existing-apps",
              "isDocsHomePage": false,
              "title": "Integration with Existing Apps",
              "description": "React Native is great when you are starting a new mobile app from scratch. However, it also works well for adding a single view or user flow to existing native applications. With a few steps, you can add new React Native based features, screens, views, etc.",
              "source": "@site/versioned_docs/version-0.61/integration-with-existing-apps.md",
              "slug": "/integration-with-existing-apps",
              "permalink": "/docs/0.61/integration-with-existing-apps",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/integration-with-existing-apps.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Color Reference",
                "permalink": "/docs/0.61/colors"
              },
              "next": {
                "title": "Building For TV Devices",
                "permalink": "/docs/0.61/building-for-tv"
              }
            },
            {
              "unversionedId": "interactionmanager",
              "id": "version-0.61/interactionmanager",
              "isDocsHomePage": false,
              "title": "InteractionManager",
              "description": "InteractionManager allows long-running work to be scheduled after any interactions/animations have completed. In particular, this allows JavaScript animations to run smoothly.",
              "source": "@site/versioned_docs/version-0.61/interactionmanager.md",
              "slug": "/interactionmanager",
              "permalink": "/docs/0.61/interactionmanager",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/interactionmanager.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Image Style Props",
                "permalink": "/docs/0.61/image-style-props"
              },
              "next": {
                "title": "Keyboard",
                "permalink": "/docs/0.61/keyboard"
              }
            },
            {
              "unversionedId": "intro-react",
              "id": "version-0.61/intro-react",
              "isDocsHomePage": false,
              "title": "React Fundamentals",
              "description": "To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed.",
              "source": "@site/versioned_docs/version-0.61/intro-react.md",
              "slug": "/intro-react",
              "permalink": "/docs/0.61/intro-react",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/intro-react.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "intro-react-native-components",
              "id": "version-0.61/intro-react-native-components",
              "isDocsHomePage": false,
              "title": "Core Components and Native Components",
              "description": "React Native lets you compose app interfaces using Native Components. Conveniently, it comes with a set of these components for you to get started with right now—the Core Components!",
              "source": "@site/versioned_docs/version-0.61/intro-react-native-components.md",
              "slug": "/intro-react-native-components",
              "permalink": "/docs/0.61/intro-react-native-components",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/intro-react-native-components.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "javascript-environment",
              "id": "version-0.61/javascript-environment",
              "isDocsHomePage": false,
              "title": "JavaScript Environment",
              "description": "JavaScript Runtime",
              "source": "@site/versioned_docs/version-0.61/javascript-environment.md",
              "slug": "/javascript-environment",
              "permalink": "/docs/0.61/javascript-environment",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/javascript-environment.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Gesture Responder System",
                "permalink": "/docs/0.61/gesture-responder-system"
              },
              "next": {
                "title": "Using TypeScript with React Native",
                "permalink": "/docs/0.61/typescript"
              }
            },
            {
              "unversionedId": "keyboard",
              "id": "version-0.61/keyboard",
              "isDocsHomePage": false,
              "title": "Keyboard",
              "description": "Keyboard module to control keyboard events.",
              "source": "@site/versioned_docs/version-0.61/keyboard.md",
              "slug": "/keyboard",
              "permalink": "/docs/0.61/keyboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/keyboard.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "InteractionManager",
                "permalink": "/docs/0.61/interactionmanager"
              },
              "next": {
                "title": "Layout Props",
                "permalink": "/docs/0.61/layout-props"
              }
            },
            {
              "unversionedId": "keyboardavoidingview",
              "id": "version-0.61/keyboardavoidingview",
              "isDocsHomePage": false,
              "title": "KeyboardAvoidingView",
              "description": "It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard. It can automatically adjust either its height, position, or bottom padding based on the position of the keyboard.",
              "source": "@site/versioned_docs/version-0.61/keyboardavoidingview.md",
              "slug": "/keyboardavoidingview",
              "permalink": "/docs/0.61/keyboardavoidingview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/keyboardavoidingview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "InputAccessoryView",
                "permalink": "/docs/0.61/inputaccessoryview"
              },
              "next": {
                "title": "🚧 MaskedViewIOS",
                "permalink": "/docs/0.61/maskedviewios"
              }
            },
            {
              "unversionedId": "layout-props",
              "id": "version-0.61/layout-props",
              "isDocsHomePage": false,
              "title": "Layout Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/layout-props.md",
              "slug": "/layout-props",
              "permalink": "/docs/0.61/layout-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/layout-props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Keyboard",
                "permalink": "/docs/0.61/keyboard"
              },
              "next": {
                "title": "LayoutAnimation",
                "permalink": "/docs/0.61/layoutanimation"
              }
            },
            {
              "unversionedId": "layoutanimation",
              "id": "version-0.61/layoutanimation",
              "isDocsHomePage": false,
              "title": "LayoutAnimation",
              "description": "Automatically animates views to their new positions when the next layout happens.",
              "source": "@site/versioned_docs/version-0.61/layoutanimation.md",
              "slug": "/layoutanimation",
              "permalink": "/docs/0.61/layoutanimation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/layoutanimation.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Layout Props",
                "permalink": "/docs/0.61/layout-props"
              },
              "next": {
                "title": "Linking",
                "permalink": "/docs/0.61/linking"
              }
            },
            {
              "unversionedId": "libraries",
              "id": "version-0.61/libraries",
              "isDocsHomePage": false,
              "title": "Using Libraries",
              "description": "This guide introduces React Native developers to finding, installing, and using third-party libraries in their apps.",
              "source": "@site/versioned_docs/version-0.61/libraries.md",
              "slug": "/libraries",
              "permalink": "/docs/0.61/libraries",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/libraries.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "linking",
              "id": "version-0.61/linking",
              "isDocsHomePage": false,
              "title": "Linking",
              "description": "Projects with Native Code Only",
              "source": "@site/versioned_docs/version-0.61/linking.md",
              "slug": "/linking",
              "permalink": "/docs/0.61/linking",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/linking.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "LayoutAnimation",
                "permalink": "/docs/0.61/layoutanimation"
              },
              "next": {
                "title": "PanResponder",
                "permalink": "/docs/0.61/panresponder"
              }
            },
            {
              "unversionedId": "linking-libraries-ios",
              "id": "version-0.61/linking-libraries-ios",
              "isDocsHomePage": false,
              "title": "Linking Libraries",
              "description": "Not every app uses all the native capabilities, and including the code to support all those features would impact the binary size... But we still want to support these features whenever you need them.",
              "source": "@site/versioned_docs/version-0.61/linking-libraries-ios.md",
              "slug": "/linking-libraries-ios",
              "permalink": "/docs/0.61/linking-libraries-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/linking-libraries-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Native UI Components",
                "permalink": "/docs/0.61/native-components-ios"
              },
              "next": {
                "title": "Running On Simulator",
                "permalink": "/docs/0.61/running-on-simulator-ios"
              }
            },
            {
              "unversionedId": "listview",
              "id": "version-0.61/listview",
              "isDocsHomePage": false,
              "title": "ListView",
              "description": "DEPRECATED - use one of the new list components, such as FlatList or SectionList for bounded memory use, fewer bugs, better performance, an easier to use API, and more features. Check out this blog post for more details.",
              "source": "@site/versioned_docs/version-0.61/listview.md",
              "slug": "/listview",
              "permalink": "/docs/0.61/listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/listview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "listviewdatasource",
              "id": "version-0.61/listviewdatasource",
              "isDocsHomePage": false,
              "title": "ListViewDataSource",
              "description": "Provides efficient data processing and access to the ListView component. A ListViewDataSource is created with functions for extracting data from the input blob, and comparing elements (with default implementations for convenience). The input blob can be as flat as an array of strings, or an object with rows nested inside section objects.",
              "source": "@site/versioned_docs/version-0.61/listviewdatasource.md",
              "slug": "/listviewdatasource",
              "permalink": "/docs/0.61/listviewdatasource",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/listviewdatasource.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "maskedviewios",
              "id": "version-0.61/maskedviewios",
              "isDocsHomePage": false,
              "title": "🚧 MaskedViewIOS",
              "description": "Deprecated. Use @react-native-community/masked-view instead.",
              "source": "@site/versioned_docs/version-0.61/maskedviewios.md",
              "slug": "/maskedviewios",
              "permalink": "/docs/0.61/maskedviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/maskedviewios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/0.61/keyboardavoidingview"
              },
              "next": {
                "title": "Modal",
                "permalink": "/docs/0.61/modal"
              }
            },
            {
              "unversionedId": "modal",
              "id": "version-0.61/modal",
              "isDocsHomePage": false,
              "title": "Modal",
              "description": "The Modal component is a basic way to present content above an enclosing view.",
              "source": "@site/versioned_docs/version-0.61/modal.md",
              "slug": "/modal",
              "permalink": "/docs/0.61/modal",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/modal.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 MaskedViewIOS",
                "permalink": "/docs/0.61/maskedviewios"
              },
              "next": {
                "title": "Picker",
                "permalink": "/docs/0.61/picker"
              }
            },
            {
              "unversionedId": "more-resources",
              "id": "version-0.61/more-resources",
              "isDocsHomePage": false,
              "title": "More Resources",
              "description": "If you only read through this website, you should be able to build a pretty cool React Native app. But React Native isn't a product made by one company - it's a community of thousands of developers. So if you're interested in React Native, here's some related stuff you might want to check out.",
              "source": "@site/versioned_docs/version-0.61/more-resources.md",
              "slug": "/more-resources",
              "permalink": "/docs/0.61/more-resources",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/more-resources.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Networking",
                "permalink": "/docs/0.61/network"
              },
              "next": {
                "title": "Fast Refresh",
                "permalink": "/docs/0.61/fast-refresh"
              }
            },
            {
              "unversionedId": "native-components-android",
              "id": "version-0.61/native-components-android",
              "isDocsHomePage": false,
              "title": "Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.61/native-components-android.md",
              "slug": "/native-components-android",
              "permalink": "/docs/0.61/native-components-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/native-components-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Native Modules",
                "permalink": "/docs/0.61/native-modules-android"
              },
              "next": {
                "title": "Headless JS",
                "permalink": "/docs/0.61/headless-js-android"
              }
            },
            {
              "unversionedId": "native-components-ios",
              "id": "version-0.61/native-components-ios",
              "isDocsHomePage": false,
              "title": "Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.61/native-components-ios.md",
              "slug": "/native-components-ios",
              "permalink": "/docs/0.61/native-components-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/native-components-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Native Modules",
                "permalink": "/docs/0.61/native-modules-ios"
              },
              "next": {
                "title": "Linking Libraries",
                "permalink": "/docs/0.61/linking-libraries-ios"
              }
            },
            {
              "unversionedId": "native-modules-android",
              "id": "version-0.61/native-modules-android",
              "isDocsHomePage": false,
              "title": "Native Modules",
              "description": "Sometimes an app needs access to a platform API that React Native doesn't have a corresponding module for yet. Maybe you want to reuse some existing Java code without having to reimplement it in JavaScript, or write some high performance, multi-threaded code such as for image processing, a database, or any number of advanced extensions.",
              "source": "@site/versioned_docs/version-0.61/native-modules-android.md",
              "slug": "/native-modules-android",
              "permalink": "/docs/0.61/native-modules-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/native-modules-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "App Extensions",
                "permalink": "/docs/0.61/app-extensions"
              },
              "next": {
                "title": "Native UI Components",
                "permalink": "/docs/0.61/native-components-android"
              }
            },
            {
              "unversionedId": "native-modules-ios",
              "id": "version-0.61/native-modules-ios",
              "isDocsHomePage": false,
              "title": "Native Modules",
              "description": "Sometimes an app needs to access a platform API and React Native doesn't have a corresponding module yet. Maybe you want to reuse some existing Objective-C, Swift or C++ code without having to reimplement it in JavaScript, or write some high performance, multi-threaded code such as for image processing, a database, or any number of advanced extensions.",
              "source": "@site/versioned_docs/version-0.61/native-modules-ios.md",
              "slug": "/native-modules-ios",
              "permalink": "/docs/0.61/native-modules-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/native-modules-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/0.61/out-of-tree-platforms"
              },
              "next": {
                "title": "Native UI Components",
                "permalink": "/docs/0.61/native-components-ios"
              }
            },
            {
              "unversionedId": "native-modules-setup",
              "id": "version-0.61/native-modules-setup",
              "isDocsHomePage": false,
              "title": "Native Modules Setup",
              "description": "Native modules are usually distributed as npm packages, except that on top of the usual JavaScript they will include some native code per platform. To understand more about npm packages you may find this guide useful.",
              "source": "@site/versioned_docs/version-0.61/native-modules-setup.md",
              "slug": "/native-modules-setup",
              "permalink": "/docs/0.61/native-modules-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/native-modules-setup.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Troubleshooting",
                "permalink": "/docs/0.61/troubleshooting"
              },
              "next": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/0.61/out-of-tree-platforms"
              }
            },
            {
              "unversionedId": "navigation",
              "id": "version-0.61/navigation",
              "isDocsHomePage": false,
              "title": "Navigating Between Screens",
              "description": "Mobile apps are rarely made up of a single screen. Managing the presentation of, and transition between, multiple screens is typically handled by what is known as a navigator.",
              "source": "@site/versioned_docs/version-0.61/navigation.md",
              "slug": "/navigation",
              "permalink": "/docs/0.61/navigation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/navigation.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Platform Specific Code",
                "permalink": "/docs/0.61/platform-specific-code"
              },
              "next": {
                "title": "Images",
                "permalink": "/docs/0.61/images"
              }
            },
            {
              "unversionedId": "netinfo",
              "id": "version-0.61/netinfo",
              "isDocsHomePage": false,
              "title": "NetInfo",
              "description": "Deprecated. Use react-native-community/react-native-netinfo instead.",
              "source": "@site/versioned_docs/version-0.61/netinfo.md",
              "slug": "/netinfo",
              "permalink": "/docs/0.61/netinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/netinfo.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "network",
              "id": "version-0.61/network",
              "isDocsHomePage": false,
              "title": "Networking",
              "description": "Many mobile apps need to load resources from a remote URL. You may want to make a POST request to a REST API, or you may need to fetch a chunk of static content from another server.",
              "source": "@site/versioned_docs/version-0.61/network.md",
              "slug": "/network",
              "permalink": "/docs/0.61/network",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/network.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Using List Views",
                "permalink": "/docs/0.61/using-a-listview"
              },
              "next": {
                "title": "More Resources",
                "permalink": "/docs/0.61/more-resources"
              }
            },
            {
              "unversionedId": "optimizing-flatlist-configuration",
              "id": "version-0.61/optimizing-flatlist-configuration",
              "isDocsHomePage": false,
              "title": "Optimizing Flatlist Configuration",
              "description": "Terms",
              "source": "@site/versioned_docs/version-0.61/optimizing-flatlist-configuration.md",
              "slug": "/optimizing-flatlist-configuration",
              "permalink": "/docs/0.61/optimizing-flatlist-configuration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/optimizing-flatlist-configuration.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Improving User Experience",
                "permalink": "/docs/0.61/improvingux"
              },
              "next": {
                "title": "Timers",
                "permalink": "/docs/0.61/timers"
              }
            },
            {
              "unversionedId": "out-of-tree-platforms",
              "id": "version-0.61/out-of-tree-platforms",
              "isDocsHomePage": false,
              "title": "Out-of-Tree Platforms",
              "description": "React Native is not only for Android and iOS - there are community-supported projects that bring it to other platforms, such as:",
              "source": "@site/versioned_docs/version-0.61/out-of-tree-platforms.md",
              "slug": "/out-of-tree-platforms",
              "permalink": "/docs/0.61/out-of-tree-platforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/out-of-tree-platforms.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Native Modules Setup",
                "permalink": "/docs/0.61/native-modules-setup"
              },
              "next": {
                "title": "Native Modules",
                "permalink": "/docs/0.61/native-modules-ios"
              }
            },
            {
              "unversionedId": "panresponder",
              "id": "version-0.61/panresponder",
              "isDocsHomePage": false,
              "title": "PanResponder",
              "description": "PanResponder reconciles several touches into a single gesture. It makes single-touch gestures resilient to extra touches, and can be used to recognize basic multi-touch gestures.",
              "source": "@site/versioned_docs/version-0.61/panresponder.md",
              "slug": "/panresponder",
              "permalink": "/docs/0.61/panresponder",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/panresponder.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Linking",
                "permalink": "/docs/0.61/linking"
              },
              "next": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/0.61/permissionsandroid"
              }
            },
            {
              "unversionedId": "performance",
              "id": "version-0.61/performance",
              "isDocsHomePage": false,
              "title": "Performance",
              "description": "A compelling reason for using React Native instead of WebView-based tools is to achieve 60 frames per second and a native look and feel to your apps. Where possible, we would like for React Native to do the right thing and help you to focus on your app instead of performance optimization, but there are areas where we're not quite there yet, and others where React Native (similar to writing native code directly) cannot possibly determine the best way to optimize for you and so manual intervention will be necessary. We try our best to deliver buttery-smooth UI performance by default, but sometimes that isn't possible.",
              "source": "@site/versioned_docs/version-0.61/performance.md",
              "slug": "/performance",
              "permalink": "/docs/0.61/performance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/performance.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Debugging",
                "permalink": "/docs/0.61/debugging"
              },
              "next": {
                "title": "Gesture Responder System",
                "permalink": "/docs/0.61/gesture-responder-system"
              }
            },
            {
              "unversionedId": "permissionsandroid",
              "id": "version-0.61/permissionsandroid",
              "isDocsHomePage": false,
              "title": "PermissionsAndroid",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.61/permissionsandroid.md",
              "slug": "/permissionsandroid",
              "permalink": "/docs/0.61/permissionsandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/permissionsandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "PanResponder",
                "permalink": "/docs/0.61/panresponder"
              },
              "next": {
                "title": "PixelRatio",
                "permalink": "/docs/0.61/pixelratio"
              }
            },
            {
              "unversionedId": "picker",
              "id": "version-0.61/picker",
              "isDocsHomePage": false,
              "title": "Picker",
              "description": "Renders the native picker component on Android and iOS. Example:",
              "source": "@site/versioned_docs/version-0.61/picker.md",
              "slug": "/picker",
              "permalink": "/docs/0.61/picker",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/picker.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Modal",
                "permalink": "/docs/0.61/modal"
              },
              "next": {
                "title": "🚧 PickerIOS",
                "permalink": "/docs/0.61/pickerios"
              }
            },
            {
              "unversionedId": "picker-item",
              "id": "version-0.61/picker-item",
              "isDocsHomePage": false,
              "title": "Picker.Item",
              "description": "Individual selectable item in a Picker.",
              "source": "@site/versioned_docs/version-0.61/picker-item.md",
              "slug": "/picker-item",
              "permalink": "/docs/0.61/picker-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/picker-item.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-style-props",
              "id": "version-0.61/picker-style-props",
              "isDocsHomePage": false,
              "title": "Picker Style Props",
              "description": "Picker style props.",
              "source": "@site/versioned_docs/version-0.61/picker-style-props.md",
              "slug": "/picker-style-props",
              "permalink": "/docs/0.61/picker-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/picker-style-props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pickerios",
              "id": "version-0.61/pickerios",
              "isDocsHomePage": false,
              "title": "🚧 PickerIOS",
              "description": "Deprecated. Use @react-native-community/picker instead.",
              "source": "@site/versioned_docs/version-0.61/pickerios.md",
              "slug": "/pickerios",
              "permalink": "/docs/0.61/pickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/pickerios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Picker",
                "permalink": "/docs/0.61/picker"
              },
              "next": {
                "title": "🚧 ProgressBarAndroid",
                "permalink": "/docs/0.61/progressbarandroid"
              }
            },
            {
              "unversionedId": "pixelratio",
              "id": "version-0.61/pixelratio",
              "isDocsHomePage": false,
              "title": "PixelRatio",
              "description": "PixelRatio class gives access to the device pixel density.",
              "source": "@site/versioned_docs/version-0.61/pixelratio.md",
              "slug": "/pixelratio",
              "permalink": "/docs/0.61/pixelratio",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/pixelratio.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/0.61/permissionsandroid"
              },
              "next": {
                "title": "🚧 PushNotificationIOS",
                "permalink": "/docs/0.61/pushnotificationios"
              }
            },
            {
              "unversionedId": "platform-specific-code",
              "id": "version-0.61/platform-specific-code",
              "isDocsHomePage": false,
              "title": "Platform Specific Code",
              "description": "When building a cross-platform app, you'll want to re-use as much code as possible. Scenarios may arise where it makes sense for the code to be different, for example you may want to implement separate visual components for Android and iOS.",
              "source": "@site/versioned_docs/version-0.61/platform-specific-code.md",
              "slug": "/platform-specific-code",
              "permalink": "/docs/0.61/platform-specific-code",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/platform-specific-code.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Fast Refresh",
                "permalink": "/docs/0.61/fast-refresh"
              },
              "next": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/0.61/navigation"
              }
            },
            {
              "unversionedId": "profiling",
              "id": "version-0.61/profiling",
              "isDocsHomePage": false,
              "title": "Profiling",
              "description": "Use the built-in profiler to get detailed information about work done in the JavaScript thread and main thread side-by-side. Access it by selecting Perf Monitor from the Debug menu.",
              "source": "@site/versioned_docs/version-0.61/profiling.md",
              "slug": "/profiling",
              "permalink": "/docs/0.61/profiling",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/profiling.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "progressbarandroid",
              "id": "version-0.61/progressbarandroid",
              "isDocsHomePage": false,
              "title": "🚧 ProgressBarAndroid",
              "description": "Deprecated. Use @react-native-community/progress-bar-android instead.",
              "source": "@site/versioned_docs/version-0.61/progressbarandroid.md",
              "slug": "/progressbarandroid",
              "permalink": "/docs/0.61/progressbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/progressbarandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 PickerIOS",
                "permalink": "/docs/0.61/pickerios"
              },
              "next": {
                "title": "🚧 ProgressViewIOS",
                "permalink": "/docs/0.61/progressviewios"
              }
            },
            {
              "unversionedId": "progressviewios",
              "id": "version-0.61/progressviewios",
              "isDocsHomePage": false,
              "title": "🚧 ProgressViewIOS",
              "description": "Deprecated. Use @react-native-community/progress-view instead.",
              "source": "@site/versioned_docs/version-0.61/progressviewios.md",
              "slug": "/progressviewios",
              "permalink": "/docs/0.61/progressviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/progressviewios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 ProgressBarAndroid",
                "permalink": "/docs/0.61/progressbarandroid"
              },
              "next": {
                "title": "RefreshControl",
                "permalink": "/docs/0.61/refreshcontrol"
              }
            },
            {
              "unversionedId": "props",
              "id": "version-0.61/props",
              "isDocsHomePage": false,
              "title": "Props",
              "description": "Most components can be customized when they are created, with different parameters. These creation parameters are called props, short for properties.",
              "source": "@site/versioned_docs/version-0.61/props.md",
              "slug": "/props",
              "permalink": "/docs/0.61/props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Learn the Basics",
                "permalink": "/docs/0.61/tutorial"
              },
              "next": {
                "title": "State",
                "permalink": "/docs/0.61/state"
              }
            },
            {
              "unversionedId": "publishing-forks",
              "id": "version-0.61/publishing-forks",
              "isDocsHomePage": false,
              "title": "Publish your own version of react native",
              "description": "TL;DR",
              "source": "@site/versioned_docs/version-0.61/publishing.md",
              "slug": "/publishing-forks",
              "permalink": "/docs/0.61/publishing-forks",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/publishing.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-to-app-store",
              "id": "version-0.61/publishing-to-app-store",
              "isDocsHomePage": false,
              "title": "Publishing to Apple App Store",
              "description": "The publishing process is the same as any other native iOS app, with some additional considerations to take into account.",
              "source": "@site/versioned_docs/version-0.61/publishing-to-app-store.md",
              "slug": "/publishing-to-app-store",
              "permalink": "/docs/0.61/publishing-to-app-store",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/publishing-to-app-store.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pushnotificationios",
              "id": "version-0.61/pushnotificationios",
              "isDocsHomePage": false,
              "title": "🚧 PushNotificationIOS",
              "description": "Deprecated. Use @react-native-community/push-notification-ios instead.",
              "source": "@site/versioned_docs/version-0.61/pushnotificationios.md",
              "slug": "/pushnotificationios",
              "permalink": "/docs/0.61/pushnotificationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/pushnotificationios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "PixelRatio",
                "permalink": "/docs/0.61/pixelratio"
              },
              "next": {
                "title": "Settings",
                "permalink": "/docs/0.61/settings"
              }
            },
            {
              "unversionedId": "ram-bundles-inline-requires",
              "id": "version-0.61/ram-bundles-inline-requires",
              "isDocsHomePage": false,
              "title": "RAM Bundles and Inline Requires",
              "description": "If you have a large app you may want to consider the Random Access Modules (RAM) bundle format, and using inline requires. This is useful for apps that have a large number of screens which may not ever be opened during a typical usage of the app. Generally it is useful to apps that have large amounts of code that are not needed for a while after startup. For instance the app includes complicated profile screens or lesser used features, but most sessions only involve visiting the main screen of the app for updates. We can optimize the loading of the bundle by using the RAM format and requiring those features and screens inline (when they are actually used).",
              "source": "@site/versioned_docs/version-0.61/ram-bundles-inline-requires.md",
              "slug": "/ram-bundles-inline-requires",
              "permalink": "/docs/0.61/ram-bundles-inline-requires",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/ram-bundles-inline-requires.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "react-node",
              "id": "version-0.61/react-node",
              "isDocsHomePage": false,
              "title": "React Node Object Type",
              "description": "A React Node is one of the following types:",
              "source": "@site/versioned_docs/version-0.61/react-node.md",
              "slug": "/react-node",
              "permalink": "/docs/0.61/react-node",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/react-node.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "refreshcontrol",
              "id": "version-0.61/refreshcontrol",
              "isDocsHomePage": false,
              "title": "RefreshControl",
              "description": "This component is used inside a ScrollView or ListView to add pull to refresh functionality. When the ScrollView is at scrollY: 0, swiping down triggers an onRefresh event.",
              "source": "@site/versioned_docs/version-0.61/refreshcontrol.md",
              "slug": "/refreshcontrol",
              "permalink": "/docs/0.61/refreshcontrol",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/refreshcontrol.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 ProgressViewIOS",
                "permalink": "/docs/0.61/progressviewios"
              },
              "next": {
                "title": "SafeAreaView",
                "permalink": "/docs/0.61/safeareaview"
              }
            },
            {
              "unversionedId": "removing-default-permissions",
              "id": "version-0.61/removing-default-permissions",
              "isDocsHomePage": false,
              "title": "Removing Default Permissions",
              "description": "By default, some permissions are added to your Android APK.",
              "source": "@site/versioned_docs/version-0.61/removing-default-permissions.md",
              "slug": "/removing-default-permissions",
              "permalink": "/docs/0.61/removing-default-permissions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/removing-default-permissions.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/0.61/signed-apk-android"
              },
              "next": {
                "title": "Using Hermes",
                "permalink": "/docs/0.61/hermes"
              }
            },
            {
              "unversionedId": "running-on-device",
              "id": "version-0.61/running-on-device",
              "isDocsHomePage": false,
              "title": "Running On Device",
              "description": "It's always a good idea to test your app on an actual device before releasing it to your users. This document will guide you through the necessary steps to run your React Native app on a device and to get it ready for production.",
              "source": "@site/versioned_docs/version-0.61/running-on-device.md",
              "slug": "/running-on-device",
              "permalink": "/docs/0.61/running-on-device",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/running-on-device.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Building For TV Devices",
                "permalink": "/docs/0.61/building-for-tv"
              },
              "next": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/0.61/upgrading"
              }
            },
            {
              "unversionedId": "running-on-simulator-ios",
              "id": "version-0.61/running-on-simulator-ios",
              "isDocsHomePage": false,
              "title": "Running On Simulator",
              "description": "Starting the simulator",
              "source": "@site/versioned_docs/version-0.61/running-on-simulator-ios.md",
              "slug": "/running-on-simulator-ios",
              "permalink": "/docs/0.61/running-on-simulator-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/running-on-simulator-ios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Linking Libraries",
                "permalink": "/docs/0.61/linking-libraries-ios"
              },
              "next": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/0.61/communication-ios"
              }
            },
            {
              "unversionedId": "safeareaview",
              "id": "version-0.61/safeareaview",
              "isDocsHomePage": false,
              "title": "SafeAreaView",
              "description": "The purpose of SafeAreaView is to render content within the safe area boundaries of a device. It is currently only applicable to iOS devices with iOS version 11 or later.",
              "source": "@site/versioned_docs/version-0.61/safeareaview.md",
              "slug": "/safeareaview",
              "permalink": "/docs/0.61/safeareaview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/safeareaview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "RefreshControl",
                "permalink": "/docs/0.61/refreshcontrol"
              },
              "next": {
                "title": "ScrollView",
                "permalink": "/docs/0.61/scrollview"
              }
            },
            {
              "unversionedId": "scrollview",
              "id": "version-0.61/scrollview",
              "isDocsHomePage": false,
              "title": "ScrollView",
              "description": "Component that wraps platform ScrollView while providing integration with touch locking \"responder\" system.",
              "source": "@site/versioned_docs/version-0.61/scrollview.md",
              "slug": "/scrollview",
              "permalink": "/docs/0.61/scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/scrollview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "SafeAreaView",
                "permalink": "/docs/0.61/safeareaview"
              },
              "next": {
                "title": "SectionList",
                "permalink": "/docs/0.61/sectionlist"
              }
            },
            {
              "unversionedId": "sectionlist",
              "id": "version-0.61/sectionlist",
              "isDocsHomePage": false,
              "title": "SectionList",
              "description": "A performant interface for rendering sectioned lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.61/sectionlist.md",
              "slug": "/sectionlist",
              "permalink": "/docs/0.61/sectionlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/sectionlist.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "ScrollView",
                "permalink": "/docs/0.61/scrollview"
              },
              "next": {
                "title": "🚧 SegmentedControlIOS",
                "permalink": "/docs/0.61/segmentedcontrolios"
              }
            },
            {
              "unversionedId": "segmentedcontrolios",
              "id": "version-0.61/segmentedcontrolios",
              "isDocsHomePage": false,
              "title": "🚧 SegmentedControlIOS",
              "description": "Deprecated. Use @react-native-community/segmented-control instead.",
              "source": "@site/versioned_docs/version-0.61/segmentedcontrolios.md",
              "slug": "/segmentedcontrolios",
              "permalink": "/docs/0.61/segmentedcontrolios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/segmentedcontrolios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "SectionList",
                "permalink": "/docs/0.61/sectionlist"
              },
              "next": {
                "title": "🚧 Slider",
                "permalink": "/docs/0.61/slider"
              }
            },
            {
              "unversionedId": "settings",
              "id": "version-0.61/settings",
              "isDocsHomePage": false,
              "title": "Settings",
              "description": "Settings serves as a wrapper for NSUserDefaults, a persistent key-value store available only on iOS.",
              "source": "@site/versioned_docs/version-0.61/settings.md",
              "slug": "/settings",
              "permalink": "/docs/0.61/settings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/settings.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 PushNotificationIOS",
                "permalink": "/docs/0.61/pushnotificationios"
              },
              "next": {
                "title": "Shadow Props",
                "permalink": "/docs/0.61/shadow-props"
              }
            },
            {
              "unversionedId": "shadow-props",
              "id": "version-0.61/shadow-props",
              "isDocsHomePage": false,
              "title": "Shadow Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/shadow-props.md",
              "slug": "/shadow-props",
              "permalink": "/docs/0.61/shadow-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/shadow-props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Settings",
                "permalink": "/docs/0.61/settings"
              },
              "next": {
                "title": "Share",
                "permalink": "/docs/0.61/share"
              }
            },
            {
              "unversionedId": "share",
              "id": "version-0.61/share",
              "isDocsHomePage": false,
              "title": "Share",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/share.md",
              "slug": "/share",
              "permalink": "/docs/0.61/share",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/share.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Shadow Props",
                "permalink": "/docs/0.61/shadow-props"
              },
              "next": {
                "title": "🚧 StatusBarIOS",
                "permalink": "/docs/0.61/statusbarios"
              }
            },
            {
              "unversionedId": "signed-apk-android",
              "id": "version-0.61/signed-apk-android",
              "isDocsHomePage": false,
              "title": "Publishing to Google Play Store",
              "description": "Android requires that all apps be digitally signed with a certificate before they can be installed. In order to distribute your Android application via Google Play store it needs to be signed with a release key that then needs to be used for all future updates. Since 2017 it is possible for Google Play to manage signing releases automatically thanks to App Signing by Google Play functionality. However, before your application binary is uploaded to Google Play it needs to be signed with an upload key. The Signing Your Applications page on Android Developers documentation describes the topic in detail. This guide covers the process in brief, as well as lists the steps required to package the JavaScript bundle.",
              "source": "@site/versioned_docs/version-0.61/signed-apk-android.md",
              "slug": "/signed-apk-android",
              "permalink": "/docs/0.61/signed-apk-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/signed-apk-android.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Headless JS",
                "permalink": "/docs/0.61/headless-js-android"
              },
              "next": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/0.61/removing-default-permissions"
              }
            },
            {
              "unversionedId": "slider",
              "id": "version-0.61/slider",
              "isDocsHomePage": false,
              "title": "🚧 Slider",
              "description": "Deprecated. Use react-native-community/react-native-slider instead.",
              "source": "@site/versioned_docs/version-0.61/slider.md",
              "slug": "/slider",
              "permalink": "/docs/0.61/slider",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/slider.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 SegmentedControlIOS",
                "permalink": "/docs/0.61/segmentedcontrolios"
              },
              "next": {
                "title": "StatusBar",
                "permalink": "/docs/0.61/statusbar"
              }
            },
            {
              "unversionedId": "snapshotviewios",
              "id": "version-0.61/snapshotviewios",
              "isDocsHomePage": false,
              "title": "SnapshotViewIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.61/snapshotviewios.md",
              "slug": "/snapshotviewios",
              "permalink": "/docs/0.61/snapshotviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/snapshotviewios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "state",
              "id": "version-0.61/state",
              "isDocsHomePage": false,
              "title": "State",
              "description": "There are two types of data that control a component: props and state. props are set by the parent and they are fixed throughout the lifetime of a component. For data that is going to change, we have to use state.",
              "source": "@site/versioned_docs/version-0.61/state.md",
              "slug": "/state",
              "permalink": "/docs/0.61/state",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/state.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Props",
                "permalink": "/docs/0.61/props"
              },
              "next": {
                "title": "Style",
                "permalink": "/docs/0.61/style"
              }
            },
            {
              "unversionedId": "statusbar",
              "id": "version-0.61/statusbar",
              "isDocsHomePage": false,
              "title": "StatusBar",
              "description": "Component to control the app status bar.",
              "source": "@site/versioned_docs/version-0.61/statusbar.md",
              "slug": "/statusbar",
              "permalink": "/docs/0.61/statusbar",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/statusbar.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 Slider",
                "permalink": "/docs/0.61/slider"
              },
              "next": {
                "title": "Switch",
                "permalink": "/docs/0.61/switch"
              }
            },
            {
              "unversionedId": "statusbarios",
              "id": "version-0.61/statusbarios",
              "isDocsHomePage": false,
              "title": "🚧 StatusBarIOS",
              "description": "Deprecated. Use StatusBar for mutating the status bar.",
              "source": "@site/versioned_docs/version-0.61/statusbarios.md",
              "slug": "/statusbarios",
              "permalink": "/docs/0.61/statusbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/statusbarios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Share",
                "permalink": "/docs/0.61/share"
              },
              "next": {
                "title": "StyleSheet",
                "permalink": "/docs/0.61/stylesheet"
              }
            },
            {
              "unversionedId": "style",
              "id": "version-0.61/style",
              "isDocsHomePage": false,
              "title": "Style",
              "description": "With React Native, you style your application using JavaScript. All of the core components accept a prop named style. The style names and values usually match how CSS works on the web, except names are written using camel casing, e.g. backgroundColor rather than background-color.",
              "source": "@site/versioned_docs/version-0.61/style.md",
              "slug": "/style",
              "permalink": "/docs/0.61/style",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/style.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "State",
                "permalink": "/docs/0.61/state"
              },
              "next": {
                "title": "Height and Width",
                "permalink": "/docs/0.61/height-and-width"
              }
            },
            {
              "unversionedId": "stylesheet",
              "id": "version-0.61/stylesheet",
              "isDocsHomePage": false,
              "title": "StyleSheet",
              "description": "A StyleSheet is an abstraction similar to CSS StyleSheets",
              "source": "@site/versioned_docs/version-0.61/stylesheet.md",
              "slug": "/stylesheet",
              "permalink": "/docs/0.61/stylesheet",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/stylesheet.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 StatusBarIOS",
                "permalink": "/docs/0.61/statusbarios"
              },
              "next": {
                "title": "Systrace",
                "permalink": "/docs/0.61/systrace"
              }
            },
            {
              "unversionedId": "switch",
              "id": "version-0.61/switch",
              "isDocsHomePage": false,
              "title": "Switch",
              "description": "Renders a boolean input.",
              "source": "@site/versioned_docs/version-0.61/switch.md",
              "slug": "/switch",
              "permalink": "/docs/0.61/switch",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/switch.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "StatusBar",
                "permalink": "/docs/0.61/statusbar"
              },
              "next": {
                "title": "TabBarIOS",
                "permalink": "/docs/0.61/tabbarios"
              }
            },
            {
              "unversionedId": "symbolication",
              "id": "version-0.61/symbolication",
              "isDocsHomePage": false,
              "title": "Symbolicating a stack trace",
              "description": "If a React Native app throws an unhandled exception in a release build, the output may be obfuscated and hard to read:",
              "source": "@site/versioned_docs/version-0.61/symbolication.md",
              "slug": "/symbolication",
              "permalink": "/docs/0.61/symbolication",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/symbolication.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "systrace",
              "id": "version-0.61/systrace",
              "isDocsHomePage": false,
              "title": "Systrace",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/systrace.md",
              "slug": "/systrace",
              "permalink": "/docs/0.61/systrace",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/systrace.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "StyleSheet",
                "permalink": "/docs/0.61/stylesheet"
              },
              "next": {
                "title": "Text Style Props",
                "permalink": "/docs/0.61/text-style-props"
              }
            },
            {
              "unversionedId": "tabbarios",
              "id": "version-0.61/tabbarios",
              "isDocsHomePage": false,
              "title": "TabBarIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.61/tabbarios.md",
              "slug": "/tabbarios",
              "permalink": "/docs/0.61/tabbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/tabbarios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Switch",
                "permalink": "/docs/0.61/switch"
              },
              "next": {
                "title": "TabBarIOS.Item",
                "permalink": "/docs/0.61/tabbarios-item"
              }
            },
            {
              "unversionedId": "tabbarios-item",
              "id": "version-0.61/tabbarios-item",
              "isDocsHomePage": false,
              "title": "TabBarIOS.Item",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.61/tabbarios-item.md",
              "slug": "/tabbarios-item",
              "permalink": "/docs/0.61/tabbarios-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/tabbarios-item.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TabBarIOS",
                "permalink": "/docs/0.61/tabbarios"
              },
              "next": {
                "title": "Text",
                "permalink": "/docs/0.61/text"
              }
            },
            {
              "unversionedId": "testing-overview",
              "id": "version-0.61/testing-overview",
              "isDocsHomePage": false,
              "title": "Testing",
              "description": "This guide introduces React Native developers to the key concepts behind testing, how to write good tests, and what kinds of tests you can incorporate into your workflow.",
              "source": "@site/versioned_docs/version-0.61/testing-overview.md",
              "slug": "/testing-overview",
              "permalink": "/docs/0.61/testing-overview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/testing-overview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "text",
              "id": "version-0.61/text",
              "isDocsHomePage": false,
              "title": "Text",
              "description": "A React component for displaying text.",
              "source": "@site/versioned_docs/version-0.61/text.md",
              "slug": "/text",
              "permalink": "/docs/0.61/text",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/text.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TabBarIOS.Item",
                "permalink": "/docs/0.61/tabbarios-item"
              },
              "next": {
                "title": "TextInput",
                "permalink": "/docs/0.61/textinput"
              }
            },
            {
              "unversionedId": "text-style-props",
              "id": "version-0.61/text-style-props",
              "isDocsHomePage": false,
              "title": "Text Style Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/text-style-props.md",
              "slug": "/text-style-props",
              "permalink": "/docs/0.61/text-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/text-style-props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Systrace",
                "permalink": "/docs/0.61/systrace"
              },
              "next": {
                "title": "🚧 TimePickerAndroid",
                "permalink": "/docs/0.61/timepickerandroid"
              }
            },
            {
              "unversionedId": "textinput",
              "id": "version-0.61/textinput",
              "isDocsHomePage": false,
              "title": "TextInput",
              "description": "A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.",
              "source": "@site/versioned_docs/version-0.61/textinput.md",
              "slug": "/textinput",
              "permalink": "/docs/0.61/textinput",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/textinput.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "Text",
                "permalink": "/docs/0.61/text"
              },
              "next": {
                "title": "ToolbarAndroid",
                "permalink": "/docs/0.61/toolbarandroid"
              }
            },
            {
              "unversionedId": "timepickerandroid",
              "id": "version-0.61/timepickerandroid",
              "isDocsHomePage": false,
              "title": "🚧 TimePickerAndroid",
              "description": "Deprecated. Use @react-native-community/datetimepicker instead.",
              "source": "@site/versioned_docs/version-0.61/timepickerandroid.md",
              "slug": "/timepickerandroid",
              "permalink": "/docs/0.61/timepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/timepickerandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Text Style Props",
                "permalink": "/docs/0.61/text-style-props"
              },
              "next": {
                "title": "ToastAndroid",
                "permalink": "/docs/0.61/toastandroid"
              }
            },
            {
              "unversionedId": "timers",
              "id": "version-0.61/timers",
              "isDocsHomePage": false,
              "title": "Timers",
              "description": "Timers are an important part of an application and React Native implements the browser timers.",
              "source": "@site/versioned_docs/version-0.61/timers.md",
              "slug": "/timers",
              "permalink": "/docs/0.61/timers",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/timers.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/0.61/optimizing-flatlist-configuration"
              },
              "next": {
                "title": "Debugging",
                "permalink": "/docs/0.61/debugging"
              }
            },
            {
              "unversionedId": "toastandroid",
              "id": "version-0.61/toastandroid",
              "isDocsHomePage": false,
              "title": "ToastAndroid",
              "description": "This exposes the native ToastAndroid module as a JS module. This has a function 'show' which takes the following parameters:",
              "source": "@site/versioned_docs/version-0.61/toastandroid.md",
              "slug": "/toastandroid",
              "permalink": "/docs/0.61/toastandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/toastandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "🚧 TimePickerAndroid",
                "permalink": "/docs/0.61/timepickerandroid"
              },
              "next": {
                "title": "Transforms",
                "permalink": "/docs/0.61/transforms"
              }
            },
            {
              "unversionedId": "toolbarandroid",
              "id": "version-0.61/toolbarandroid",
              "isDocsHomePage": false,
              "title": "ToolbarAndroid",
              "description": "NOTE: Toolbar Android has been deprecated and removed from the package since React Native v0.61.0. Use @react-native-community/toolbar-android instead.",
              "source": "@site/versioned_docs/version-0.61/toolbarandroid.md",
              "slug": "/toolbarandroid",
              "permalink": "/docs/0.61/toolbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/toolbarandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TextInput",
                "permalink": "/docs/0.61/textinput"
              },
              "next": {
                "title": "TouchableHighlight",
                "permalink": "/docs/0.61/touchablehighlight"
              }
            },
            {
              "unversionedId": "touchablehighlight",
              "id": "version-0.61/touchablehighlight",
              "isDocsHomePage": false,
              "title": "TouchableHighlight",
              "description": "A wrapper for making views respond properly to touches. On press down, the opacity of the wrapped view is decreased, which allows the underlay color to show through, darkening or tinting the view.",
              "source": "@site/versioned_docs/version-0.61/touchablehighlight.md",
              "slug": "/touchablehighlight",
              "permalink": "/docs/0.61/touchablehighlight",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/touchablehighlight.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "ToolbarAndroid",
                "permalink": "/docs/0.61/toolbarandroid"
              },
              "next": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/0.61/touchablenativefeedback"
              }
            },
            {
              "unversionedId": "touchablenativefeedback",
              "id": "version-0.61/touchablenativefeedback",
              "isDocsHomePage": false,
              "title": "TouchableNativeFeedback",
              "description": "A wrapper for making views respond properly to touches (Android only). On Android this component uses native state drawable to display touch feedback.",
              "source": "@site/versioned_docs/version-0.61/touchablenativefeedback.md",
              "slug": "/touchablenativefeedback",
              "permalink": "/docs/0.61/touchablenativefeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/touchablenativefeedback.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TouchableHighlight",
                "permalink": "/docs/0.61/touchablehighlight"
              },
              "next": {
                "title": "TouchableOpacity",
                "permalink": "/docs/0.61/touchableopacity"
              }
            },
            {
              "unversionedId": "touchableopacity",
              "id": "version-0.61/touchableopacity",
              "isDocsHomePage": false,
              "title": "TouchableOpacity",
              "description": "A wrapper for making views respond properly to touches. On press down, the opacity of the wrapped view is decreased, dimming it.",
              "source": "@site/versioned_docs/version-0.61/touchableopacity.md",
              "slug": "/touchableopacity",
              "permalink": "/docs/0.61/touchableopacity",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/touchableopacity.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/0.61/touchablenativefeedback"
              },
              "next": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/0.61/touchablewithoutfeedback"
              }
            },
            {
              "unversionedId": "touchablewithoutfeedback",
              "id": "version-0.61/touchablewithoutfeedback",
              "isDocsHomePage": false,
              "title": "TouchableWithoutFeedback",
              "description": "Do not use unless you have a very good reason. All elements that respond to press should have a visual feedback when touched.",
              "source": "@site/versioned_docs/version-0.61/touchablewithoutfeedback.md",
              "slug": "/touchablewithoutfeedback",
              "permalink": "/docs/0.61/touchablewithoutfeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/touchablewithoutfeedback.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TouchableOpacity",
                "permalink": "/docs/0.61/touchableopacity"
              },
              "next": {
                "title": "View",
                "permalink": "/docs/0.61/view"
              }
            },
            {
              "unversionedId": "transforms",
              "id": "version-0.61/transforms",
              "isDocsHomePage": false,
              "title": "Transforms",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/transforms.md",
              "slug": "/transforms",
              "permalink": "/docs/0.61/transforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/transforms.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "ToastAndroid",
                "permalink": "/docs/0.61/toastandroid"
              },
              "next": {
                "title": "useWindowDimensions",
                "permalink": "/docs/0.61/usewindowdimensions"
              }
            },
            {
              "unversionedId": "troubleshooting",
              "id": "version-0.61/troubleshooting",
              "isDocsHomePage": false,
              "title": "Troubleshooting",
              "description": "These are some common issues you may run into while setting up React Native. If you encounter something that is not listed here, try searching for the issue in GitHub.",
              "source": "@site/versioned_docs/version-0.61/troubleshooting.md",
              "slug": "/troubleshooting",
              "permalink": "/docs/0.61/troubleshooting",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/troubleshooting.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/0.61/upgrading"
              },
              "next": {
                "title": "Native Modules Setup",
                "permalink": "/docs/0.61/native-modules-setup"
              }
            },
            {
              "unversionedId": "tutorial",
              "id": "version-0.61/tutorial",
              "isDocsHomePage": false,
              "title": "Learn the Basics",
              "description": "React Native is like React, but it uses native components instead of web components as building blocks. So to understand the basic structure of a React Native app, you need to understand some of the basic React concepts, like JSX, components, state, and props. If you already know React, you still need to learn some React-Native-specific stuff, like the native components. This tutorial is aimed at all audiences, whether you have React experience or not.",
              "source": "@site/versioned_docs/version-0.61/tutorial.md",
              "slug": "/tutorial",
              "permalink": "/docs/0.61/tutorial",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/tutorial.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/0.61/getting-started"
              },
              "next": {
                "title": "Props",
                "permalink": "/docs/0.61/props"
              }
            },
            {
              "unversionedId": "typescript",
              "id": "version-0.61/typescript",
              "isDocsHomePage": false,
              "title": "Using TypeScript with React Native",
              "description": "TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",
              "source": "@site/versioned_docs/version-0.61/typescript.md",
              "slug": "/typescript",
              "permalink": "/docs/0.61/typescript",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/typescript.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "JavaScript Environment",
                "permalink": "/docs/0.61/javascript-environment"
              },
              "next": {
                "title": "Direct Manipulation",
                "permalink": "/docs/0.61/direct-manipulation"
              }
            },
            {
              "unversionedId": "upgrading",
              "id": "version-0.61/upgrading",
              "isDocsHomePage": false,
              "title": "Upgrading to new React Native versions",
              "description": "Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Upgrading requires a small amount of effort, but we try to make it straightforward for you.",
              "source": "@site/versioned_docs/version-0.61/upgrading.md",
              "slug": "/upgrading",
              "permalink": "/docs/0.61/upgrading",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/upgrading.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Running On Device",
                "permalink": "/docs/0.61/running-on-device"
              },
              "next": {
                "title": "Troubleshooting",
                "permalink": "/docs/0.61/troubleshooting"
              }
            },
            {
              "unversionedId": "usecolorscheme",
              "id": "version-0.61/usecolorscheme",
              "isDocsHomePage": false,
              "title": "useColorScheme",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.61/usecolorscheme.md",
              "slug": "/usecolorscheme",
              "permalink": "/docs/0.61/usecolorscheme",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/usecolorscheme.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "usewindowdimensions",
              "id": "version-0.61/usewindowdimensions",
              "isDocsHomePage": false,
              "title": "useWindowDimensions",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.61/usewindowdimensions.md",
              "slug": "/usewindowdimensions",
              "permalink": "/docs/0.61/usewindowdimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/usewindowdimensions.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Transforms",
                "permalink": "/docs/0.61/transforms"
              },
              "next": {
                "title": "Vibration",
                "permalink": "/docs/0.61/vibration"
              }
            },
            {
              "unversionedId": "using-a-listview",
              "id": "version-0.61/using-a-listview",
              "isDocsHomePage": false,
              "title": "Using List Views",
              "description": "React Native provides a suite of components for presenting lists of data. Generally, you'll want to use either FlatList or SectionList.",
              "source": "@site/versioned_docs/version-0.61/using-a-listview.md",
              "slug": "/using-a-listview",
              "permalink": "/docs/0.61/using-a-listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/using-a-listview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Using a ScrollView",
                "permalink": "/docs/0.61/using-a-scrollview"
              },
              "next": {
                "title": "Networking",
                "permalink": "/docs/0.61/network"
              }
            },
            {
              "unversionedId": "using-a-scrollview",
              "id": "version-0.61/using-a-scrollview",
              "isDocsHomePage": false,
              "title": "Using a ScrollView",
              "description": "The ScrollView is a generic scrolling container that can contain multiple components and views. The scrollable items need not be homogeneous, and you can scroll both vertically and horizontally (by setting the horizontal property).",
              "source": "@site/versioned_docs/version-0.61/using-a-scrollview.md",
              "slug": "/using-a-scrollview",
              "permalink": "/docs/0.61/using-a-scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/using-a-scrollview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/docs",
              "previous": {
                "title": "Handling Touches",
                "permalink": "/docs/0.61/handling-touches"
              },
              "next": {
                "title": "Using List Views",
                "permalink": "/docs/0.61/using-a-listview"
              }
            },
            {
              "unversionedId": "vibration",
              "id": "version-0.61/vibration",
              "isDocsHomePage": false,
              "title": "Vibration",
              "description": "The Vibration API is exposed at Vibration.vibrate(). The vibration is synchronous so this method will return immediately.",
              "source": "@site/versioned_docs/version-0.61/vibration.md",
              "slug": "/vibration",
              "permalink": "/docs/0.61/vibration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/vibration.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "useWindowDimensions",
                "permalink": "/docs/0.61/usewindowdimensions"
              },
              "next": {
                "title": "View Style Props",
                "permalink": "/docs/0.61/view-style-props"
              }
            },
            {
              "unversionedId": "vibrationios",
              "id": "version-0.61/vibrationios",
              "isDocsHomePage": false,
              "title": "VibrationIOS",
              "description": "NOTE: VibrationIOS is being deprecated. Use Vibration instead.",
              "source": "@site/versioned_docs/version-0.61/vibrationios.md",
              "slug": "/vibrationios",
              "permalink": "/docs/0.61/vibrationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/vibrationios.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "view",
              "id": "version-0.61/view",
              "isDocsHomePage": false,
              "title": "View",
              "description": "The most fundamental component for building a UI, View is a container that supports layout with flexbox, style, some touch handling, and accessibility controls. View maps directly to the native view equivalent on whatever platform React Native is running on, whether that is a UIView, `, android.view`, etc.",
              "source": "@site/versioned_docs/version-0.61/view.md",
              "slug": "/view",
              "permalink": "/docs/0.61/view",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/view.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/0.61/touchablewithoutfeedback"
              },
              "next": {
                "title": "🚧 ViewPagerAndroid",
                "permalink": "/docs/0.61/viewpagerandroid"
              }
            },
            {
              "unversionedId": "view-style-props",
              "id": "version-0.61/view-style-props",
              "isDocsHomePage": false,
              "title": "View Style Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.61/view-style-props.md",
              "slug": "/view-style-props",
              "permalink": "/docs/0.61/view-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/view-style-props.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/api",
              "previous": {
                "title": "Vibration",
                "permalink": "/docs/0.61/vibration"
              }
            },
            {
              "unversionedId": "viewpagerandroid",
              "id": "version-0.61/viewpagerandroid",
              "isDocsHomePage": false,
              "title": "🚧 ViewPagerAndroid",
              "description": "Deprecated. Use @react-native-community/viewpager instead.",
              "source": "@site/versioned_docs/version-0.61/viewpagerandroid.md",
              "slug": "/viewpagerandroid",
              "permalink": "/docs/0.61/viewpagerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/viewpagerandroid.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "View",
                "permalink": "/docs/0.61/view"
              },
              "next": {
                "title": "VirtualizedList",
                "permalink": "/docs/0.61/virtualizedlist"
              }
            },
            {
              "unversionedId": "virtualizedlist",
              "id": "version-0.61/virtualizedlist",
              "isDocsHomePage": false,
              "title": "VirtualizedList",
              "description": "Base implementation for the more convenient ` and  components, which are also better documented. In general, this should only really be used if you need more flexibility than FlatList` provides, e.g. for use with immutable data instead of plain arrays.",
              "source": "@site/versioned_docs/version-0.61/virtualizedlist.md",
              "slug": "/virtualizedlist",
              "permalink": "/docs/0.61/virtualizedlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/virtualizedlist.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.61/components",
              "previous": {
                "title": "🚧 ViewPagerAndroid",
                "permalink": "/docs/0.61/viewpagerandroid"
              }
            },
            {
              "unversionedId": "webview",
              "id": "version-0.61/webview",
              "isDocsHomePage": false,
              "title": "🚧 WebView",
              "description": "Deprecated. Use react-native-community/react-native-webview instead.",
              "source": "@site/versioned_docs/version-0.61/webview.md",
              "slug": "/webview",
              "permalink": "/docs/0.61/webview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.61/webview.md",
              "version": "0.61",
              "lastUpdatedAt": 1539502055
            }
          ]
        },
        {
          "versionName": "0.60",
          "versionLabel": "0.60",
          "versionPath": "/docs/0.60",
          "isLast": false,
          "sidebarFilePath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_sidebars/version-0.60-sidebars.json",
          "docsDirPath": "/Users/prxyanka21/Documents/GitHub/Ode-to-Code/website/versioned_docs/version-0.60",
          "mainDocId": "getting-started",
          "sidebars": {
            "version-0.60/docs": [
              {
                "collapsed": true,
                "type": "category",
                "label": "The Basics",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.60/getting-started"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/tutorial"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/style"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/height-and-width"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/flexbox"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/handling-text-input"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/handling-touches"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/using-a-scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/using-a-listview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/network"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/more-resources"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.60/platform-specific-code"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/navigation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/images"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/animations"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/accessibility"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/improvingux"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/optimizing-flatlist-configuration"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/timers"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/debugging"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/performance"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/gesture-responder-system"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/javascript-environment"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/typescript"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/direct-manipulation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/colors"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/integration-with-existing-apps"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/building-for-tv"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/running-on-device"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/upgrading"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/troubleshooting"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/native-modules-setup"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/out-of-tree-platforms"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (iOS)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.60/native-modules-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/native-components-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/linking-libraries-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/running-on-simulator-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/communication-ios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/app-extensions"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Guides (Android)",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.60/native-modules-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/native-components-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/headless-js-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/signed-apk-android"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/removing-default-permissions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/hermes"
                  }
                ]
              }
            ],
            "version-0.60/components": [
              {
                "collapsed": true,
                "type": "category",
                "label": "Components",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.60/components-and-apis"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/activityindicator"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/button"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/datepickerios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/drawerlayoutandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/flatlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/image"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/imagebackground"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/inputaccessoryview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/keyboardavoidingview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/maskedviewios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/modal"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/picker"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/pickerios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/progressbarandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/progressviewios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/refreshcontrol"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/safeareaview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/scrollview"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/sectionlist"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/segmentedcontrolios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/slider"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/statusbar"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/switch"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/tabbarios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/tabbarios-item"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/text"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/textinput"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/toolbarandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/touchablehighlight"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/touchablenativefeedback"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/touchableopacity"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/touchablewithoutfeedback"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/view"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/viewpagerandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/virtualizedlist"
                  }
                ]
              }
            ],
            "version-0.60/api": [
              {
                "collapsed": true,
                "type": "category",
                "label": "APIs",
                "items": [
                  {
                    "type": "doc",
                    "id": "version-0.60/accessibilityinfo"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/actionsheetios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/alert"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/alertios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/animated"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/appregistry"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/appstate"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/asyncstorage"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/backhandler"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/clipboard"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/datepickerandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/dimensions"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/easing"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/imageeditor"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/imagepickerios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/image-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/interactionmanager"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/keyboard"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/layout-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/layoutanimation"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/linking"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/panresponder"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/permissionsandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/pixelratio"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/pushnotificationios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/settings"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/shadow-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/share"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/statusbarios"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/stylesheet"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/systrace"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/text-style-props"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/timepickerandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/toastandroid"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/transforms"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/vibration"
                  },
                  {
                    "type": "doc",
                    "id": "version-0.60/view-style-props"
                  }
                ]
              }
            ]
          },
          "permalinkToSidebar": {
            "/docs/0.60/accessibility": "version-0.60/docs",
            "/docs/0.60/accessibilityinfo": "version-0.60/api",
            "/docs/0.60/actionsheetios": "version-0.60/api",
            "/docs/0.60/activityindicator": "version-0.60/components",
            "/docs/0.60/alert": "version-0.60/api",
            "/docs/0.60/alertios": "version-0.60/api",
            "/docs/0.60/animated": "version-0.60/api",
            "/docs/0.60/animations": "version-0.60/docs",
            "/docs/0.60/app-extensions": "version-0.60/docs",
            "/docs/0.60/appregistry": "version-0.60/api",
            "/docs/0.60/appstate": "version-0.60/api",
            "/docs/0.60/asyncstorage": "version-0.60/api",
            "/docs/0.60/backhandler": "version-0.60/api",
            "/docs/0.60/building-for-tv": "version-0.60/docs",
            "/docs/0.60/button": "version-0.60/components",
            "/docs/0.60/clipboard": "version-0.60/api",
            "/docs/0.60/colors": "version-0.60/docs",
            "/docs/0.60/communication-ios": "version-0.60/docs",
            "/docs/0.60/components-and-apis": "version-0.60/components",
            "/docs/0.60/datepickerandroid": "version-0.60/api",
            "/docs/0.60/datepickerios": "version-0.60/components",
            "/docs/0.60/debugging": "version-0.60/docs",
            "/docs/0.60/dimensions": "version-0.60/api",
            "/docs/0.60/direct-manipulation": "version-0.60/docs",
            "/docs/0.60/drawerlayoutandroid": "version-0.60/components",
            "/docs/0.60/easing": "version-0.60/api",
            "/docs/0.60/flatlist": "version-0.60/components",
            "/docs/0.60/flexbox": "version-0.60/docs",
            "/docs/0.60/gesture-responder-system": "version-0.60/docs",
            "/docs/0.60/getting-started": "version-0.60/docs",
            "/docs/0.60/handling-text-input": "version-0.60/docs",
            "/docs/0.60/handling-touches": "version-0.60/docs",
            "/docs/0.60/headless-js-android": "version-0.60/docs",
            "/docs/0.60/height-and-width": "version-0.60/docs",
            "/docs/0.60/hermes": "version-0.60/docs",
            "/docs/0.60/image": "version-0.60/components",
            "/docs/0.60/image-style-props": "version-0.60/api",
            "/docs/0.60/imagebackground": "version-0.60/components",
            "/docs/0.60/imageeditor": "version-0.60/api",
            "/docs/0.60/imagepickerios": "version-0.60/api",
            "/docs/0.60/images": "version-0.60/docs",
            "/docs/0.60/improvingux": "version-0.60/docs",
            "/docs/0.60/inputaccessoryview": "version-0.60/components",
            "/docs/0.60/integration-with-existing-apps": "version-0.60/docs",
            "/docs/0.60/interactionmanager": "version-0.60/api",
            "/docs/0.60/javascript-environment": "version-0.60/docs",
            "/docs/0.60/keyboard": "version-0.60/api",
            "/docs/0.60/keyboardavoidingview": "version-0.60/components",
            "/docs/0.60/layout-props": "version-0.60/api",
            "/docs/0.60/layoutanimation": "version-0.60/api",
            "/docs/0.60/linking": "version-0.60/api",
            "/docs/0.60/linking-libraries-ios": "version-0.60/docs",
            "/docs/0.60/maskedviewios": "version-0.60/components",
            "/docs/0.60/modal": "version-0.60/components",
            "/docs/0.60/more-resources": "version-0.60/docs",
            "/docs/0.60/native-components-android": "version-0.60/docs",
            "/docs/0.60/native-components-ios": "version-0.60/docs",
            "/docs/0.60/native-modules-android": "version-0.60/docs",
            "/docs/0.60/native-modules-ios": "version-0.60/docs",
            "/docs/0.60/native-modules-setup": "version-0.60/docs",
            "/docs/0.60/navigation": "version-0.60/docs",
            "/docs/0.60/network": "version-0.60/docs",
            "/docs/0.60/optimizing-flatlist-configuration": "version-0.60/docs",
            "/docs/0.60/out-of-tree-platforms": "version-0.60/docs",
            "/docs/0.60/panresponder": "version-0.60/api",
            "/docs/0.60/performance": "version-0.60/docs",
            "/docs/0.60/permissionsandroid": "version-0.60/api",
            "/docs/0.60/picker": "version-0.60/components",
            "/docs/0.60/pickerios": "version-0.60/components",
            "/docs/0.60/pixelratio": "version-0.60/api",
            "/docs/0.60/platform-specific-code": "version-0.60/docs",
            "/docs/0.60/progressbarandroid": "version-0.60/components",
            "/docs/0.60/progressviewios": "version-0.60/components",
            "/docs/0.60/pushnotificationios": "version-0.60/api",
            "/docs/0.60/refreshcontrol": "version-0.60/components",
            "/docs/0.60/removing-default-permissions": "version-0.60/docs",
            "/docs/0.60/running-on-device": "version-0.60/docs",
            "/docs/0.60/running-on-simulator-ios": "version-0.60/docs",
            "/docs/0.60/safeareaview": "version-0.60/components",
            "/docs/0.60/scrollview": "version-0.60/components",
            "/docs/0.60/sectionlist": "version-0.60/components",
            "/docs/0.60/segmentedcontrolios": "version-0.60/components",
            "/docs/0.60/settings": "version-0.60/api",
            "/docs/0.60/shadow-props": "version-0.60/api",
            "/docs/0.60/share": "version-0.60/api",
            "/docs/0.60/signed-apk-android": "version-0.60/docs",
            "/docs/0.60/slider": "version-0.60/components",
            "/docs/0.60/statusbar": "version-0.60/components",
            "/docs/0.60/statusbarios": "version-0.60/api",
            "/docs/0.60/style": "version-0.60/docs",
            "/docs/0.60/stylesheet": "version-0.60/api",
            "/docs/0.60/switch": "version-0.60/components",
            "/docs/0.60/systrace": "version-0.60/api",
            "/docs/0.60/tabbarios": "version-0.60/components",
            "/docs/0.60/tabbarios-item": "version-0.60/components",
            "/docs/0.60/text": "version-0.60/components",
            "/docs/0.60/text-style-props": "version-0.60/api",
            "/docs/0.60/textinput": "version-0.60/components",
            "/docs/0.60/timepickerandroid": "version-0.60/api",
            "/docs/0.60/timers": "version-0.60/docs",
            "/docs/0.60/toastandroid": "version-0.60/api",
            "/docs/0.60/toolbarandroid": "version-0.60/components",
            "/docs/0.60/touchablehighlight": "version-0.60/components",
            "/docs/0.60/touchablenativefeedback": "version-0.60/components",
            "/docs/0.60/touchableopacity": "version-0.60/components",
            "/docs/0.60/touchablewithoutfeedback": "version-0.60/components",
            "/docs/0.60/transforms": "version-0.60/api",
            "/docs/0.60/troubleshooting": "version-0.60/docs",
            "/docs/0.60/tutorial": "version-0.60/docs",
            "/docs/0.60/typescript": "version-0.60/docs",
            "/docs/0.60/upgrading": "version-0.60/docs",
            "/docs/0.60/using-a-listview": "version-0.60/docs",
            "/docs/0.60/using-a-scrollview": "version-0.60/docs",
            "/docs/0.60/vibration": "version-0.60/api",
            "/docs/0.60/view": "version-0.60/components",
            "/docs/0.60/view-style-props": "version-0.60/api",
            "/docs/0.60/viewpagerandroid": "version-0.60/components",
            "/docs/0.60/virtualizedlist": "version-0.60/components"
          },
          "docs": [
            {
              "unversionedId": "_getting-started-linux-android",
              "id": "version-0.60/_getting-started-linux-android",
              "isDocsHomePage": false,
              "title": "_getting-started-linux-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.60/_getting-started-linux-android.md",
              "slug": "/_getting-started-linux-android",
              "permalink": "/docs/0.60/_getting-started-linux-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_getting-started-linux-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-android",
              "id": "version-0.60/_getting-started-macos-android",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.60/_getting-started-macos-android.md",
              "slug": "/_getting-started-macos-android",
              "permalink": "/docs/0.60/_getting-started-macos-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_getting-started-macos-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-macos-ios",
              "id": "version-0.60/_getting-started-macos-ios",
              "isDocsHomePage": false,
              "title": "_getting-started-macos-ios",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.60/_getting-started-macos-ios.md",
              "slug": "/_getting-started-macos-ios",
              "permalink": "/docs/0.60/_getting-started-macos-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_getting-started-macos-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_getting-started-windows-android",
              "id": "version-0.60/_getting-started-windows-android",
              "isDocsHomePage": false,
              "title": "_getting-started-windows-android",
              "description": "Installing dependencies",
              "source": "@site/versioned_docs/version-0.60/_getting-started-windows-android.md",
              "slug": "/_getting-started-windows-android",
              "permalink": "/docs/0.60/_getting-started-windows-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_getting-started-windows-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-java",
              "id": "version-0.60/_integration-with-exisiting-apps-java",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-java",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.60/_integration-with-exisiting-apps-java.md",
              "slug": "/_integration-with-exisiting-apps-java",
              "permalink": "/docs/0.60/_integration-with-exisiting-apps-java",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_integration-with-exisiting-apps-java.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-objc",
              "id": "version-0.60/_integration-with-exisiting-apps-objc",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-objc",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.60/_integration-with-exisiting-apps-objc.md",
              "slug": "/_integration-with-exisiting-apps-objc",
              "permalink": "/docs/0.60/_integration-with-exisiting-apps-objc",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_integration-with-exisiting-apps-objc.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "_integration-with-exisiting-apps-swift",
              "id": "version-0.60/_integration-with-exisiting-apps-swift",
              "isDocsHomePage": false,
              "title": "_integration-with-exisiting-apps-swift",
              "description": "Key Concepts",
              "source": "@site/versioned_docs/version-0.60/_integration-with-exisiting-apps-swift.md",
              "slug": "/_integration-with-exisiting-apps-swift",
              "permalink": "/docs/0.60/_integration-with-exisiting-apps-swift",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/_integration-with-exisiting-apps-swift.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "accessibility",
              "id": "version-0.60/accessibility",
              "isDocsHomePage": false,
              "title": "Accessibility",
              "description": "Both Android and iOS provide APIs for integrating apps with assistive technologies like the bundled screen readers VoiceOver (iOS) and TalkBack (Android). React Native has complimentary APIs that let your app accommodate all users.",
              "source": "@site/versioned_docs/version-0.60/accessibility.md",
              "slug": "/accessibility",
              "permalink": "/docs/0.60/accessibility",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/accessibility.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Animations",
                "permalink": "/docs/0.60/animations"
              },
              "next": {
                "title": "Improving User Experience",
                "permalink": "/docs/0.60/improvingux"
              }
            },
            {
              "unversionedId": "accessibilityinfo",
              "id": "version-0.60/accessibilityinfo",
              "isDocsHomePage": false,
              "title": "AccessibilityInfo",
              "description": "Sometimes it's useful to know whether or not the device has a screen reader that is currently active. The AccessibilityInfo API is designed for this purpose. You can use it to query the current state of the screen reader as well as to register to be notified when the state of the screen reader changes.",
              "source": "@site/versioned_docs/version-0.60/accessibilityinfo.md",
              "slug": "/accessibilityinfo",
              "permalink": "/docs/0.60/accessibilityinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/accessibilityinfo.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "next": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/0.60/actionsheetios"
              }
            },
            {
              "unversionedId": "actionsheetios",
              "id": "version-0.60/actionsheetios",
              "isDocsHomePage": false,
              "title": "ActionSheetIOS",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/actionsheetios.md",
              "slug": "/actionsheetios",
              "permalink": "/docs/0.60/actionsheetios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/actionsheetios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "AccessibilityInfo",
                "permalink": "/docs/0.60/accessibilityinfo"
              },
              "next": {
                "title": "Alert",
                "permalink": "/docs/0.60/alert"
              }
            },
            {
              "unversionedId": "activityindicator",
              "id": "version-0.60/activityindicator",
              "isDocsHomePage": false,
              "title": "ActivityIndicator",
              "description": "Displays a circular loading indicator.",
              "source": "@site/versioned_docs/version-0.60/activityindicator.md",
              "slug": "/activityindicator",
              "permalink": "/docs/0.60/activityindicator",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/activityindicator.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Components and APIs",
                "permalink": "/docs/0.60/components-and-apis"
              },
              "next": {
                "title": "Button",
                "permalink": "/docs/0.60/button"
              }
            },
            {
              "unversionedId": "alert",
              "id": "version-0.60/alert",
              "isDocsHomePage": false,
              "title": "Alert",
              "description": "Launches an alert dialog with the specified title and message.",
              "source": "@site/versioned_docs/version-0.60/alert.md",
              "slug": "/alert",
              "permalink": "/docs/0.60/alert",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/alert.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "ActionSheetIOS",
                "permalink": "/docs/0.60/actionsheetios"
              },
              "next": {
                "title": "AlertIOS",
                "permalink": "/docs/0.60/alertios"
              }
            },
            {
              "unversionedId": "alertios",
              "id": "version-0.60/alertios",
              "isDocsHomePage": false,
              "title": "AlertIOS",
              "description": "Deprecated. AlertIOS has been moved to Alert",
              "source": "@site/versioned_docs/version-0.60/alertios.md",
              "slug": "/alertios",
              "permalink": "/docs/0.60/alertios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/alertios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Alert",
                "permalink": "/docs/0.60/alert"
              },
              "next": {
                "title": "Animated",
                "permalink": "/docs/0.60/animated"
              }
            },
            {
              "unversionedId": "animated",
              "id": "version-0.60/animated",
              "isDocsHomePage": false,
              "title": "Animated",
              "description": "The Animated library is designed to make animations fluid, powerful, and painless to build and maintain. Animated focuses on declarative relationships between inputs and outputs, with configurable transforms in between, and start/stop methods to control time-based animation execution.",
              "source": "@site/versioned_docs/version-0.60/animated.md",
              "slug": "/animated",
              "permalink": "/docs/0.60/animated",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/animated.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "AlertIOS",
                "permalink": "/docs/0.60/alertios"
              },
              "next": {
                "title": "AppRegistry",
                "permalink": "/docs/0.60/appregistry"
              }
            },
            {
              "unversionedId": "animatedvalue",
              "id": "version-0.60/animatedvalue",
              "isDocsHomePage": false,
              "title": "AnimatedValue",
              "description": "Standard value for driving animations. One Animated.Value can drive multiple properties in a synchronized fashion, but can only be driven by one mechanism at a time. Using a new mechanism (e.g. starting a new animation, or calling setValue) will stop any previous ones.",
              "source": "@site/versioned_docs/version-0.60/animatedvalue.md",
              "slug": "/animatedvalue",
              "permalink": "/docs/0.60/animatedvalue",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/animatedvalue.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animatedvaluexy",
              "id": "version-0.60/animatedvaluexy",
              "isDocsHomePage": false,
              "title": "AnimatedValueXY",
              "description": "2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal Animated.Value, but multiplexed. Contains two regular Animated.Values under the hood.",
              "source": "@site/versioned_docs/version-0.60/animatedvaluexy.md",
              "slug": "/animatedvaluexy",
              "permalink": "/docs/0.60/animatedvaluexy",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/animatedvaluexy.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "animations",
              "id": "version-0.60/animations",
              "isDocsHomePage": false,
              "title": "Animations",
              "description": "Animations are very important to create a great user experience. Stationary objects must overcome inertia as they start moving. Objects in motion have momentum and rarely come to a stop immediately. Animations allow you to convey physically believable motion in your interface.",
              "source": "@site/versioned_docs/version-0.60/animations.md",
              "slug": "/animations",
              "permalink": "/docs/0.60/animations",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/animations.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Images",
                "permalink": "/docs/0.60/images"
              },
              "next": {
                "title": "Accessibility",
                "permalink": "/docs/0.60/accessibility"
              }
            },
            {
              "unversionedId": "app-extensions",
              "id": "version-0.60/app-extensions",
              "isDocsHomePage": false,
              "title": "App Extensions",
              "description": "App extensions let you provide custom functionality and content outside of your main app. There are different types of app extensions on iOS, and they are all covered in the App Extension Programming Guide. In this guide, we'll briefly cover how you may take advantage of app extensions on iOS.",
              "source": "@site/versioned_docs/version-0.60/app-extensions.md",
              "slug": "/app-extensions",
              "permalink": "/docs/0.60/app-extensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/app-extensions.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/0.60/communication-ios"
              },
              "next": {
                "title": "Native Modules",
                "permalink": "/docs/0.60/native-modules-android"
              }
            },
            {
              "unversionedId": "appearance",
              "id": "version-0.60/appearance",
              "isDocsHomePage": false,
              "title": "Appearance",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.60/appearance.md",
              "slug": "/appearance",
              "permalink": "/docs/0.60/appearance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/appearance.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "appregistry",
              "id": "version-0.60/appregistry",
              "isDocsHomePage": false,
              "title": "AppRegistry",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.60/appregistry.md",
              "slug": "/appregistry",
              "permalink": "/docs/0.60/appregistry",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/appregistry.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Animated",
                "permalink": "/docs/0.60/animated"
              },
              "next": {
                "title": "AppState",
                "permalink": "/docs/0.60/appstate"
              }
            },
            {
              "unversionedId": "appstate",
              "id": "version-0.60/appstate",
              "isDocsHomePage": false,
              "title": "AppState",
              "description": "AppState can tell you if the app is in the foreground or background, and notify you when the state changes.",
              "source": "@site/versioned_docs/version-0.60/appstate.md",
              "slug": "/appstate",
              "permalink": "/docs/0.60/appstate",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/appstate.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "AppRegistry",
                "permalink": "/docs/0.60/appregistry"
              },
              "next": {
                "title": "AsyncStorage",
                "permalink": "/docs/0.60/asyncstorage"
              }
            },
            {
              "unversionedId": "asyncstorage",
              "id": "version-0.60/asyncstorage",
              "isDocsHomePage": false,
              "title": "AsyncStorage",
              "description": "Deprecated. Use react-native-community/react-native-async-storage instead.",
              "source": "@site/versioned_docs/version-0.60/asyncstorage.md",
              "slug": "/asyncstorage",
              "permalink": "/docs/0.60/asyncstorage",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/asyncstorage.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "AppState",
                "permalink": "/docs/0.60/appstate"
              },
              "next": {
                "title": "BackHandler",
                "permalink": "/docs/0.60/backhandler"
              }
            },
            {
              "unversionedId": "backandroid",
              "id": "version-0.60/backandroid",
              "isDocsHomePage": false,
              "title": "BackAndroid",
              "description": "Deprecated. Use BackHandler instead.",
              "source": "@site/versioned_docs/version-0.60/backandroid.md",
              "slug": "/backandroid",
              "permalink": "/docs/0.60/backandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/backandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "backhandler",
              "id": "version-0.60/backhandler",
              "isDocsHomePage": false,
              "title": "BackHandler",
              "description": "Detect hardware button presses for back navigation.",
              "source": "@site/versioned_docs/version-0.60/backhandler.md",
              "slug": "/backhandler",
              "permalink": "/docs/0.60/backhandler",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/backhandler.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "AsyncStorage",
                "permalink": "/docs/0.60/asyncstorage"
              },
              "next": {
                "title": "Clipboard",
                "permalink": "/docs/0.60/clipboard"
              }
            },
            {
              "unversionedId": "building-for-tv",
              "id": "version-0.60/building-for-tv",
              "isDocsHomePage": false,
              "title": "Building For TV Devices",
              "description": "TV devices support has been implemented with the intention of making existing React Native applications work on Apple TV and Android TV, with few or no changes needed in the JavaScript code for the applications.",
              "source": "@site/versioned_docs/version-0.60/building-for-tv.md",
              "slug": "/building-for-tv",
              "permalink": "/docs/0.60/building-for-tv",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/building-for-tv.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/0.60/integration-with-existing-apps"
              },
              "next": {
                "title": "Running On Device",
                "permalink": "/docs/0.60/running-on-device"
              }
            },
            {
              "unversionedId": "button",
              "id": "version-0.60/button",
              "isDocsHomePage": false,
              "title": "Button",
              "description": "A basic button component that should render nicely on any platform. Supports a minimal level of customization.",
              "source": "@site/versioned_docs/version-0.60/button.md",
              "slug": "/button",
              "permalink": "/docs/0.60/button",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/button.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ActivityIndicator",
                "permalink": "/docs/0.60/activityindicator"
              },
              "next": {
                "title": "DatePickerIOS",
                "permalink": "/docs/0.60/datepickerios"
              }
            },
            {
              "unversionedId": "cameraroll",
              "id": "version-0.60/cameraroll",
              "isDocsHomePage": false,
              "title": "🚧 CameraRoll",
              "description": "Deprecated. Use @react-native-community/cameraroll instead.",
              "source": "@site/versioned_docs/version-0.60/cameraroll.md",
              "slug": "/cameraroll",
              "permalink": "/docs/0.60/cameraroll",
              "editUrl": "https://github.com/facebook/react-native-website/edit/master/website/versioned_docs/version-0.58/cameraroll.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "checkbox",
              "id": "version-0.60/checkbox",
              "isDocsHomePage": false,
              "title": "CheckBox",
              "description": "Renders a boolean input (Android only).",
              "source": "@site/versioned_docs/version-0.60/checkbox.md",
              "slug": "/checkbox",
              "permalink": "/docs/0.60/checkbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/checkbox.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "clipboard",
              "id": "version-0.60/clipboard",
              "isDocsHomePage": false,
              "title": "Clipboard",
              "description": "Clipboard gives you an interface for setting and getting content from Clipboard on both Android and iOS",
              "source": "@site/versioned_docs/version-0.60/clipboard.md",
              "slug": "/clipboard",
              "permalink": "/docs/0.60/clipboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/clipboard.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "BackHandler",
                "permalink": "/docs/0.60/backhandler"
              },
              "next": {
                "title": "DatePickerAndroid",
                "permalink": "/docs/0.60/datepickerandroid"
              }
            },
            {
              "unversionedId": "colors",
              "id": "version-0.60/colors",
              "isDocsHomePage": false,
              "title": "Color Reference",
              "description": "Components in React Native are styled using JavaScript. Color properties usually match how CSS works on the web.",
              "source": "@site/versioned_docs/version-0.60/colors.md",
              "slug": "/colors",
              "permalink": "/docs/0.60/colors",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/colors.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Direct Manipulation",
                "permalink": "/docs/0.60/direct-manipulation"
              },
              "next": {
                "title": "Integration with Existing Apps",
                "permalink": "/docs/0.60/integration-with-existing-apps"
              }
            },
            {
              "unversionedId": "communication-android",
              "id": "version-0.60/communication-android",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.60/communication-android.md",
              "slug": "/communication-android",
              "permalink": "/docs/0.60/communication-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/communication-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "communication-ios",
              "id": "version-0.60/communication-ios",
              "isDocsHomePage": false,
              "title": "Communication between native and React Native",
              "description": "In Integrating with Existing Apps guide and Native UI Components guide we learn how to embed React Native in a native component and vice versa. When we mix native and React Native components, we'll eventually find a need to communicate between these two worlds. Some ways to achieve that have been already mentioned in other guides. This article summarizes available techniques.",
              "source": "@site/versioned_docs/version-0.60/communication-ios.md",
              "slug": "/communication-ios",
              "permalink": "/docs/0.60/communication-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/communication-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Running On Simulator",
                "permalink": "/docs/0.60/running-on-simulator-ios"
              },
              "next": {
                "title": "App Extensions",
                "permalink": "/docs/0.60/app-extensions"
              }
            },
            {
              "unversionedId": "components-and-apis",
              "id": "version-0.60/components-and-apis",
              "isDocsHomePage": false,
              "title": "Components and APIs",
              "description": "React Native provides a number of Core Components. You will find a full list of components and APIs on the sidebar to the left. If you're not sure where to get started, take a look at the following categories:",
              "source": "@site/versioned_docs/version-0.60/components-and-apis.md",
              "slug": "/components-and-apis",
              "permalink": "/docs/0.60/components-and-apis",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/components-and-apis.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "next": {
                "title": "ActivityIndicator",
                "permalink": "/docs/0.60/activityindicator"
              }
            },
            {
              "unversionedId": "custom-webview-android",
              "id": "version-0.60/custom-webview-android",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.60/custom-webview-android.md",
              "slug": "/custom-webview-android",
              "permalink": "/docs/0.60/custom-webview-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/custom-webview-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "custom-webview-ios",
              "id": "version-0.60/custom-webview-ios",
              "isDocsHomePage": false,
              "title": "Custom WebView",
              "description": "While the built-in web view has a lot of features, it is not possible to handle every use-case in React Native. You can, however, extend the web view with native code without forking React Native or duplicating all the existing web view code.",
              "source": "@site/versioned_docs/version-0.60/custom-webview-ios.md",
              "slug": "/custom-webview-ios",
              "permalink": "/docs/0.60/custom-webview-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/custom-webview-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "datepickerandroid",
              "id": "version-0.60/datepickerandroid",
              "isDocsHomePage": false,
              "title": "DatePickerAndroid",
              "description": "Opens the standard Android date picker dialog.",
              "source": "@site/versioned_docs/version-0.60/datepickerandroid.md",
              "slug": "/datepickerandroid",
              "permalink": "/docs/0.60/datepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/datepickerandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Clipboard",
                "permalink": "/docs/0.60/clipboard"
              },
              "next": {
                "title": "Dimensions",
                "permalink": "/docs/0.60/dimensions"
              }
            },
            {
              "unversionedId": "datepickerios",
              "id": "version-0.60/datepickerios",
              "isDocsHomePage": false,
              "title": "DatePickerIOS",
              "description": "Use DatePickerIOS to render a date/time picker (selector) on iOS. This is a controlled component, so you must hook in to the onDateChange callback and update the date prop in order for the component to update, otherwise the user's change will be reverted immediately to reflect props.date as the source of truth.",
              "source": "@site/versioned_docs/version-0.60/datepickerios.md",
              "slug": "/datepickerios",
              "permalink": "/docs/0.60/datepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/datepickerios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Button",
                "permalink": "/docs/0.60/button"
              },
              "next": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/0.60/drawerlayoutandroid"
              }
            },
            {
              "unversionedId": "debugging",
              "id": "version-0.60/debugging",
              "isDocsHomePage": false,
              "title": "Debugging",
              "description": "Enabling Keyboard Shortcuts",
              "source": "@site/versioned_docs/version-0.60/debugging.md",
              "slug": "/debugging",
              "permalink": "/docs/0.60/debugging",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/debugging.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Timers",
                "permalink": "/docs/0.60/timers"
              },
              "next": {
                "title": "Performance",
                "permalink": "/docs/0.60/performance"
              }
            },
            {
              "unversionedId": "devsettings",
              "id": "version-0.60/devsettings",
              "isDocsHomePage": false,
              "title": "DevSettings",
              "description": "The DevSettings module exposes methods for customizing settings for developers in development.",
              "source": "@site/versioned_docs/version-0.60/devsettings.md",
              "slug": "/devsettings",
              "permalink": "/docs/0.60/devsettings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/devsettings.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "dimensions",
              "id": "version-0.60/dimensions",
              "isDocsHomePage": false,
              "title": "Dimensions",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.60/dimensions.md",
              "slug": "/dimensions",
              "permalink": "/docs/0.60/dimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/dimensions.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "DatePickerAndroid",
                "permalink": "/docs/0.60/datepickerandroid"
              },
              "next": {
                "title": "Easing",
                "permalink": "/docs/0.60/easing"
              }
            },
            {
              "unversionedId": "direct-manipulation",
              "id": "version-0.60/direct-manipulation",
              "isDocsHomePage": false,
              "title": "Direct Manipulation",
              "description": "It is sometimes necessary to make changes directly to a component without using state/props to trigger a re-render of the entire subtree. When using React in the browser for example, you sometimes need to directly modify a DOM node, and the same is true for views in mobile apps. setNativeProps is the React Native equivalent to setting properties directly on a DOM node.",
              "source": "@site/versioned_docs/version-0.60/direct-manipulation.md",
              "slug": "/direct-manipulation",
              "permalink": "/docs/0.60/direct-manipulation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/direct-manipulation.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Using TypeScript with React Native",
                "permalink": "/docs/0.60/typescript"
              },
              "next": {
                "title": "Color Reference",
                "permalink": "/docs/0.60/colors"
              }
            },
            {
              "unversionedId": "drawerlayoutandroid",
              "id": "version-0.60/drawerlayoutandroid",
              "isDocsHomePage": false,
              "title": "DrawerLayoutAndroid",
              "description": "React component that wraps the platform DrawerLayout (Android only). The Drawer (typically used for navigation) is rendered with renderNavigationView and direct children are the main view (where your content goes). The navigation view is initially not visible on the screen, but can be pulled in from the side of the window specified by the drawerPosition prop and its width can be set by the drawerWidth prop.",
              "source": "@site/versioned_docs/version-0.60/drawerlayoutandroid.md",
              "slug": "/drawerlayoutandroid",
              "permalink": "/docs/0.60/drawerlayoutandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/drawerlayoutandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "DatePickerIOS",
                "permalink": "/docs/0.60/datepickerios"
              },
              "next": {
                "title": "FlatList",
                "permalink": "/docs/0.60/flatlist"
              }
            },
            {
              "unversionedId": "easing",
              "id": "version-0.60/easing",
              "isDocsHomePage": false,
              "title": "Easing",
              "description": "The Easing module implements common easing functions. This module is used by Animated.timing() to convey physically believable motion in animations.",
              "source": "@site/versioned_docs/version-0.60/easing.md",
              "slug": "/easing",
              "permalink": "/docs/0.60/easing",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/easing.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Dimensions",
                "permalink": "/docs/0.60/dimensions"
              },
              "next": {
                "title": "ImageEditor",
                "permalink": "/docs/0.60/imageeditor"
              }
            },
            {
              "unversionedId": "enviroment-setup",
              "id": "version-0.60/enviroment-setup",
              "isDocsHomePage": false,
              "title": "Getting Started",
              "description": "This page will help you install and build your first React Native app.",
              "source": "@site/versioned_docs/version-0.60/getting-started.md",
              "slug": "/enviroment-setup",
              "permalink": "/docs/0.60/enviroment-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/getting-started.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "fast-refresh",
              "id": "version-0.60/fast-refresh",
              "isDocsHomePage": false,
              "title": "Fast Refresh",
              "description": "Fast Refresh is a React Native feature that allows you to get near-instant feedback for changes in your React components. Fast Refresh is enabled by default, and you can toggle \"Enable Fast Refresh\" in the React Native developer menu. With Fast Refresh enabled, most edits should be visible within a second or two.",
              "source": "@site/versioned_docs/version-0.60/fast-refresh.md",
              "slug": "/fast-refresh",
              "permalink": "/docs/0.60/fast-refresh",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/fast-refresh.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "flatlist",
              "id": "version-0.60/flatlist",
              "isDocsHomePage": false,
              "title": "FlatList",
              "description": "A performant interface for rendering basic, flat lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.60/flatlist.md",
              "slug": "/flatlist",
              "permalink": "/docs/0.60/flatlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/flatlist.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "DrawerLayoutAndroid",
                "permalink": "/docs/0.60/drawerlayoutandroid"
              },
              "next": {
                "title": "Image",
                "permalink": "/docs/0.60/image"
              }
            },
            {
              "unversionedId": "flexbox",
              "id": "version-0.60/flexbox",
              "isDocsHomePage": false,
              "title": "Layout with Flexbox",
              "description": "A component can specify the layout of its children using the flexbox algorithm. Flexbox is designed to provide a consistent layout on different screen sizes.",
              "source": "@site/versioned_docs/version-0.60/flexbox.md",
              "slug": "/flexbox",
              "permalink": "/docs/0.60/flexbox",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/flexbox.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Height and Width",
                "permalink": "/docs/0.60/height-and-width"
              },
              "next": {
                "title": "Handling Text Input",
                "permalink": "/docs/0.60/handling-text-input"
              }
            },
            {
              "unversionedId": "geolocation",
              "id": "version-0.60/geolocation",
              "isDocsHomePage": false,
              "title": "🚧 Geolocation",
              "description": "Deprecated. Use @react-native-community/geolocation instead.",
              "source": "@site/versioned_docs/version-0.60/geolocation.md",
              "slug": "/geolocation",
              "permalink": "/docs/0.60/geolocation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/geolocation.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "gesture-responder-system",
              "id": "version-0.60/gesture-responder-system",
              "isDocsHomePage": false,
              "title": "Gesture Responder System",
              "description": "The gesture responder system manages the lifecycle of gestures in your app. A touch can go through several phases as the app determines what the user's intention is. For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping. This can even change during the duration of a touch. There can also be multiple simultaneous touches.",
              "source": "@site/versioned_docs/version-0.60/gesture-responder-system.md",
              "slug": "/gesture-responder-system",
              "permalink": "/docs/0.60/gesture-responder-system",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/gesture-responder-system.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Performance",
                "permalink": "/docs/0.60/performance"
              },
              "next": {
                "title": "JavaScript Environment",
                "permalink": "/docs/0.60/javascript-environment"
              }
            },
            {
              "unversionedId": "getting-started",
              "id": "version-0.60/getting-started",
              "isDocsHomePage": false,
              "title": "Introduction",
              "description": "This helpful guide lays out the prerequisites for learning React Native, using these docs, and setting up your environment.",
              "source": "@site/versioned_docs/version-0.60/introduction.md",
              "slug": "/getting-started",
              "permalink": "/docs/0.60/getting-started",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/introduction.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "next": {
                "title": "Learn the Basics",
                "permalink": "/docs/0.60/tutorial"
              }
            },
            {
              "unversionedId": "handling-text-input",
              "id": "version-0.60/handling-text-input",
              "isDocsHomePage": false,
              "title": "Handling Text Input",
              "description": "TextInput is a Core Component that allows the user to enter text. It has an onChangeText prop that takes a function to be called every time the text changed, and an onSubmitEditing prop that takes a function to be called when the text is submitted.",
              "source": "@site/versioned_docs/version-0.60/handling-text-input.md",
              "slug": "/handling-text-input",
              "permalink": "/docs/0.60/handling-text-input",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/handling-text-input.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/0.60/flexbox"
              },
              "next": {
                "title": "Handling Touches",
                "permalink": "/docs/0.60/handling-touches"
              }
            },
            {
              "unversionedId": "handling-touches",
              "id": "version-0.60/handling-touches",
              "isDocsHomePage": false,
              "title": "Handling Touches",
              "description": "Users interact with mobile apps mainly through touch. They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. React Native provides components to handle all sorts of common gestures, as well as a comprehensive gesture responder system to allow for more advanced gesture recognition, but the one component you will most likely be interested in is the basic Button.",
              "source": "@site/versioned_docs/version-0.60/handling-touches.md",
              "slug": "/handling-touches",
              "permalink": "/docs/0.60/handling-touches",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/handling-touches.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Handling Text Input",
                "permalink": "/docs/0.60/handling-text-input"
              },
              "next": {
                "title": "Using a ScrollView",
                "permalink": "/docs/0.60/using-a-scrollview"
              }
            },
            {
              "unversionedId": "headless-js-android",
              "id": "version-0.60/headless-js-android",
              "isDocsHomePage": false,
              "title": "Headless JS",
              "description": "Headless JS is a way to run tasks in JavaScript while your app is in the background. It can be used, for example, to sync fresh data, handle push notifications, or play music.",
              "source": "@site/versioned_docs/version-0.60/headless-js-android.md",
              "slug": "/headless-js-android",
              "permalink": "/docs/0.60/headless-js-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/headless-js-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Native UI Components",
                "permalink": "/docs/0.60/native-components-android"
              },
              "next": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/0.60/signed-apk-android"
              }
            },
            {
              "unversionedId": "height-and-width",
              "id": "version-0.60/height-and-width",
              "isDocsHomePage": false,
              "title": "Height and Width",
              "description": "A component's height and width determine its size on the screen.",
              "source": "@site/versioned_docs/version-0.60/height-and-width.md",
              "slug": "/height-and-width",
              "permalink": "/docs/0.60/height-and-width",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/height-and-width.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Style",
                "permalink": "/docs/0.60/style"
              },
              "next": {
                "title": "Layout with Flexbox",
                "permalink": "/docs/0.60/flexbox"
              }
            },
            {
              "unversionedId": "hermes",
              "id": "version-0.60/hermes",
              "isDocsHomePage": false,
              "title": "Using Hermes",
              "description": "Hermes is an open-source JavaScript engine optimized for running React Native apps on Android. For many apps, enabling Hermes will result in improved start-up time, decreased memory usage, and smaller app size. At this time Hermes is an opt-in React Native feature, and this guide explains how to enable it.",
              "source": "@site/versioned_docs/version-0.60/hermes.md",
              "slug": "/hermes",
              "permalink": "/docs/0.60/hermes",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/hermes.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/0.60/removing-default-permissions"
              }
            },
            {
              "unversionedId": "image",
              "id": "version-0.60/image",
              "isDocsHomePage": false,
              "title": "Image",
              "description": "A React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.",
              "source": "@site/versioned_docs/version-0.60/image.md",
              "slug": "/image",
              "permalink": "/docs/0.60/image",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/image.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "FlatList",
                "permalink": "/docs/0.60/flatlist"
              },
              "next": {
                "title": "ImageBackground",
                "permalink": "/docs/0.60/imagebackground"
              }
            },
            {
              "unversionedId": "image-style-props",
              "id": "version-0.60/image-style-props",
              "isDocsHomePage": false,
              "title": "Image Style Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/image-style-props.md",
              "slug": "/image-style-props",
              "permalink": "/docs/0.60/image-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/image-style-props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "ImagePickerIOS",
                "permalink": "/docs/0.60/imagepickerios"
              },
              "next": {
                "title": "InteractionManager",
                "permalink": "/docs/0.60/interactionmanager"
              }
            },
            {
              "unversionedId": "imagebackground",
              "id": "version-0.60/imagebackground",
              "isDocsHomePage": false,
              "title": "ImageBackground",
              "description": "A common feature request from developers familiar with the web is background-image. To handle this use case, you can use the ` component, which has the same props as `, and add whatever children to it you would like to layer on top of it.",
              "source": "@site/versioned_docs/version-0.60/imagebackground.md",
              "slug": "/imagebackground",
              "permalink": "/docs/0.60/imagebackground",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/imagebackground.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Image",
                "permalink": "/docs/0.60/image"
              },
              "next": {
                "title": "InputAccessoryView",
                "permalink": "/docs/0.60/inputaccessoryview"
              }
            },
            {
              "unversionedId": "imageeditor",
              "id": "version-0.60/imageeditor",
              "isDocsHomePage": false,
              "title": "ImageEditor",
              "description": "Deprecated. Use @react-native-community/image-editor instead.",
              "source": "@site/versioned_docs/version-0.60/imageeditor.md",
              "slug": "/imageeditor",
              "permalink": "/docs/0.60/imageeditor",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/imageeditor.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Easing",
                "permalink": "/docs/0.60/easing"
              },
              "next": {
                "title": "ImagePickerIOS",
                "permalink": "/docs/0.60/imagepickerios"
              }
            },
            {
              "unversionedId": "imagepickerios",
              "id": "version-0.60/imagepickerios",
              "isDocsHomePage": false,
              "title": "ImagePickerIOS",
              "description": "Deprecated. Use @react-native-community/image-picker-ios instead.",
              "source": "@site/versioned_docs/version-0.60/imagepickerios.md",
              "slug": "/imagepickerios",
              "permalink": "/docs/0.60/imagepickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/imagepickerios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "ImageEditor",
                "permalink": "/docs/0.60/imageeditor"
              },
              "next": {
                "title": "Image Style Props",
                "permalink": "/docs/0.60/image-style-props"
              }
            },
            {
              "unversionedId": "images",
              "id": "version-0.60/images",
              "isDocsHomePage": false,
              "title": "Images",
              "description": "Static Image Resources",
              "source": "@site/versioned_docs/version-0.60/images.md",
              "slug": "/images",
              "permalink": "/docs/0.60/images",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/images.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/0.60/navigation"
              },
              "next": {
                "title": "Animations",
                "permalink": "/docs/0.60/animations"
              }
            },
            {
              "unversionedId": "imagestore",
              "id": "version-0.60/imagestore",
              "isDocsHomePage": false,
              "title": "ImageStore",
              "description": "Deprecated. Use expo-file-system or react-native-fs instead.",
              "source": "@site/versioned_docs/version-0.60/imagestore.md",
              "slug": "/imagestore",
              "permalink": "/docs/0.60/imagestore",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/imagestore.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "improvingux",
              "id": "version-0.60/improvingux",
              "isDocsHomePage": false,
              "title": "Improving User Experience",
              "description": "Configure text inputs",
              "source": "@site/versioned_docs/version-0.60/improvingux.md",
              "slug": "/improvingux",
              "permalink": "/docs/0.60/improvingux",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/improvingux.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Accessibility",
                "permalink": "/docs/0.60/accessibility"
              },
              "next": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/0.60/optimizing-flatlist-configuration"
              }
            },
            {
              "unversionedId": "inputaccessoryview",
              "id": "version-0.60/inputaccessoryview",
              "isDocsHomePage": false,
              "title": "InputAccessoryView",
              "description": "A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars.",
              "source": "@site/versioned_docs/version-0.60/inputaccessoryview.md",
              "slug": "/inputaccessoryview",
              "permalink": "/docs/0.60/inputaccessoryview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/inputaccessoryview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ImageBackground",
                "permalink": "/docs/0.60/imagebackground"
              },
              "next": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/0.60/keyboardavoidingview"
              }
            },
            {
              "unversionedId": "integration-with-existing-apps",
              "id": "version-0.60/integration-with-existing-apps",
              "isDocsHomePage": false,
              "title": "Integration with Existing Apps",
              "description": "React Native is great when you are starting a new mobile app from scratch. However, it also works well for adding a single view or user flow to existing native applications. With a few steps, you can add new React Native based features, screens, views, etc.",
              "source": "@site/versioned_docs/version-0.60/integration-with-existing-apps.md",
              "slug": "/integration-with-existing-apps",
              "permalink": "/docs/0.60/integration-with-existing-apps",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/integration-with-existing-apps.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Color Reference",
                "permalink": "/docs/0.60/colors"
              },
              "next": {
                "title": "Building For TV Devices",
                "permalink": "/docs/0.60/building-for-tv"
              }
            },
            {
              "unversionedId": "interactionmanager",
              "id": "version-0.60/interactionmanager",
              "isDocsHomePage": false,
              "title": "InteractionManager",
              "description": "InteractionManager allows long-running work to be scheduled after any interactions/animations have completed. In particular, this allows JavaScript animations to run smoothly.",
              "source": "@site/versioned_docs/version-0.60/interactionmanager.md",
              "slug": "/interactionmanager",
              "permalink": "/docs/0.60/interactionmanager",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/interactionmanager.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Image Style Props",
                "permalink": "/docs/0.60/image-style-props"
              },
              "next": {
                "title": "Keyboard",
                "permalink": "/docs/0.60/keyboard"
              }
            },
            {
              "unversionedId": "intro-react",
              "id": "version-0.60/intro-react",
              "isDocsHomePage": false,
              "title": "React Fundamentals",
              "description": "To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed.",
              "source": "@site/versioned_docs/version-0.60/intro-react.md",
              "slug": "/intro-react",
              "permalink": "/docs/0.60/intro-react",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/intro-react.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "intro-react-native-components",
              "id": "version-0.60/intro-react-native-components",
              "isDocsHomePage": false,
              "title": "Core Components and Native Components",
              "description": "React Native lets you compose app interfaces using Native Components. Conveniently, it comes with a set of these components for you to get started with right now—the Core Components!",
              "source": "@site/versioned_docs/version-0.60/intro-react-native-components.md",
              "slug": "/intro-react-native-components",
              "permalink": "/docs/0.60/intro-react-native-components",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/intro-react-native-components.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "javascript-environment",
              "id": "version-0.60/javascript-environment",
              "isDocsHomePage": false,
              "title": "JavaScript Environment",
              "description": "JavaScript Runtime",
              "source": "@site/versioned_docs/version-0.60/javascript-environment.md",
              "slug": "/javascript-environment",
              "permalink": "/docs/0.60/javascript-environment",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/javascript-environment.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Gesture Responder System",
                "permalink": "/docs/0.60/gesture-responder-system"
              },
              "next": {
                "title": "Using TypeScript with React Native",
                "permalink": "/docs/0.60/typescript"
              }
            },
            {
              "unversionedId": "keyboard",
              "id": "version-0.60/keyboard",
              "isDocsHomePage": false,
              "title": "Keyboard",
              "description": "Keyboard module to control keyboard events.",
              "source": "@site/versioned_docs/version-0.60/keyboard.md",
              "slug": "/keyboard",
              "permalink": "/docs/0.60/keyboard",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/keyboard.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "InteractionManager",
                "permalink": "/docs/0.60/interactionmanager"
              },
              "next": {
                "title": "Layout Props",
                "permalink": "/docs/0.60/layout-props"
              }
            },
            {
              "unversionedId": "keyboardavoidingview",
              "id": "version-0.60/keyboardavoidingview",
              "isDocsHomePage": false,
              "title": "KeyboardAvoidingView",
              "description": "It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard. It can automatically adjust either its height, position, or bottom padding based on the position of the keyboard.",
              "source": "@site/versioned_docs/version-0.60/keyboardavoidingview.md",
              "slug": "/keyboardavoidingview",
              "permalink": "/docs/0.60/keyboardavoidingview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/keyboardavoidingview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "InputAccessoryView",
                "permalink": "/docs/0.60/inputaccessoryview"
              },
              "next": {
                "title": "🚧 MaskedViewIOS",
                "permalink": "/docs/0.60/maskedviewios"
              }
            },
            {
              "unversionedId": "layout-props",
              "id": "version-0.60/layout-props",
              "isDocsHomePage": false,
              "title": "Layout Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/layout-props.md",
              "slug": "/layout-props",
              "permalink": "/docs/0.60/layout-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/layout-props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Keyboard",
                "permalink": "/docs/0.60/keyboard"
              },
              "next": {
                "title": "LayoutAnimation",
                "permalink": "/docs/0.60/layoutanimation"
              }
            },
            {
              "unversionedId": "layoutanimation",
              "id": "version-0.60/layoutanimation",
              "isDocsHomePage": false,
              "title": "LayoutAnimation",
              "description": "Automatically animates views to their new positions when the next layout happens.",
              "source": "@site/versioned_docs/version-0.60/layoutanimation.md",
              "slug": "/layoutanimation",
              "permalink": "/docs/0.60/layoutanimation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/layoutanimation.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Layout Props",
                "permalink": "/docs/0.60/layout-props"
              },
              "next": {
                "title": "Linking",
                "permalink": "/docs/0.60/linking"
              }
            },
            {
              "unversionedId": "libraries",
              "id": "version-0.60/libraries",
              "isDocsHomePage": false,
              "title": "Using Libraries",
              "description": "This guide introduces React Native developers to finding, installing, and using third-party libraries in their apps.",
              "source": "@site/versioned_docs/version-0.60/libraries.md",
              "slug": "/libraries",
              "permalink": "/docs/0.60/libraries",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/libraries.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "linking",
              "id": "version-0.60/linking",
              "isDocsHomePage": false,
              "title": "Linking",
              "description": "Projects with Native Code Only",
              "source": "@site/versioned_docs/version-0.60/linking.md",
              "slug": "/linking",
              "permalink": "/docs/0.60/linking",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/linking.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "LayoutAnimation",
                "permalink": "/docs/0.60/layoutanimation"
              },
              "next": {
                "title": "PanResponder",
                "permalink": "/docs/0.60/panresponder"
              }
            },
            {
              "unversionedId": "linking-libraries-ios",
              "id": "version-0.60/linking-libraries-ios",
              "isDocsHomePage": false,
              "title": "Linking Libraries",
              "description": "Not every app uses all the native capabilities, and including the code to support all those features would impact the binary size... But we still want to support these features whenever you need them.",
              "source": "@site/versioned_docs/version-0.60/linking-libraries-ios.md",
              "slug": "/linking-libraries-ios",
              "permalink": "/docs/0.60/linking-libraries-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/linking-libraries-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Native UI Components",
                "permalink": "/docs/0.60/native-components-ios"
              },
              "next": {
                "title": "Running On Simulator",
                "permalink": "/docs/0.60/running-on-simulator-ios"
              }
            },
            {
              "unversionedId": "listview",
              "id": "version-0.60/listview",
              "isDocsHomePage": false,
              "title": "ListView",
              "description": "DEPRECATED - use one of the new list components, such as FlatList or SectionList for bounded memory use, fewer bugs, better performance, an easier to use API, and more features. Check out this blog post for more details.",
              "source": "@site/versioned_docs/version-0.60/listview.md",
              "slug": "/listview",
              "permalink": "/docs/0.60/listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/listview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "listviewdatasource",
              "id": "version-0.60/listviewdatasource",
              "isDocsHomePage": false,
              "title": "ListViewDataSource",
              "description": "Provides efficient data processing and access to the ListView component. A ListViewDataSource is created with functions for extracting data from the input blob, and comparing elements (with default implementations for convenience). The input blob can be as flat as an array of strings, or an object with rows nested inside section objects.",
              "source": "@site/versioned_docs/version-0.60/listviewdatasource.md",
              "slug": "/listviewdatasource",
              "permalink": "/docs/0.60/listviewdatasource",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/listviewdatasource.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "maskedviewios",
              "id": "version-0.60/maskedviewios",
              "isDocsHomePage": false,
              "title": "🚧 MaskedViewIOS",
              "description": "Deprecated. Use @react-native-community/masked-view instead.",
              "source": "@site/versioned_docs/version-0.60/maskedviewios.md",
              "slug": "/maskedviewios",
              "permalink": "/docs/0.60/maskedviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/maskedviewios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "KeyboardAvoidingView",
                "permalink": "/docs/0.60/keyboardavoidingview"
              },
              "next": {
                "title": "Modal",
                "permalink": "/docs/0.60/modal"
              }
            },
            {
              "unversionedId": "modal",
              "id": "version-0.60/modal",
              "isDocsHomePage": false,
              "title": "Modal",
              "description": "The Modal component is a basic way to present content above an enclosing view.",
              "source": "@site/versioned_docs/version-0.60/modal.md",
              "slug": "/modal",
              "permalink": "/docs/0.60/modal",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/modal.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "🚧 MaskedViewIOS",
                "permalink": "/docs/0.60/maskedviewios"
              },
              "next": {
                "title": "Picker",
                "permalink": "/docs/0.60/picker"
              }
            },
            {
              "unversionedId": "more-resources",
              "id": "version-0.60/more-resources",
              "isDocsHomePage": false,
              "title": "More Resources",
              "description": "If you only read through this website, you should be able to build a pretty cool React Native app. But React Native isn't a product made by one company - it's a community of thousands of developers. So if you're interested in React Native, here's some related stuff you might want to check out.",
              "source": "@site/versioned_docs/version-0.60/more-resources.md",
              "slug": "/more-resources",
              "permalink": "/docs/0.60/more-resources",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/more-resources.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Networking",
                "permalink": "/docs/0.60/network"
              },
              "next": {
                "title": "Platform Specific Code",
                "permalink": "/docs/0.60/platform-specific-code"
              }
            },
            {
              "unversionedId": "native-components-android",
              "id": "version-0.60/native-components-android",
              "isDocsHomePage": false,
              "title": "Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.60/native-components-android.md",
              "slug": "/native-components-android",
              "permalink": "/docs/0.60/native-components-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/native-components-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Native Modules",
                "permalink": "/docs/0.60/native-modules-android"
              },
              "next": {
                "title": "Headless JS",
                "permalink": "/docs/0.60/headless-js-android"
              }
            },
            {
              "unversionedId": "native-components-ios",
              "id": "version-0.60/native-components-ios",
              "isDocsHomePage": false,
              "title": "Native UI Components",
              "description": "There are tons of native UI widgets out there ready to be used in the latest apps - some of them are part of the platform, others are available as third-party libraries, and still more might be in use in your very own portfolio. React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, we can wrap up these existing components for seamless integration with your React Native application.",
              "source": "@site/versioned_docs/version-0.60/native-components-ios.md",
              "slug": "/native-components-ios",
              "permalink": "/docs/0.60/native-components-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/native-components-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Native Modules",
                "permalink": "/docs/0.60/native-modules-ios"
              },
              "next": {
                "title": "Linking Libraries",
                "permalink": "/docs/0.60/linking-libraries-ios"
              }
            },
            {
              "unversionedId": "native-modules-android",
              "id": "version-0.60/native-modules-android",
              "isDocsHomePage": false,
              "title": "Native Modules",
              "description": "Sometimes an app needs access to a platform API that React Native doesn't have a corresponding module for yet. Maybe you want to reuse some existing Java code without having to reimplement it in JavaScript, or write some high performance, multi-threaded code such as for image processing, a database, or any number of advanced extensions.",
              "source": "@site/versioned_docs/version-0.60/native-modules-android.md",
              "slug": "/native-modules-android",
              "permalink": "/docs/0.60/native-modules-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/native-modules-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "App Extensions",
                "permalink": "/docs/0.60/app-extensions"
              },
              "next": {
                "title": "Native UI Components",
                "permalink": "/docs/0.60/native-components-android"
              }
            },
            {
              "unversionedId": "native-modules-ios",
              "id": "version-0.60/native-modules-ios",
              "isDocsHomePage": false,
              "title": "Native Modules",
              "description": "Sometimes an app needs to access a platform API and React Native doesn't have a corresponding module yet. Maybe you want to reuse some existing Objective-C, Swift or C++ code without having to reimplement it in JavaScript, or write some high performance, multi-threaded code such as for image processing, a database, or any number of advanced extensions.",
              "source": "@site/versioned_docs/version-0.60/native-modules-ios.md",
              "slug": "/native-modules-ios",
              "permalink": "/docs/0.60/native-modules-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/native-modules-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/0.60/out-of-tree-platforms"
              },
              "next": {
                "title": "Native UI Components",
                "permalink": "/docs/0.60/native-components-ios"
              }
            },
            {
              "unversionedId": "native-modules-setup",
              "id": "version-0.60/native-modules-setup",
              "isDocsHomePage": false,
              "title": "Native Modules Setup",
              "description": "Native modules are usually distributed as npm packages, except that on top of the usual JavaScript they will include some native code per platform. To understand more about npm packages you may find this guide useful.",
              "source": "@site/versioned_docs/version-0.60/native-modules-setup.md",
              "slug": "/native-modules-setup",
              "permalink": "/docs/0.60/native-modules-setup",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/native-modules-setup.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Troubleshooting",
                "permalink": "/docs/0.60/troubleshooting"
              },
              "next": {
                "title": "Out-of-Tree Platforms",
                "permalink": "/docs/0.60/out-of-tree-platforms"
              }
            },
            {
              "unversionedId": "navigation",
              "id": "version-0.60/navigation",
              "isDocsHomePage": false,
              "title": "Navigating Between Screens",
              "description": "Mobile apps are rarely made up of a single screen. Managing the presentation of, and transition between, multiple screens is typically handled by what is known as a navigator.",
              "source": "@site/versioned_docs/version-0.60/navigation.md",
              "slug": "/navigation",
              "permalink": "/docs/0.60/navigation",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/navigation.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Platform Specific Code",
                "permalink": "/docs/0.60/platform-specific-code"
              },
              "next": {
                "title": "Images",
                "permalink": "/docs/0.60/images"
              }
            },
            {
              "unversionedId": "netinfo",
              "id": "version-0.60/netinfo",
              "isDocsHomePage": false,
              "title": "NetInfo",
              "description": "Deprecated. Use react-native-community/react-native-netinfo instead.",
              "source": "@site/versioned_docs/version-0.60/netinfo.md",
              "slug": "/netinfo",
              "permalink": "/docs/0.60/netinfo",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/netinfo.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "network",
              "id": "version-0.60/network",
              "isDocsHomePage": false,
              "title": "Networking",
              "description": "Many mobile apps need to load resources from a remote URL. You may want to make a POST request to a REST API, or you may need to fetch a chunk of static content from another server.",
              "source": "@site/versioned_docs/version-0.60/network.md",
              "slug": "/network",
              "permalink": "/docs/0.60/network",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/network.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Using List Views",
                "permalink": "/docs/0.60/using-a-listview"
              },
              "next": {
                "title": "More Resources",
                "permalink": "/docs/0.60/more-resources"
              }
            },
            {
              "unversionedId": "optimizing-flatlist-configuration",
              "id": "version-0.60/optimizing-flatlist-configuration",
              "isDocsHomePage": false,
              "title": "Optimizing Flatlist Configuration",
              "description": "Terms",
              "source": "@site/versioned_docs/version-0.60/optimizing-flatlist-configuration.md",
              "slug": "/optimizing-flatlist-configuration",
              "permalink": "/docs/0.60/optimizing-flatlist-configuration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/optimizing-flatlist-configuration.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Improving User Experience",
                "permalink": "/docs/0.60/improvingux"
              },
              "next": {
                "title": "Timers",
                "permalink": "/docs/0.60/timers"
              }
            },
            {
              "unversionedId": "out-of-tree-platforms",
              "id": "version-0.60/out-of-tree-platforms",
              "isDocsHomePage": false,
              "title": "Out-of-Tree Platforms",
              "description": "React Native is not only for Android and iOS - there are community-supported projects that bring it to other platforms, such as:",
              "source": "@site/versioned_docs/version-0.60/out-of-tree-platforms.md",
              "slug": "/out-of-tree-platforms",
              "permalink": "/docs/0.60/out-of-tree-platforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/out-of-tree-platforms.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Native Modules Setup",
                "permalink": "/docs/0.60/native-modules-setup"
              },
              "next": {
                "title": "Native Modules",
                "permalink": "/docs/0.60/native-modules-ios"
              }
            },
            {
              "unversionedId": "panresponder",
              "id": "version-0.60/panresponder",
              "isDocsHomePage": false,
              "title": "PanResponder",
              "description": "PanResponder reconciles several touches into a single gesture. It makes single-touch gestures resilient to extra touches, and can be used to recognize basic multi-touch gestures.",
              "source": "@site/versioned_docs/version-0.60/panresponder.md",
              "slug": "/panresponder",
              "permalink": "/docs/0.60/panresponder",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/panresponder.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Linking",
                "permalink": "/docs/0.60/linking"
              },
              "next": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/0.60/permissionsandroid"
              }
            },
            {
              "unversionedId": "performance",
              "id": "version-0.60/performance",
              "isDocsHomePage": false,
              "title": "Performance",
              "description": "A compelling reason for using React Native instead of WebView-based tools is to achieve 60 frames per second and a native look and feel to your apps. Where possible, we would like for React Native to do the right thing and help you to focus on your app instead of performance optimization, but there are areas where we're not quite there yet, and others where React Native (similar to writing native code directly) cannot possibly determine the best way to optimize for you and so manual intervention will be necessary. We try our best to deliver buttery-smooth UI performance by default, but sometimes that isn't possible.",
              "source": "@site/versioned_docs/version-0.60/performance.md",
              "slug": "/performance",
              "permalink": "/docs/0.60/performance",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/performance.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Debugging",
                "permalink": "/docs/0.60/debugging"
              },
              "next": {
                "title": "Gesture Responder System",
                "permalink": "/docs/0.60/gesture-responder-system"
              }
            },
            {
              "unversionedId": "permissionsandroid",
              "id": "version-0.60/permissionsandroid",
              "isDocsHomePage": false,
              "title": "PermissionsAndroid",
              "description": "Project with Native Code Required",
              "source": "@site/versioned_docs/version-0.60/permissionsandroid.md",
              "slug": "/permissionsandroid",
              "permalink": "/docs/0.60/permissionsandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/permissionsandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "PanResponder",
                "permalink": "/docs/0.60/panresponder"
              },
              "next": {
                "title": "PixelRatio",
                "permalink": "/docs/0.60/pixelratio"
              }
            },
            {
              "unversionedId": "picker",
              "id": "version-0.60/picker",
              "isDocsHomePage": false,
              "title": "Picker",
              "description": "Renders the native picker component on Android and iOS. Example:",
              "source": "@site/versioned_docs/version-0.60/picker.md",
              "slug": "/picker",
              "permalink": "/docs/0.60/picker",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/picker.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Modal",
                "permalink": "/docs/0.60/modal"
              },
              "next": {
                "title": "PickerIOS",
                "permalink": "/docs/0.60/pickerios"
              }
            },
            {
              "unversionedId": "picker-item",
              "id": "version-0.60/picker-item",
              "isDocsHomePage": false,
              "title": "Picker.Item",
              "description": "Individual selectable item in a Picker.",
              "source": "@site/versioned_docs/version-0.60/picker-item.md",
              "slug": "/picker-item",
              "permalink": "/docs/0.60/picker-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/picker-item.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "picker-style-props",
              "id": "version-0.60/picker-style-props",
              "isDocsHomePage": false,
              "title": "Picker Style Props",
              "description": "Picker style props.",
              "source": "@site/versioned_docs/version-0.60/picker-style-props.md",
              "slug": "/picker-style-props",
              "permalink": "/docs/0.60/picker-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/picker-style-props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pickerios",
              "id": "version-0.60/pickerios",
              "isDocsHomePage": false,
              "title": "PickerIOS",
              "description": "Deprecated. Use Picker instead.",
              "source": "@site/versioned_docs/version-0.60/pickerios.md",
              "slug": "/pickerios",
              "permalink": "/docs/0.60/pickerios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/pickerios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Picker",
                "permalink": "/docs/0.60/picker"
              },
              "next": {
                "title": "ProgressBarAndroid",
                "permalink": "/docs/0.60/progressbarandroid"
              }
            },
            {
              "unversionedId": "pixelratio",
              "id": "version-0.60/pixelratio",
              "isDocsHomePage": false,
              "title": "PixelRatio",
              "description": "PixelRatio class gives access to the device pixel density.",
              "source": "@site/versioned_docs/version-0.60/pixelratio.md",
              "slug": "/pixelratio",
              "permalink": "/docs/0.60/pixelratio",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/pixelratio.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "PermissionsAndroid",
                "permalink": "/docs/0.60/permissionsandroid"
              },
              "next": {
                "title": "PushNotificationIOS",
                "permalink": "/docs/0.60/pushnotificationios"
              }
            },
            {
              "unversionedId": "platform-specific-code",
              "id": "version-0.60/platform-specific-code",
              "isDocsHomePage": false,
              "title": "Platform Specific Code",
              "description": "When building a cross-platform app, you'll want to re-use as much code as possible. Scenarios may arise where it makes sense for the code to be different, for example you may want to implement separate visual components for Android and iOS.",
              "source": "@site/versioned_docs/version-0.60/platform-specific-code.md",
              "slug": "/platform-specific-code",
              "permalink": "/docs/0.60/platform-specific-code",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/platform-specific-code.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "More Resources",
                "permalink": "/docs/0.60/more-resources"
              },
              "next": {
                "title": "Navigating Between Screens",
                "permalink": "/docs/0.60/navigation"
              }
            },
            {
              "unversionedId": "profiling",
              "id": "version-0.60/profiling",
              "isDocsHomePage": false,
              "title": "Profiling",
              "description": "Use the built-in profiler to get detailed information about work done in the JavaScript thread and main thread side-by-side. Access it by selecting Perf Monitor from the Debug menu.",
              "source": "@site/versioned_docs/version-0.60/profiling.md",
              "slug": "/profiling",
              "permalink": "/docs/0.60/profiling",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/profiling.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "progressbarandroid",
              "id": "version-0.60/progressbarandroid",
              "isDocsHomePage": false,
              "title": "ProgressBarAndroid",
              "description": "Android-only React component used to indicate that the app is loading or there is some activity in the app.",
              "source": "@site/versioned_docs/version-0.60/progressbarandroid.md",
              "slug": "/progressbarandroid",
              "permalink": "/docs/0.60/progressbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/progressbarandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "PickerIOS",
                "permalink": "/docs/0.60/pickerios"
              },
              "next": {
                "title": "ProgressViewIOS",
                "permalink": "/docs/0.60/progressviewios"
              }
            },
            {
              "unversionedId": "progressviewios",
              "id": "version-0.60/progressviewios",
              "isDocsHomePage": false,
              "title": "ProgressViewIOS",
              "description": "Uses ProgressViewIOS to render a UIProgressView on iOS.",
              "source": "@site/versioned_docs/version-0.60/progressviewios.md",
              "slug": "/progressviewios",
              "permalink": "/docs/0.60/progressviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/progressviewios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ProgressBarAndroid",
                "permalink": "/docs/0.60/progressbarandroid"
              },
              "next": {
                "title": "RefreshControl",
                "permalink": "/docs/0.60/refreshcontrol"
              }
            },
            {
              "unversionedId": "props",
              "id": "version-0.60/props",
              "isDocsHomePage": false,
              "title": "Props",
              "description": "Most components can be customized when they are created, with different parameters. These creation parameters are called props, short for properties.",
              "source": "@site/versioned_docs/version-0.60/props.md",
              "slug": "/props",
              "permalink": "/docs/0.60/props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-forks",
              "id": "version-0.60/publishing-forks",
              "isDocsHomePage": false,
              "title": "Publish your own version of react native",
              "description": "TL;DR",
              "source": "@site/versioned_docs/version-0.60/publishing.md",
              "slug": "/publishing-forks",
              "permalink": "/docs/0.60/publishing-forks",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/publishing.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "publishing-to-app-store",
              "id": "version-0.60/publishing-to-app-store",
              "isDocsHomePage": false,
              "title": "Publishing to Apple App Store",
              "description": "The publishing process is the same as any other native iOS app, with some additional considerations to take into account.",
              "source": "@site/versioned_docs/version-0.60/publishing-to-app-store.md",
              "slug": "/publishing-to-app-store",
              "permalink": "/docs/0.60/publishing-to-app-store",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/publishing-to-app-store.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "pushnotificationios",
              "id": "version-0.60/pushnotificationios",
              "isDocsHomePage": false,
              "title": "PushNotificationIOS",
              "description": "Deprecated. Use @react-native-community/push-notification-ios instead.",
              "source": "@site/versioned_docs/version-0.60/pushnotificationios.md",
              "slug": "/pushnotificationios",
              "permalink": "/docs/0.60/pushnotificationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/pushnotificationios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "PixelRatio",
                "permalink": "/docs/0.60/pixelratio"
              },
              "next": {
                "title": "Settings",
                "permalink": "/docs/0.60/settings"
              }
            },
            {
              "unversionedId": "ram-bundles-inline-requires",
              "id": "version-0.60/ram-bundles-inline-requires",
              "isDocsHomePage": false,
              "title": "RAM Bundles and Inline Requires",
              "description": "If you have a large app you may want to consider the Random Access Modules (RAM) bundle format, and using inline requires. This is useful for apps that have a large number of screens which may not ever be opened during a typical usage of the app. Generally it is useful to apps that have large amounts of code that are not needed for a while after startup. For instance the app includes complicated profile screens or lesser used features, but most sessions only involve visiting the main screen of the app for updates. We can optimize the loading of the bundle by using the RAM format and requiring those features and screens inline (when they are actually used).",
              "source": "@site/versioned_docs/version-0.60/ram-bundles-inline-requires.md",
              "slug": "/ram-bundles-inline-requires",
              "permalink": "/docs/0.60/ram-bundles-inline-requires",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/ram-bundles-inline-requires.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "react-node",
              "id": "version-0.60/react-node",
              "isDocsHomePage": false,
              "title": "React Node Object Type",
              "description": "A React Node is one of the following types:",
              "source": "@site/versioned_docs/version-0.60/react-node.md",
              "slug": "/react-node",
              "permalink": "/docs/0.60/react-node",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/react-node.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "refreshcontrol",
              "id": "version-0.60/refreshcontrol",
              "isDocsHomePage": false,
              "title": "RefreshControl",
              "description": "This component is used inside a ScrollView or ListView to add pull to refresh functionality. When the ScrollView is at scrollY: 0, swiping down triggers an onRefresh event.",
              "source": "@site/versioned_docs/version-0.60/refreshcontrol.md",
              "slug": "/refreshcontrol",
              "permalink": "/docs/0.60/refreshcontrol",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/refreshcontrol.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ProgressViewIOS",
                "permalink": "/docs/0.60/progressviewios"
              },
              "next": {
                "title": "SafeAreaView",
                "permalink": "/docs/0.60/safeareaview"
              }
            },
            {
              "unversionedId": "removing-default-permissions",
              "id": "version-0.60/removing-default-permissions",
              "isDocsHomePage": false,
              "title": "Removing Default Permissions",
              "description": "By default, some permissions are added to your Android APK.",
              "source": "@site/versioned_docs/version-0.60/removing-default-permissions.md",
              "slug": "/removing-default-permissions",
              "permalink": "/docs/0.60/removing-default-permissions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/removing-default-permissions.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Publishing to Google Play Store",
                "permalink": "/docs/0.60/signed-apk-android"
              },
              "next": {
                "title": "Using Hermes",
                "permalink": "/docs/0.60/hermes"
              }
            },
            {
              "unversionedId": "running-on-device",
              "id": "version-0.60/running-on-device",
              "isDocsHomePage": false,
              "title": "Running On Device",
              "description": "It's always a good idea to test your app on an actual device before releasing it to your users. This document will guide you through the necessary steps to run your React Native app on a device and to get it ready for production.",
              "source": "@site/versioned_docs/version-0.60/running-on-device.md",
              "slug": "/running-on-device",
              "permalink": "/docs/0.60/running-on-device",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/running-on-device.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Building For TV Devices",
                "permalink": "/docs/0.60/building-for-tv"
              },
              "next": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/0.60/upgrading"
              }
            },
            {
              "unversionedId": "running-on-simulator-ios",
              "id": "version-0.60/running-on-simulator-ios",
              "isDocsHomePage": false,
              "title": "Running On Simulator",
              "description": "Starting the simulator",
              "source": "@site/versioned_docs/version-0.60/running-on-simulator-ios.md",
              "slug": "/running-on-simulator-ios",
              "permalink": "/docs/0.60/running-on-simulator-ios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/running-on-simulator-ios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Linking Libraries",
                "permalink": "/docs/0.60/linking-libraries-ios"
              },
              "next": {
                "title": "Communication between native and React Native",
                "permalink": "/docs/0.60/communication-ios"
              }
            },
            {
              "unversionedId": "safeareaview",
              "id": "version-0.60/safeareaview",
              "isDocsHomePage": false,
              "title": "SafeAreaView",
              "description": "The purpose of SafeAreaView is to render content within the safe area boundaries of a device. It is currently only applicable to iOS devices with iOS version 11 or later.",
              "source": "@site/versioned_docs/version-0.60/safeareaview.md",
              "slug": "/safeareaview",
              "permalink": "/docs/0.60/safeareaview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/safeareaview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "RefreshControl",
                "permalink": "/docs/0.60/refreshcontrol"
              },
              "next": {
                "title": "ScrollView",
                "permalink": "/docs/0.60/scrollview"
              }
            },
            {
              "unversionedId": "scrollview",
              "id": "version-0.60/scrollview",
              "isDocsHomePage": false,
              "title": "ScrollView",
              "description": "Component that wraps platform ScrollView while providing integration with touch locking \"responder\" system.",
              "source": "@site/versioned_docs/version-0.60/scrollview.md",
              "slug": "/scrollview",
              "permalink": "/docs/0.60/scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/scrollview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "SafeAreaView",
                "permalink": "/docs/0.60/safeareaview"
              },
              "next": {
                "title": "SectionList",
                "permalink": "/docs/0.60/sectionlist"
              }
            },
            {
              "unversionedId": "sectionlist",
              "id": "version-0.60/sectionlist",
              "isDocsHomePage": false,
              "title": "SectionList",
              "description": "A performant interface for rendering sectioned lists, supporting the most handy features:",
              "source": "@site/versioned_docs/version-0.60/sectionlist.md",
              "slug": "/sectionlist",
              "permalink": "/docs/0.60/sectionlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/sectionlist.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ScrollView",
                "permalink": "/docs/0.60/scrollview"
              },
              "next": {
                "title": "SegmentedControlIOS",
                "permalink": "/docs/0.60/segmentedcontrolios"
              }
            },
            {
              "unversionedId": "segmentedcontrolios",
              "id": "version-0.60/segmentedcontrolios",
              "isDocsHomePage": false,
              "title": "SegmentedControlIOS",
              "description": "Deprecated. Use @react-native-community/segmented-control instead.",
              "source": "@site/versioned_docs/version-0.60/segmentedcontrolios.md",
              "slug": "/segmentedcontrolios",
              "permalink": "/docs/0.60/segmentedcontrolios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/segmentedcontrolios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "SectionList",
                "permalink": "/docs/0.60/sectionlist"
              },
              "next": {
                "title": "Slider",
                "permalink": "/docs/0.60/slider"
              }
            },
            {
              "unversionedId": "settings",
              "id": "version-0.60/settings",
              "isDocsHomePage": false,
              "title": "Settings",
              "description": "Settings serves as a wrapper for NSUserDefaults, a persistent key-value store available only on iOS.",
              "source": "@site/versioned_docs/version-0.60/settings.md",
              "slug": "/settings",
              "permalink": "/docs/0.60/settings",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/settings.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "PushNotificationIOS",
                "permalink": "/docs/0.60/pushnotificationios"
              },
              "next": {
                "title": "Shadow Props",
                "permalink": "/docs/0.60/shadow-props"
              }
            },
            {
              "unversionedId": "shadow-props",
              "id": "version-0.60/shadow-props",
              "isDocsHomePage": false,
              "title": "Shadow Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/shadow-props.md",
              "slug": "/shadow-props",
              "permalink": "/docs/0.60/shadow-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/shadow-props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Settings",
                "permalink": "/docs/0.60/settings"
              },
              "next": {
                "title": "Share",
                "permalink": "/docs/0.60/share"
              }
            },
            {
              "unversionedId": "share",
              "id": "version-0.60/share",
              "isDocsHomePage": false,
              "title": "Share",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/share.md",
              "slug": "/share",
              "permalink": "/docs/0.60/share",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/share.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Shadow Props",
                "permalink": "/docs/0.60/shadow-props"
              },
              "next": {
                "title": "StatusBarIOS",
                "permalink": "/docs/0.60/statusbarios"
              }
            },
            {
              "unversionedId": "signed-apk-android",
              "id": "version-0.60/signed-apk-android",
              "isDocsHomePage": false,
              "title": "Publishing to Google Play Store",
              "description": "Android requires that all apps be digitally signed with a certificate before they can be installed. In order to distribute your Android application via Google Play store it needs to be signed with a release key that then needs to be used for all future updates. Since 2017 it is possible for Google Play to manage signing releases automatically thanks to App Signing by Google Play functionality. However, before your application binary is uploaded to Google Play it needs to be signed with an upload key. The Signing Your Applications page on Android Developers documentation describes the topic in detail. This guide covers the process in brief, as well as lists the steps required to package the JavaScript bundle.",
              "source": "@site/versioned_docs/version-0.60/signed-apk-android.md",
              "slug": "/signed-apk-android",
              "permalink": "/docs/0.60/signed-apk-android",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/signed-apk-android.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Headless JS",
                "permalink": "/docs/0.60/headless-js-android"
              },
              "next": {
                "title": "Removing Default Permissions",
                "permalink": "/docs/0.60/removing-default-permissions"
              }
            },
            {
              "unversionedId": "slider",
              "id": "version-0.60/slider",
              "isDocsHomePage": false,
              "title": "Slider",
              "description": "Deprecated. Use react-native-community/react-native-slider instead.",
              "source": "@site/versioned_docs/version-0.60/slider.md",
              "slug": "/slider",
              "permalink": "/docs/0.60/slider",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/slider.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "SegmentedControlIOS",
                "permalink": "/docs/0.60/segmentedcontrolios"
              },
              "next": {
                "title": "StatusBar",
                "permalink": "/docs/0.60/statusbar"
              }
            },
            {
              "unversionedId": "snapshotviewios",
              "id": "version-0.60/snapshotviewios",
              "isDocsHomePage": false,
              "title": "SnapshotViewIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.60/snapshotviewios.md",
              "slug": "/snapshotviewios",
              "permalink": "/docs/0.60/snapshotviewios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/snapshotviewios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "state",
              "id": "version-0.60/state",
              "isDocsHomePage": false,
              "title": "State",
              "description": "There are two types of data that control a component: props and state. props are set by the parent and they are fixed throughout the lifetime of a component. For data that is going to change, we have to use state.",
              "source": "@site/versioned_docs/version-0.60/state.md",
              "slug": "/state",
              "permalink": "/docs/0.60/state",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/state.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "statusbar",
              "id": "version-0.60/statusbar",
              "isDocsHomePage": false,
              "title": "StatusBar",
              "description": "Component to control the app status bar.",
              "source": "@site/versioned_docs/version-0.60/statusbar.md",
              "slug": "/statusbar",
              "permalink": "/docs/0.60/statusbar",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/statusbar.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Slider",
                "permalink": "/docs/0.60/slider"
              },
              "next": {
                "title": "Switch",
                "permalink": "/docs/0.60/switch"
              }
            },
            {
              "unversionedId": "statusbarios",
              "id": "version-0.60/statusbarios",
              "isDocsHomePage": false,
              "title": "StatusBarIOS",
              "description": "Use StatusBar for mutating the status bar.",
              "source": "@site/versioned_docs/version-0.60/statusbarios.md",
              "slug": "/statusbarios",
              "permalink": "/docs/0.60/statusbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/statusbarios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Share",
                "permalink": "/docs/0.60/share"
              },
              "next": {
                "title": "StyleSheet",
                "permalink": "/docs/0.60/stylesheet"
              }
            },
            {
              "unversionedId": "style",
              "id": "version-0.60/style",
              "isDocsHomePage": false,
              "title": "Style",
              "description": "With React Native, you style your application using JavaScript. All of the core components accept a prop named style. The style names and values usually match how CSS works on the web, except names are written using camel casing, e.g. backgroundColor rather than background-color.",
              "source": "@site/versioned_docs/version-0.60/style.md",
              "slug": "/style",
              "permalink": "/docs/0.60/style",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/style.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Learn the Basics",
                "permalink": "/docs/0.60/tutorial"
              },
              "next": {
                "title": "Height and Width",
                "permalink": "/docs/0.60/height-and-width"
              }
            },
            {
              "unversionedId": "stylesheet",
              "id": "version-0.60/stylesheet",
              "isDocsHomePage": false,
              "title": "StyleSheet",
              "description": "A StyleSheet is an abstraction similar to CSS StyleSheets",
              "source": "@site/versioned_docs/version-0.60/stylesheet.md",
              "slug": "/stylesheet",
              "permalink": "/docs/0.60/stylesheet",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/stylesheet.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "StatusBarIOS",
                "permalink": "/docs/0.60/statusbarios"
              },
              "next": {
                "title": "Systrace",
                "permalink": "/docs/0.60/systrace"
              }
            },
            {
              "unversionedId": "switch",
              "id": "version-0.60/switch",
              "isDocsHomePage": false,
              "title": "Switch",
              "description": "Renders a boolean input.",
              "source": "@site/versioned_docs/version-0.60/switch.md",
              "slug": "/switch",
              "permalink": "/docs/0.60/switch",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/switch.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "StatusBar",
                "permalink": "/docs/0.60/statusbar"
              },
              "next": {
                "title": "TabBarIOS",
                "permalink": "/docs/0.60/tabbarios"
              }
            },
            {
              "unversionedId": "symbolication",
              "id": "version-0.60/symbolication",
              "isDocsHomePage": false,
              "title": "Symbolicating a stack trace",
              "description": "If a React Native app throws an unhandled exception in a release build, the output may be obfuscated and hard to read:",
              "source": "@site/versioned_docs/version-0.60/symbolication.md",
              "slug": "/symbolication",
              "permalink": "/docs/0.60/symbolication",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/symbolication.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "systrace",
              "id": "version-0.60/systrace",
              "isDocsHomePage": false,
              "title": "Systrace",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/systrace.md",
              "slug": "/systrace",
              "permalink": "/docs/0.60/systrace",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/systrace.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "StyleSheet",
                "permalink": "/docs/0.60/stylesheet"
              },
              "next": {
                "title": "Text Style Props",
                "permalink": "/docs/0.60/text-style-props"
              }
            },
            {
              "unversionedId": "tabbarios",
              "id": "version-0.60/tabbarios",
              "isDocsHomePage": false,
              "title": "TabBarIOS",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.60/tabbarios.md",
              "slug": "/tabbarios",
              "permalink": "/docs/0.60/tabbarios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/tabbarios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Switch",
                "permalink": "/docs/0.60/switch"
              },
              "next": {
                "title": "TabBarIOS.Item",
                "permalink": "/docs/0.60/tabbarios-item"
              }
            },
            {
              "unversionedId": "tabbarios-item",
              "id": "version-0.60/tabbarios-item",
              "isDocsHomePage": false,
              "title": "TabBarIOS.Item",
              "description": "Props",
              "source": "@site/versioned_docs/version-0.60/tabbarios-item.md",
              "slug": "/tabbarios-item",
              "permalink": "/docs/0.60/tabbarios-item",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/tabbarios-item.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TabBarIOS",
                "permalink": "/docs/0.60/tabbarios"
              },
              "next": {
                "title": "Text",
                "permalink": "/docs/0.60/text"
              }
            },
            {
              "unversionedId": "testing-overview",
              "id": "version-0.60/testing-overview",
              "isDocsHomePage": false,
              "title": "Testing",
              "description": "This guide introduces React Native developers to the key concepts behind testing, how to write good tests, and what kinds of tests you can incorporate into your workflow.",
              "source": "@site/versioned_docs/version-0.60/testing-overview.md",
              "slug": "/testing-overview",
              "permalink": "/docs/0.60/testing-overview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/testing-overview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "text",
              "id": "version-0.60/text",
              "isDocsHomePage": false,
              "title": "Text",
              "description": "A React component for displaying text.",
              "source": "@site/versioned_docs/version-0.60/text.md",
              "slug": "/text",
              "permalink": "/docs/0.60/text",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/text.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TabBarIOS.Item",
                "permalink": "/docs/0.60/tabbarios-item"
              },
              "next": {
                "title": "TextInput",
                "permalink": "/docs/0.60/textinput"
              }
            },
            {
              "unversionedId": "text-style-props",
              "id": "version-0.60/text-style-props",
              "isDocsHomePage": false,
              "title": "Text Style Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/text-style-props.md",
              "slug": "/text-style-props",
              "permalink": "/docs/0.60/text-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/text-style-props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Systrace",
                "permalink": "/docs/0.60/systrace"
              },
              "next": {
                "title": "TimePickerAndroid",
                "permalink": "/docs/0.60/timepickerandroid"
              }
            },
            {
              "unversionedId": "textinput",
              "id": "version-0.60/textinput",
              "isDocsHomePage": false,
              "title": "TextInput",
              "description": "A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.",
              "source": "@site/versioned_docs/version-0.60/textinput.md",
              "slug": "/textinput",
              "permalink": "/docs/0.60/textinput",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/textinput.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "Text",
                "permalink": "/docs/0.60/text"
              },
              "next": {
                "title": "ToolbarAndroid",
                "permalink": "/docs/0.60/toolbarandroid"
              }
            },
            {
              "unversionedId": "timepickerandroid",
              "id": "version-0.60/timepickerandroid",
              "isDocsHomePage": false,
              "title": "TimePickerAndroid",
              "description": "Opens the standard Android time picker dialog.",
              "source": "@site/versioned_docs/version-0.60/timepickerandroid.md",
              "slug": "/timepickerandroid",
              "permalink": "/docs/0.60/timepickerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/timepickerandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Text Style Props",
                "permalink": "/docs/0.60/text-style-props"
              },
              "next": {
                "title": "ToastAndroid",
                "permalink": "/docs/0.60/toastandroid"
              }
            },
            {
              "unversionedId": "timers",
              "id": "version-0.60/timers",
              "isDocsHomePage": false,
              "title": "Timers",
              "description": "Timers are an important part of an application and React Native implements the browser timers.",
              "source": "@site/versioned_docs/version-0.60/timers.md",
              "slug": "/timers",
              "permalink": "/docs/0.60/timers",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/timers.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Optimizing Flatlist Configuration",
                "permalink": "/docs/0.60/optimizing-flatlist-configuration"
              },
              "next": {
                "title": "Debugging",
                "permalink": "/docs/0.60/debugging"
              }
            },
            {
              "unversionedId": "toastandroid",
              "id": "version-0.60/toastandroid",
              "isDocsHomePage": false,
              "title": "ToastAndroid",
              "description": "This exposes the native ToastAndroid module as a JS module. This has a function 'show' which takes the following parameters:",
              "source": "@site/versioned_docs/version-0.60/toastandroid.md",
              "slug": "/toastandroid",
              "permalink": "/docs/0.60/toastandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/toastandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "TimePickerAndroid",
                "permalink": "/docs/0.60/timepickerandroid"
              },
              "next": {
                "title": "Transforms",
                "permalink": "/docs/0.60/transforms"
              }
            },
            {
              "unversionedId": "toolbarandroid",
              "id": "version-0.60/toolbarandroid",
              "isDocsHomePage": false,
              "title": "ToolbarAndroid",
              "description": "NOTE: Toolbar Android has been deprecated and removed from the package since React Native v0.61.0. Use @react-native-community/toolbar-android instead.",
              "source": "@site/versioned_docs/version-0.60/toolbarandroid.md",
              "slug": "/toolbarandroid",
              "permalink": "/docs/0.60/toolbarandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/toolbarandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TextInput",
                "permalink": "/docs/0.60/textinput"
              },
              "next": {
                "title": "TouchableHighlight",
                "permalink": "/docs/0.60/touchablehighlight"
              }
            },
            {
              "unversionedId": "touchablehighlight",
              "id": "version-0.60/touchablehighlight",
              "isDocsHomePage": false,
              "title": "TouchableHighlight",
              "description": "A wrapper for making views respond properly to touches. On press down, the opacity of the wrapped view is decreased, which allows the underlay color to show through, darkening or tinting the view.",
              "source": "@site/versioned_docs/version-0.60/touchablehighlight.md",
              "slug": "/touchablehighlight",
              "permalink": "/docs/0.60/touchablehighlight",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/touchablehighlight.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ToolbarAndroid",
                "permalink": "/docs/0.60/toolbarandroid"
              },
              "next": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/0.60/touchablenativefeedback"
              }
            },
            {
              "unversionedId": "touchablenativefeedback",
              "id": "version-0.60/touchablenativefeedback",
              "isDocsHomePage": false,
              "title": "TouchableNativeFeedback",
              "description": "A wrapper for making views respond properly to touches (Android only). On Android this component uses native state drawable to display touch feedback.",
              "source": "@site/versioned_docs/version-0.60/touchablenativefeedback.md",
              "slug": "/touchablenativefeedback",
              "permalink": "/docs/0.60/touchablenativefeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/touchablenativefeedback.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TouchableHighlight",
                "permalink": "/docs/0.60/touchablehighlight"
              },
              "next": {
                "title": "TouchableOpacity",
                "permalink": "/docs/0.60/touchableopacity"
              }
            },
            {
              "unversionedId": "touchableopacity",
              "id": "version-0.60/touchableopacity",
              "isDocsHomePage": false,
              "title": "TouchableOpacity",
              "description": "A wrapper for making views respond properly to touches. On press down, the opacity of the wrapped view is decreased, dimming it.",
              "source": "@site/versioned_docs/version-0.60/touchableopacity.md",
              "slug": "/touchableopacity",
              "permalink": "/docs/0.60/touchableopacity",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/touchableopacity.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TouchableNativeFeedback",
                "permalink": "/docs/0.60/touchablenativefeedback"
              },
              "next": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/0.60/touchablewithoutfeedback"
              }
            },
            {
              "unversionedId": "touchablewithoutfeedback",
              "id": "version-0.60/touchablewithoutfeedback",
              "isDocsHomePage": false,
              "title": "TouchableWithoutFeedback",
              "description": "Do not use unless you have a very good reason. All elements that respond to press should have a visual feedback when touched.",
              "source": "@site/versioned_docs/version-0.60/touchablewithoutfeedback.md",
              "slug": "/touchablewithoutfeedback",
              "permalink": "/docs/0.60/touchablewithoutfeedback",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/touchablewithoutfeedback.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TouchableOpacity",
                "permalink": "/docs/0.60/touchableopacity"
              },
              "next": {
                "title": "View",
                "permalink": "/docs/0.60/view"
              }
            },
            {
              "unversionedId": "transforms",
              "id": "version-0.60/transforms",
              "isDocsHomePage": false,
              "title": "Transforms",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/transforms.md",
              "slug": "/transforms",
              "permalink": "/docs/0.60/transforms",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/transforms.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "ToastAndroid",
                "permalink": "/docs/0.60/toastandroid"
              },
              "next": {
                "title": "Vibration",
                "permalink": "/docs/0.60/vibration"
              }
            },
            {
              "unversionedId": "troubleshooting",
              "id": "version-0.60/troubleshooting",
              "isDocsHomePage": false,
              "title": "Troubleshooting",
              "description": "These are some common issues you may run into while setting up React Native. If you encounter something that is not listed here, try searching for the issue in GitHub.",
              "source": "@site/versioned_docs/version-0.60/troubleshooting.md",
              "slug": "/troubleshooting",
              "permalink": "/docs/0.60/troubleshooting",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/troubleshooting.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Upgrading to new React Native versions",
                "permalink": "/docs/0.60/upgrading"
              },
              "next": {
                "title": "Native Modules Setup",
                "permalink": "/docs/0.60/native-modules-setup"
              }
            },
            {
              "unversionedId": "tutorial",
              "id": "version-0.60/tutorial",
              "isDocsHomePage": false,
              "title": "Learn the Basics",
              "description": "React Native is like React, but it uses native components instead of web components as building blocks. So to understand the basic structure of a React Native app, you need to understand some of the basic React concepts, like JSX, components, state, and props. If you already know React, you still need to learn some React-Native-specific stuff, like the native components. This tutorial is aimed at all audiences, whether you have React experience or not.",
              "source": "@site/versioned_docs/version-0.60/tutorial.md",
              "slug": "/tutorial",
              "permalink": "/docs/0.60/tutorial",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/tutorial.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/0.60/getting-started"
              },
              "next": {
                "title": "Style",
                "permalink": "/docs/0.60/style"
              }
            },
            {
              "unversionedId": "typescript",
              "id": "version-0.60/typescript",
              "isDocsHomePage": false,
              "title": "Using TypeScript with React Native",
              "description": "TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",
              "source": "@site/versioned_docs/version-0.60/typescript.md",
              "slug": "/typescript",
              "permalink": "/docs/0.60/typescript",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/typescript.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "JavaScript Environment",
                "permalink": "/docs/0.60/javascript-environment"
              },
              "next": {
                "title": "Direct Manipulation",
                "permalink": "/docs/0.60/direct-manipulation"
              }
            },
            {
              "unversionedId": "upgrading",
              "id": "version-0.60/upgrading",
              "isDocsHomePage": false,
              "title": "Upgrading to new React Native versions",
              "description": "Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Upgrading requires a small amount of effort, but we try to make it straightforward for you.",
              "source": "@site/versioned_docs/version-0.60/upgrading.md",
              "slug": "/upgrading",
              "permalink": "/docs/0.60/upgrading",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/upgrading.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Running On Device",
                "permalink": "/docs/0.60/running-on-device"
              },
              "next": {
                "title": "Troubleshooting",
                "permalink": "/docs/0.60/troubleshooting"
              }
            },
            {
              "unversionedId": "usecolorscheme",
              "id": "version-0.60/usecolorscheme",
              "isDocsHomePage": false,
              "title": "useColorScheme",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.60/usecolorscheme.md",
              "slug": "/usecolorscheme",
              "permalink": "/docs/0.60/usecolorscheme",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/usecolorscheme.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "usewindowdimensions",
              "id": "version-0.60/usewindowdimensions",
              "isDocsHomePage": false,
              "title": "useWindowDimensions",
              "description": "`jsx",
              "source": "@site/versioned_docs/version-0.60/usewindowdimensions.md",
              "slug": "/usewindowdimensions",
              "permalink": "/docs/0.60/usewindowdimensions",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/usewindowdimensions.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "using-a-listview",
              "id": "version-0.60/using-a-listview",
              "isDocsHomePage": false,
              "title": "Using List Views",
              "description": "React Native provides a suite of components for presenting lists of data. Generally, you'll want to use either FlatList or SectionList.",
              "source": "@site/versioned_docs/version-0.60/using-a-listview.md",
              "slug": "/using-a-listview",
              "permalink": "/docs/0.60/using-a-listview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/using-a-listview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Using a ScrollView",
                "permalink": "/docs/0.60/using-a-scrollview"
              },
              "next": {
                "title": "Networking",
                "permalink": "/docs/0.60/network"
              }
            },
            {
              "unversionedId": "using-a-scrollview",
              "id": "version-0.60/using-a-scrollview",
              "isDocsHomePage": false,
              "title": "Using a ScrollView",
              "description": "The ScrollView is a generic scrolling container that can contain multiple components and views. The scrollable items need not be homogeneous, and you can scroll both vertically and horizontally (by setting the horizontal property).",
              "source": "@site/versioned_docs/version-0.60/using-a-scrollview.md",
              "slug": "/using-a-scrollview",
              "permalink": "/docs/0.60/using-a-scrollview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/using-a-scrollview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/docs",
              "previous": {
                "title": "Handling Touches",
                "permalink": "/docs/0.60/handling-touches"
              },
              "next": {
                "title": "Using List Views",
                "permalink": "/docs/0.60/using-a-listview"
              }
            },
            {
              "unversionedId": "vibration",
              "id": "version-0.60/vibration",
              "isDocsHomePage": false,
              "title": "Vibration",
              "description": "The Vibration API is exposed at Vibration.vibrate(). The vibration is synchronous so this method will return immediately.",
              "source": "@site/versioned_docs/version-0.60/vibration.md",
              "slug": "/vibration",
              "permalink": "/docs/0.60/vibration",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/vibration.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Transforms",
                "permalink": "/docs/0.60/transforms"
              },
              "next": {
                "title": "View Style Props",
                "permalink": "/docs/0.60/view-style-props"
              }
            },
            {
              "unversionedId": "vibrationios",
              "id": "version-0.60/vibrationios",
              "isDocsHomePage": false,
              "title": "VibrationIOS",
              "description": "NOTE: VibrationIOS is being deprecated. Use Vibration instead.",
              "source": "@site/versioned_docs/version-0.60/vibrationios.md",
              "slug": "/vibrationios",
              "permalink": "/docs/0.60/vibrationios",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/vibrationios.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            },
            {
              "unversionedId": "view",
              "id": "version-0.60/view",
              "isDocsHomePage": false,
              "title": "View",
              "description": "The most fundamental component for building a UI, View is a container that supports layout with flexbox, style, some touch handling, and accessibility controls. View maps directly to the native view equivalent on whatever platform React Native is running on, whether that is a UIView, `, android.view`, etc.",
              "source": "@site/versioned_docs/version-0.60/view.md",
              "slug": "/view",
              "permalink": "/docs/0.60/view",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/view.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "TouchableWithoutFeedback",
                "permalink": "/docs/0.60/touchablewithoutfeedback"
              },
              "next": {
                "title": "ViewPagerAndroid",
                "permalink": "/docs/0.60/viewpagerandroid"
              }
            },
            {
              "unversionedId": "view-style-props",
              "id": "version-0.60/view-style-props",
              "isDocsHomePage": false,
              "title": "View Style Props",
              "description": "Reference",
              "source": "@site/versioned_docs/version-0.60/view-style-props.md",
              "slug": "/view-style-props",
              "permalink": "/docs/0.60/view-style-props",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/view-style-props.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/api",
              "previous": {
                "title": "Vibration",
                "permalink": "/docs/0.60/vibration"
              }
            },
            {
              "unversionedId": "viewpagerandroid",
              "id": "version-0.60/viewpagerandroid",
              "isDocsHomePage": false,
              "title": "ViewPagerAndroid",
              "description": "Deprecated. Use react-native-community/react-native-viewpager instead.",
              "source": "@site/versioned_docs/version-0.60/viewpagerandroid.md",
              "slug": "/viewpagerandroid",
              "permalink": "/docs/0.60/viewpagerandroid",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/viewpagerandroid.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "View",
                "permalink": "/docs/0.60/view"
              },
              "next": {
                "title": "VirtualizedList",
                "permalink": "/docs/0.60/virtualizedlist"
              }
            },
            {
              "unversionedId": "virtualizedlist",
              "id": "version-0.60/virtualizedlist",
              "isDocsHomePage": false,
              "title": "VirtualizedList",
              "description": "Base implementation for the more convenient ` and  components, which are also better documented. In general, this should only really be used if you need more flexibility than FlatList` provides, e.g. for use with immutable data instead of plain arrays.",
              "source": "@site/versioned_docs/version-0.60/virtualizedlist.md",
              "slug": "/virtualizedlist",
              "permalink": "/docs/0.60/virtualizedlist",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/virtualizedlist.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055,
              "sidebar": "version-0.60/components",
              "previous": {
                "title": "ViewPagerAndroid",
                "permalink": "/docs/0.60/viewpagerandroid"
              }
            },
            {
              "unversionedId": "webview",
              "id": "version-0.60/webview",
              "isDocsHomePage": false,
              "title": "🚧 WebView",
              "description": "Deprecated. Use react-native-community/react-native-webview instead.",
              "source": "@site/versioned_docs/version-0.60/webview.md",
              "slug": "/webview",
              "permalink": "/docs/0.60/webview",
              "editUrl": "https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/webview.md",
              "version": "0.60",
              "lastUpdatedAt": 1539502055
            }
          ]
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogPosts": [
        {
          "id": "React Native Documentation Update",
          "metadata": {
            "permalink": "/blog/2020/07/23/docs-update",
            "source": "@site/blog/2020-07-23-docs-update.md",
            "description": "Last year we conducted user interviews and sent out a survey to learn more about how and when people use the React Native docs. With the data and guidance gleaned from 24 interviews and over 3000 survey responses, we've been able to work to improve React Native's documentation, and we're excited to share that progress today:",
            "date": "2020-07-23T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native Documentation Update",
            "readingTime": 2.805,
            "truncated": true,
            "nextItem": {
              "title": "React Native Team Principles",
              "permalink": "/blog/2020/07/17/react-native-principles"
            }
          }
        },
        {
          "id": "React Native Team Principles",
          "metadata": {
            "permalink": "/blog/2020/07/17/react-native-principles",
            "source": "@site/blog/2020-07-17-react-native-principles.md",
            "description": "The React Native team at Facebook is guided by principles that help determine how we prioritize our work on React Native. These principles represent our team specifically and do not necessarily represent every stakeholder in the React Native community. We are sharing these principles here to be more transparent about what drives us, how we make decisions, and how we focus our efforts.",
            "date": "2020-07-17T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native Team Principles",
            "readingTime": 4.54,
            "truncated": false,
            "prevItem": {
              "title": "React Native Documentation Update",
              "permalink": "/blog/2020/07/23/docs-update"
            },
            "nextItem": {
              "title": "Announcing React Native 0.63 with LogBox",
              "permalink": "/blog/2020/07/06/version-0.63"
            }
          }
        },
        {
          "id": "Announcing React Native 0.63 with LogBox",
          "metadata": {
            "permalink": "/blog/2020/07/06/version-0.63",
            "source": "@site/blog/2020-07-06-version-0.63.md",
            "description": "Today we’re releasing React Native 0.63 that ships with LogBox turned on by default.",
            "date": "2020-07-06T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              },
              {
                "label": "release",
                "permalink": "/blog/tags/release"
              }
            ],
            "title": "Announcing React Native 0.63 with LogBox",
            "readingTime": 7.12,
            "truncated": false,
            "prevItem": {
              "title": "React Native Team Principles",
              "permalink": "/blog/2020/07/17/react-native-principles"
            },
            "nextItem": {
              "title": "Announcing React Native 0.62 with Flipper",
              "permalink": "/blog/2020/03/26/version-0.62"
            }
          }
        },
        {
          "id": "Announcing React Native 0.62 with Flipper",
          "metadata": {
            "permalink": "/blog/2020/03/26/version-0.62",
            "source": "@site/blog/2020-03-26-version-0.62.md",
            "description": "Today we’re releasing React Native version 0.62 which includes support for Flipper by default.",
            "date": "2020-03-26T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              },
              {
                "label": "release",
                "permalink": "/blog/tags/release"
              }
            ],
            "title": "Announcing React Native 0.62 with Flipper",
            "readingTime": 4.255,
            "truncated": false,
            "prevItem": {
              "title": "Announcing React Native 0.63 with LogBox",
              "permalink": "/blog/2020/07/06/version-0.63"
            },
            "nextItem": {
              "title": "Meet Doctor, a new React Native command",
              "permalink": "/blog/2019/11/18/react-native-doctor"
            }
          }
        },
        {
          "id": "Meet Doctor, a new React Native command",
          "metadata": {
            "permalink": "/blog/2019/11/18/react-native-doctor",
            "source": "@site/blog/2019-11-18-react-native-doctor.md",
            "description": "After over 20 pull requests from 6 contributors in the React Native Community, we're excited to launch react-native doctor, a new command to help you out with getting started, troubleshooting and automatically fixing errors with your development environment. The doctor command is heavily inspired by Expo and Homebrew's own doctor command with a pinch of UI inspired by Jest.",
            "date": "2019-11-18T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "Meet Doctor, a new React Native command",
            "readingTime": 1.75,
            "truncated": true,
            "prevItem": {
              "title": "Announcing React Native 0.62 with Flipper",
              "permalink": "/blog/2020/03/26/version-0.62"
            },
            "nextItem": {
              "title": "Announcing React Native 0.61 with Fast Refresh",
              "permalink": "/blog/2019/09/18/version-0.61"
            }
          }
        },
        {
          "id": "Announcing React Native 0.61 with Fast Refresh",
          "metadata": {
            "permalink": "/blog/2019/09/18/version-0.61",
            "source": "@site/blog/2019-09-18-version-0.61.md",
            "description": "We’re excited to announce React Native 0.61, which includes a new reloading experience we’re calling Fast Refresh.",
            "date": "2019-09-18T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              },
              {
                "label": "release",
                "permalink": "/blog/tags/release"
              }
            ],
            "title": "Announcing React Native 0.61 with Fast Refresh",
            "readingTime": 2.78,
            "truncated": false,
            "prevItem": {
              "title": "Meet Doctor, a new React Native command",
              "permalink": "/blog/2019/11/18/react-native-doctor"
            },
            "nextItem": {
              "title": "Meet Hermes, a new JavaScript Engine optimized for React Native",
              "permalink": "/blog/2019/07/17/hermes"
            }
          }
        },
        {
          "id": "Meet Hermes, a new JavaScript Engine optimized for React Native",
          "metadata": {
            "permalink": "/blog/2019/07/17/hermes",
            "source": "@site/blog/2019-07-17-hermes.md",
            "description": "Last week at Chain React we announced Hermes, an open source JavaScript engine we’ve been working on at Facebook. It’s a small and lightweight JavaScript engine optimized for running React Native on Android. Check it out!",
            "date": "2019-07-17T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "Meet Hermes, a new JavaScript Engine optimized for React Native",
            "readingTime": 1.125,
            "truncated": false,
            "prevItem": {
              "title": "Announcing React Native 0.61 with Fast Refresh",
              "permalink": "/blog/2019/09/18/version-0.61"
            },
            "nextItem": {
              "title": "Announcing React Native 0.60",
              "permalink": "/blog/2019/07/03/version-60"
            }
          }
        },
        {
          "id": "Announcing React Native 0.60",
          "metadata": {
            "permalink": "/blog/2019/07/03/version-60",
            "source": "@site/blog/2019-07-03-version-60.md",
            "description": "After months of hard work from hundreds of contributors, the React Native Core team is proud to announce the release of version 0.60. This release handles significant migrations for both Android and iOS platforms, and many issues are resolved too. This blog post covers the highlights of the release. As always though, refer to the changelog for more detailed information. Finally, thank you contributors for helping us to make this milestone!",
            "date": "2019-07-03T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              },
              {
                "label": "release",
                "permalink": "/blog/tags/release"
              }
            ],
            "title": "Announcing React Native 0.60",
            "readingTime": 4.03,
            "truncated": false,
            "prevItem": {
              "title": "Meet Hermes, a new JavaScript Engine optimized for React Native",
              "permalink": "/blog/2019/07/17/hermes"
            },
            "nextItem": {
              "title": "React Native Open Source Update June 2019",
              "permalink": "/blog/2019/06/12/react-native-open-source-update"
            }
          }
        },
        {
          "id": "React Native Open Source Update June 2019",
          "metadata": {
            "permalink": "/blog/2019/06/12/react-native-open-source-update",
            "source": "@site/blog/2019-06-12-react-native-open-source-update.md",
            "description": "Code & Community Health",
            "date": "2019-06-12T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native Open Source Update June 2019",
            "readingTime": 7.16,
            "truncated": false,
            "prevItem": {
              "title": "Announcing React Native 0.60",
              "permalink": "/blog/2019/07/03/version-60"
            },
            "nextItem": {
              "title": "React Native at F8 and Open Source Podcast",
              "permalink": "/blog/2019/05/01/react-native-at-f8-and-podcast"
            }
          }
        },
        {
          "id": "React Native at F8 and Open Source Podcast",
          "metadata": {
            "permalink": "/blog/2019/05/01/react-native-at-f8-and-podcast",
            "source": "@site/blog/2019-05-01-react-native-at-f8-and-podcast.md",
            "description": "This week, Eli White gave a talk at F8 2019 about React Native in Facebook's Android and iOS applications. We are excited to share what we've been up to for the past two years and what we're doing next.",
            "date": "2019-05-01T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native at F8 and Open Source Podcast",
            "readingTime": 2.075,
            "truncated": false,
            "prevItem": {
              "title": "React Native Open Source Update June 2019",
              "permalink": "/blog/2019/06/12/react-native-open-source-update"
            },
            "nextItem": {
              "title": "Releasing React Native 0.59",
              "permalink": "/blog/2019/03/12/releasing-react-native-059"
            }
          }
        },
        {
          "id": "Releasing React Native 0.59",
          "metadata": {
            "permalink": "/blog/2019/03/12/releasing-react-native-059",
            "source": "@site/blog/2019-03-12-releasing-react-native-059.md",
            "description": "Welcome to the 0.59 release of React Native! This is another big release with 644 commits by 88 contributors. Contributions also come in other forms, so thank you for maintaining issues, fostering communities, and teaching people about React Native. This month brings a number of highly anticipated changes, and we hope you enjoy them.",
            "date": "2019-03-12T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              },
              {
                "label": "release",
                "permalink": "/blog/tags/release"
              }
            ],
            "title": "Releasing React Native 0.59",
            "readingTime": 5.115,
            "truncated": false,
            "prevItem": {
              "title": "React Native at F8 and Open Source Podcast",
              "permalink": "/blog/2019/05/01/react-native-at-f8-and-podcast"
            },
            "nextItem": {
              "title": "React Native Open Source Update March 2019",
              "permalink": "/blog/2019/03/01/react-native-open-source-update"
            }
          }
        },
        {
          "id": "React Native Open Source Update March 2019",
          "metadata": {
            "permalink": "/blog/2019/03/01/react-native-open-source-update",
            "source": "@site/blog/2019-03-01-react-native-open-source-update.md",
            "description": "We announced our React Native Open Source roadmap in Q4 2018 after deciding to invest more in the React Native open source community.",
            "date": "2019-03-01T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native Open Source Update March 2019",
            "readingTime": 4.695,
            "truncated": false,
            "prevItem": {
              "title": "Releasing React Native 0.59",
              "permalink": "/blog/2019/03/12/releasing-react-native-059"
            },
            "nextItem": {
              "title": "The State of the React Native Community in 2018",
              "permalink": "/blog/2019/01/07/state-of-react-native-community"
            }
          }
        },
        {
          "id": "The State of the React Native Community in 2018",
          "metadata": {
            "permalink": "/blog/2019/01/07/state-of-react-native-community",
            "source": "@site/blog/2019-01-07-state-of-react-native-community.md",
            "description": "In 2018 the React Native Community made a number of changes to the way we develop and communicate about React Native. We believe that a few years from now we will look back and see that this shift was a turning point for React Native.",
            "date": "2019-01-07T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "The State of the React Native Community in 2018",
            "readingTime": 3.25,
            "truncated": false,
            "prevItem": {
              "title": "React Native Open Source Update March 2019",
              "permalink": "/blog/2019/03/01/react-native-open-source-update"
            },
            "nextItem": {
              "title": "Open Source Roadmap",
              "permalink": "/blog/2018/11/01/oss-roadmap"
            }
          }
        },
        {
          "id": "Open Source Roadmap",
          "metadata": {
            "permalink": "/blog/2018/11/01/oss-roadmap",
            "source": "@site/blog/2018-11-01-oss-roadmap.md",
            "description": "This year, the React Native team has focused on a large scale re-architecture of React Native. As Sophie mentioned in her State of React Native post, we've sketched out a plan to better support the thriving population of React Native users and collaborators outside of Facebook. It's now time to share more details about what we've been working on. Before I do so, I'd like to lay out our long-term vision for React Native in open source.",
            "date": "2018-11-01T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "Open Source Roadmap",
            "readingTime": 4.295,
            "truncated": false,
            "prevItem": {
              "title": "The State of the React Native Community in 2018",
              "permalink": "/blog/2019/01/07/state-of-react-native-community"
            },
            "nextItem": {
              "title": "Introducing new iOS WebViews",
              "permalink": "/blog/2018/08/27/wkwebview"
            }
          }
        },
        {
          "id": "Introducing new iOS WebViews",
          "metadata": {
            "permalink": "/blog/2018/08/27/wkwebview",
            "source": "@site/blog/2018-08-27-wkwebview.md",
            "description": "For a long time now, Apple has discouraged using UIWebViews in favor of WKWebView. In iOS 12, which will be released in the upcoming months, UIWebViews will be formally deprecated. React Native's iOS WebView implementation relies heavily on the UIWebView class. Therefore, in light of these developments, we've built a new native iOS backend to the WebView React Native component that uses WKWebView.",
            "date": "2018-08-27T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Introducing new iOS WebViews",
            "readingTime": 1.795,
            "truncated": false,
            "prevItem": {
              "title": "Open Source Roadmap",
              "permalink": "/blog/2018/11/01/oss-roadmap"
            },
            "nextItem": {
              "title": "Accessibility API Updates",
              "permalink": "/blog/2018/08/13/react-native-accessibility-updates"
            }
          }
        },
        {
          "id": "Accessibility API Updates",
          "metadata": {
            "permalink": "/blog/2018/08/13/react-native-accessibility-updates",
            "source": "@site/blog/2018-08-13-react-native-accessibility-updates.md",
            "description": "Motivation",
            "date": "2018-08-13T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Accessibility API Updates",
            "readingTime": 6.435,
            "truncated": false,
            "prevItem": {
              "title": "Introducing new iOS WebViews",
              "permalink": "/blog/2018/08/27/wkwebview"
            },
            "nextItem": {
              "title": "Releasing 0.56",
              "permalink": "/blog/2018/07/04/releasing-react-native-056"
            }
          }
        },
        {
          "id": "Releasing 0.56",
          "metadata": {
            "permalink": "/blog/2018/07/04/releasing-react-native-056",
            "source": "@site/blog/2018-07-04-releasing-react-native-056.md",
            "description": "The long-awaited 0.56 version of React Native is now available 🎉. This blog post highlights some of the changes introduced in this new release. We also want to take the opportunity to explain what has kept us busy since March.",
            "date": "2018-07-04T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              },
              {
                "label": "release",
                "permalink": "/blog/tags/release"
              }
            ],
            "title": "Releasing 0.56",
            "readingTime": 4.655,
            "truncated": false,
            "prevItem": {
              "title": "Accessibility API Updates",
              "permalink": "/blog/2018/08/13/react-native-accessibility-updates"
            },
            "nextItem": {
              "title": "State of React Native 2018",
              "permalink": "/blog/2018/06/14/state-of-react-native-2018"
            }
          }
        },
        {
          "id": "State of React Native 2018",
          "metadata": {
            "permalink": "/blog/2018/06/14/state-of-react-native-2018",
            "source": "@site/blog/2018-06-14-state-of-react-native-2018.md",
            "description": "It's been a while since we last published a status update about React Native.",
            "date": "2018-06-14T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "State of React Native 2018",
            "readingTime": 4.68,
            "truncated": false,
            "prevItem": {
              "title": "Releasing 0.56",
              "permalink": "/blog/2018/07/04/releasing-react-native-056"
            },
            "nextItem": {
              "title": "Using TypeScript with React Native",
              "permalink": "/blog/2018/05/07/using-typescript-with-react-native"
            }
          }
        },
        {
          "id": "Using TypeScript with React Native",
          "metadata": {
            "permalink": "/blog/2018/05/07/using-typescript-with-react-native",
            "source": "@site/blog/2018-05-07-using-typescript-with-react-native.md",
            "description": "JavaScript! We all love it. But some of us also love types. Luckily, options exist to add stronger types to JavaScript. My favourite is TypeScript, but React Native supports Flow out of the box. Which you prefer is a matter of preference, they each have their own approach on how to add the magic of types to JavaScript. Today, we're going to look at how to use TypeScript in React Native apps.",
            "date": "2018-05-07T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Using TypeScript with React Native",
            "readingTime": 7.365,
            "truncated": false,
            "prevItem": {
              "title": "State of React Native 2018",
              "permalink": "/blog/2018/06/14/state-of-react-native-2018"
            },
            "nextItem": {
              "title": "Built with React Native - The Build.com app",
              "permalink": "/blog/2018/04/09/build-com-app"
            }
          }
        },
        {
          "id": "Built with React Native - The Build.com app",
          "metadata": {
            "permalink": "/blog/2018/04/09/build-com-app",
            "source": "@site/blog/2018-04-09-build-com-app.md",
            "description": "Build.com, headquartered in Chico, California, is one of the largest online retailers for home improvement items. The team has had a strong web-centric business for 18 years and began thinking about a mobile App in 2015. Building unique Android and iOS apps wasn’t practical due to our small team and limited native experience. Instead, we decided to take a risk on the very new React Native framework. Our initial commit was on August 12, 2015 using React Native v0.8.0! We were live in both App Stores on October 15, 2016. Over the last two years, we’ve continued to upgrade and expand the app. We are currently on React Native version 0.53.0.",
            "date": "2018-04-09T00:00:00.000Z",
            "tags": [
              {
                "label": "showcase",
                "permalink": "/blog/tags/showcase"
              }
            ],
            "title": "Built with React Native - The Build.com app",
            "readingTime": 4.97,
            "truncated": false,
            "prevItem": {
              "title": "Using TypeScript with React Native",
              "permalink": "/blog/2018/05/07/using-typescript-with-react-native"
            },
            "nextItem": {
              "title": "Building <InputAccessoryView> For React Native",
              "permalink": "/blog/2018/03/22/building-input-accessory-view-for-react-native"
            }
          }
        },
        {
          "id": "Building <InputAccessoryView> For React Native",
          "metadata": {
            "permalink": "/blog/2018/03/22/building-input-accessory-view-for-react-native",
            "source": "@site/blog/2018-03-22-building-input-accessory-view-for-react-native.md",
            "description": "Motivation",
            "date": "2018-03-22T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Building <InputAccessoryView> For React Native",
            "readingTime": 5.875,
            "truncated": false,
            "prevItem": {
              "title": "Built with React Native - The Build.com app",
              "permalink": "/blog/2018/04/09/build-com-app"
            },
            "nextItem": {
              "title": "Using AWS with React Native",
              "permalink": "/blog/2018/03/05/AWS-app-sync"
            }
          }
        },
        {
          "id": "Using AWS with React Native",
          "metadata": {
            "permalink": "/blog/2018/03/05/AWS-app-sync",
            "source": "@site/blog/2018-03-05-AWS-app-sync.md",
            "description": "AWS is well known in the technology industry as a provider of cloud services. These include compute, storage, and database technologies, as well as fully managed serverless offerings. The AWS Mobile team has been working closely with customers and members of the JavaScript ecosystem to make cloud-connected mobile and web applications more secure, scalable, and easier to develop and deploy. We began with a complete starter kit, but have a few more recent developments.",
            "date": "2018-03-05T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Using AWS with React Native",
            "readingTime": 8.8,
            "truncated": false,
            "prevItem": {
              "title": "Building <InputAccessoryView> For React Native",
              "permalink": "/blog/2018/03/22/building-input-accessory-view-for-react-native"
            },
            "nextItem": {
              "title": "Implementing Twitter’s App Loading Animation in React Native",
              "permalink": "/blog/2018/01/18/implementing-twitters-app-loading-animation-in-react-native"
            }
          }
        },
        {
          "id": "Implementing Twitter’s App Loading Animation in React Native",
          "metadata": {
            "permalink": "/blog/2018/01/18/implementing-twitters-app-loading-animation-in-react-native",
            "source": "@site/blog/2018-01-18-implementing-twitters-app-loading-animation-in-react-native.md",
            "description": "Twitter’s iOS app has a loading animation I quite enjoy.",
            "date": "2018-01-18T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Implementing Twitter’s App Loading Animation in React Native",
            "readingTime": 10.895,
            "truncated": false,
            "prevItem": {
              "title": "Using AWS with React Native",
              "permalink": "/blog/2018/03/05/AWS-app-sync"
            },
            "nextItem": {
              "title": "React Native Monthly #6",
              "permalink": "/blog/2018/01/09/react-native-monthly-6"
            }
          }
        },
        {
          "id": "React Native Monthly #6",
          "metadata": {
            "permalink": "/blog/2018/01/09/react-native-monthly-6",
            "source": "@site/blog/2018-01-09-react-native-monthly-6.md",
            "description": "The React Native monthly meeting is still going strong! Make sure to check a note on the bottom of this post for the next sessions.",
            "date": "2018-01-09T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Monthly #6",
            "readingTime": 3.185,
            "truncated": false,
            "prevItem": {
              "title": "Implementing Twitter’s App Loading Animation in React Native",
              "permalink": "/blog/2018/01/18/implementing-twitters-app-loading-animation-in-react-native"
            },
            "nextItem": {
              "title": "React Native Monthly #5",
              "permalink": "/blog/2017/11/06/react-native-monthly-5"
            }
          }
        },
        {
          "id": "React Native Monthly #5",
          "metadata": {
            "permalink": "/blog/2017/11/06/react-native-monthly-5",
            "source": "@site/blog/2017-11-06-react-native-monthly-5.md",
            "description": "The React Native monthly meeting continues! Let's see what our teams are up to.",
            "date": "2017-11-06T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Monthly #5",
            "readingTime": 3.015,
            "truncated": false,
            "prevItem": {
              "title": "React Native Monthly #6",
              "permalink": "/blog/2018/01/09/react-native-monthly-6"
            },
            "nextItem": {
              "title": "React Native Monthly #4",
              "permalink": "/blog/2017/09/21/react-native-monthly-4"
            }
          }
        },
        {
          "id": "React Native Monthly #4",
          "metadata": {
            "permalink": "/blog/2017/09/21/react-native-monthly-4",
            "source": "@site/blog/2017-09-21-react-native-monthly-4.md",
            "description": "The React Native monthly meeting continues! Here are the notes from each team:",
            "date": "2017-09-21T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Monthly #4",
            "readingTime": 2.54,
            "truncated": false,
            "prevItem": {
              "title": "React Native Monthly #5",
              "permalink": "/blog/2017/11/06/react-native-monthly-5"
            },
            "nextItem": {
              "title": "React Native Monthly #3",
              "permalink": "/blog/2017/08/30/react-native-monthly-3"
            }
          }
        },
        {
          "id": "React Native Monthly #3",
          "metadata": {
            "permalink": "/blog/2017/08/30/react-native-monthly-3",
            "source": "@site/blog/2017-08-30-react-native-monthly-3.md",
            "description": "The React Native monthly meeting continues! This month's meeting was a bit shorter as most of our teams were busy shipping. Next month, we are at React Native EU conference in Wroclaw, Poland. Make sure to grab a ticket and see you there in person! Meanwhile, let's see what our teams are up to.",
            "date": "2017-08-30T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Monthly #3",
            "readingTime": 4.1,
            "truncated": false,
            "prevItem": {
              "title": "React Native Monthly #4",
              "permalink": "/blog/2017/09/21/react-native-monthly-4"
            },
            "nextItem": {
              "title": "React Native Performance in Marketplace",
              "permalink": "/blog/2017/08/07/react-native-performance-in-marketplace"
            }
          }
        },
        {
          "id": "React Native Performance in Marketplace",
          "metadata": {
            "permalink": "/blog/2017/08/07/react-native-performance-in-marketplace",
            "source": "@site/blog/2017-08-07-react-native-performance-in-marketplace.md",
            "description": "React Native is used in multiple places across multiple apps in the Facebook family including a top level tab in the main Facebook apps. Our focus for this post is a highly visible product, Marketplace. It is available in a dozen or so countries and enables users to discover products and services provided by other users.",
            "date": "2017-08-07T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Performance in Marketplace",
            "readingTime": 4.86,
            "truncated": false,
            "prevItem": {
              "title": "React Native Monthly #3",
              "permalink": "/blog/2017/08/30/react-native-monthly-3"
            },
            "nextItem": {
              "title": "React Native Monthly #2",
              "permalink": "/blog/2017/07/28/react-native-monthly-2"
            }
          }
        },
        {
          "id": "React Native Monthly #2",
          "metadata": {
            "permalink": "/blog/2017/07/28/react-native-monthly-2",
            "source": "@site/blog/2017-07-28-react-native-monthly-2.md",
            "description": "The React Native monthly meeting continues! On this session, we were joined by Infinite Red, great minds behind Chain React, the React Native Conference. As most of the people here were presenting talks at Chain React, we pushed the meeting to a week later. Talks from the conference have been posted online and I encourage you to check them out. So, let's see what our teams are up to.",
            "date": "2017-07-28T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Monthly #2",
            "readingTime": 7.565,
            "truncated": false,
            "prevItem": {
              "title": "React Native Performance in Marketplace",
              "permalink": "/blog/2017/08/07/react-native-performance-in-marketplace"
            },
            "nextItem": {
              "title": "React Native Monthly #1",
              "permalink": "/blog/2017/06/21/react-native-monthly-1"
            }
          }
        },
        {
          "id": "React Native Monthly #1",
          "metadata": {
            "permalink": "/blog/2017/06/21/react-native-monthly-1",
            "source": "@site/blog/2017-06-21-react-native-monthly-1.md",
            "description": "At Shoutem, we've been fortunate enough to work with React Native from its very beginnings. We decided we wanted to be part of the amazing community from day one. Soon enough, we realized it's almost impossible to keep up with the pace the community was growing and improving. That's why we decided to organize a monthly meeting where all major React Native contributors can briefly present what their efforts and plans are.",
            "date": "2017-06-21T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "React Native Monthly #1",
            "readingTime": 5.215,
            "truncated": false,
            "prevItem": {
              "title": "React Native Monthly #2",
              "permalink": "/blog/2017/07/28/react-native-monthly-2"
            },
            "nextItem": {
              "title": "Better List Views in React Native",
              "permalink": "/blog/2017/03/13/better-list-views"
            }
          }
        },
        {
          "id": "Better List Views in React Native",
          "metadata": {
            "permalink": "/blog/2017/03/13/better-list-views",
            "source": "@site/blog/2017-03-13-better-list-views.md",
            "description": "Many of you have started playing with some of our new List components already after our teaser announcement in the community group, but we are officially announcing them today! No more ListViews or DataSources, stale rows, ignored bugs, or excessive memory consumption - with the latest React Native March 2017 release candidate (0.43-rc.1) you can pick from the new suite of components what best fits your use-case, with great perf and feature sets out of the box:",
            "date": "2017-03-13T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Better List Views in React Native",
            "readingTime": 5.255,
            "truncated": false,
            "prevItem": {
              "title": "React Native Monthly #1",
              "permalink": "/blog/2017/06/21/react-native-monthly-1"
            },
            "nextItem": {
              "title": "Introducing Create React Native App",
              "permalink": "/blog/2017/03/13/introducing-create-react-native-app"
            }
          }
        },
        {
          "id": "Introducing Create React Native App",
          "metadata": {
            "permalink": "/blog/2017/03/13/introducing-create-react-native-app",
            "source": "@site/blog/2017-03-13-introducing-create-react-native-app.md",
            "description": "Today we’re announcing Create React Native App: a new tool that makes it significantly easier to get started with a React Native project! It’s heavily inspired by the design of Create React App and is the product of a collaboration between Facebook and Expo (formerly Exponent).",
            "date": "2017-03-13T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Introducing Create React Native App",
            "readingTime": 1.815,
            "truncated": false,
            "prevItem": {
              "title": "Better List Views in React Native",
              "permalink": "/blog/2017/03/13/better-list-views"
            },
            "nextItem": {
              "title": "idx: The Existential Function",
              "permalink": "/blog/2017/03/13/idx-the-existential-function"
            }
          }
        },
        {
          "id": "idx: The Existential Function",
          "metadata": {
            "permalink": "/blog/2017/03/13/idx-the-existential-function",
            "source": "@site/blog/2017-03-13-idx-the-existential-function.md",
            "description": "At Facebook, we often need to access deeply nested values in data structures fetched with GraphQL. On the way to accessing these deeply nested values, it is common for one or more intermediate fields to be nullable. These intermediate fields may be null for a variety of reasons, from failed privacy checks to the mere fact that null happens to be the most flexible way to represent non-fatal errors.",
            "date": "2017-03-13T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "idx: The Existential Function",
            "readingTime": 1.89,
            "truncated": false,
            "prevItem": {
              "title": "Introducing Create React Native App",
              "permalink": "/blog/2017/03/13/introducing-create-react-native-app"
            },
            "nextItem": {
              "title": "Using Native Driver for Animated",
              "permalink": "/blog/2017/02/14/using-native-driver-for-animated"
            }
          }
        },
        {
          "id": "Using Native Driver for Animated",
          "metadata": {
            "permalink": "/blog/2017/02/14/using-native-driver-for-animated",
            "source": "@site/blog/2017-02-14-using-native-driver-for-animated.md",
            "description": "For the past year, we've been working on improving performance of animations that use the Animated library. Animations are very important to create a beautiful user experience but can also be hard to do right. We want to make it easy for developers to create performant animations without having to worry about some of their code causing it to lag.",
            "date": "2017-02-14T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Using Native Driver for Animated",
            "readingTime": 6.09,
            "truncated": false,
            "prevItem": {
              "title": "idx: The Existential Function",
              "permalink": "/blog/2017/03/13/idx-the-existential-function"
            },
            "nextItem": {
              "title": "A Monthly Release Cadence: Releasing December and January RC",
              "permalink": "/blog/2017/01/07/monthly-release-cadence"
            }
          }
        },
        {
          "id": "A Monthly Release Cadence: Releasing December and January RC",
          "metadata": {
            "permalink": "/blog/2017/01/07/monthly-release-cadence",
            "source": "@site/blog/2017-01-07-monthly-release-cadence.md",
            "description": "Shortly after React Native was introduced, we started releasing every two weeks to help the community adopt new features, while keeping versions stable for production use. At Facebook we had to stabilize the codebase every two weeks for the release of our production iOS apps, so we decided to release the open source versions at the same pace. Now, many of the Facebook apps ship once per week, especially on Android. Because we ship from master weekly, we need to keep it quite stable. So the bi-weekly release cadence doesn't even benefit internal contributors anymore.",
            "date": "2017-01-07T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "A Monthly Release Cadence: Releasing December and January RC",
            "readingTime": 1.83,
            "truncated": false,
            "prevItem": {
              "title": "Using Native Driver for Animated",
              "permalink": "/blog/2017/02/14/using-native-driver-for-animated"
            },
            "nextItem": {
              "title": "Easier Upgrades Thanks to Git",
              "permalink": "/blog/2016/12/05/easier-upgrades"
            }
          }
        },
        {
          "id": "Easier Upgrades Thanks to Git",
          "metadata": {
            "permalink": "/blog/2016/12/05/easier-upgrades",
            "source": "@site/blog/2016-12-05-easier-upgrades.md",
            "description": "Upgrading to new versions of React Native has been difficult. You might have seen something like this before:",
            "date": "2016-12-05T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "Easier Upgrades Thanks to Git",
            "readingTime": 3.915,
            "truncated": false,
            "prevItem": {
              "title": "A Monthly Release Cadence: Releasing December and January RC",
              "permalink": "/blog/2017/01/07/monthly-release-cadence"
            },
            "nextItem": {
              "title": "Introducing Button, Faster Installs with Yarn, and a Public Roadmap",
              "permalink": "/blog/2016/11/08/introducing-button-yarn-and-a-public-roadmap"
            }
          }
        },
        {
          "id": "Introducing Button, Faster Installs with Yarn, and a Public Roadmap",
          "metadata": {
            "permalink": "/blog/2016/11/08/introducing-button-yarn-and-a-public-roadmap",
            "source": "@site/blog/2016-11-08-introducing-button-yarn-and-a-public-roadmap.md",
            "description": "We have heard from many people that there is so much work happening with React Native, it can be tough to keep track of what's going on. To help communicate what work is in progress, we are now publishing a roadmap for React Native. At a high level, this work can be broken down into three priorities:",
            "date": "2016-11-08T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "Introducing Button, Faster Installs with Yarn, and a Public Roadmap",
            "readingTime": 2.53,
            "truncated": false,
            "prevItem": {
              "title": "Easier Upgrades Thanks to Git",
              "permalink": "/blog/2016/12/05/easier-upgrades"
            },
            "nextItem": {
              "title": "0.36: Headless JS, the Keyboard API, & more",
              "permalink": "/blog/2016/10/25/0.36-headless-js-the-keyboard-api-and-more"
            }
          }
        },
        {
          "id": "0.36: Headless JS, the Keyboard API, & more",
          "metadata": {
            "permalink": "/blog/2016/10/25/0.36-headless-js-the-keyboard-api-and-more",
            "source": "@site/blog/2016-10-25-0.36-headless-js-the-keyboard-api-and-more.md",
            "description": "Today we are releasing React Native 0.36. Read on to learn more about what's new.",
            "date": "2016-10-25T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "0.36: Headless JS, the Keyboard API, & more",
            "readingTime": 2.23,
            "truncated": false,
            "prevItem": {
              "title": "Introducing Button, Faster Installs with Yarn, and a Public Roadmap",
              "permalink": "/blog/2016/11/08/introducing-button-yarn-and-a-public-roadmap"
            },
            "nextItem": {
              "title": "Expo Talks: Adam on Unraveling Navigation",
              "permalink": "/blog/2016/09/08/exponent-talks-unraveling-navigation"
            }
          }
        },
        {
          "id": "Expo Talks: Adam on Unraveling Navigation",
          "metadata": {
            "permalink": "/blog/2016/09/08/exponent-talks-unraveling-navigation",
            "source": "@site/blog/2016-09-08-exponent-talks-unraveling-navigation.md",
            "description": "Adam Miskiewicz from Expo talks about mobile navigation and the ex-navigation React Native library at Expo's office hours last week.",
            "date": "2016-09-08T00:00:00.000Z",
            "tags": [
              {
                "label": "videos",
                "permalink": "/blog/tags/videos"
              }
            ],
            "title": "Expo Talks: Adam on Unraveling Navigation",
            "readingTime": 0.1,
            "truncated": false,
            "prevItem": {
              "title": "0.36: Headless JS, the Keyboard API, & more",
              "permalink": "/blog/2016/10/25/0.36-headless-js-the-keyboard-api-and-more"
            },
            "nextItem": {
              "title": "Right-to-Left Layout Support For React Native Apps",
              "permalink": "/blog/2016/08/19/right-to-left-support-for-react-native-apps"
            }
          }
        },
        {
          "id": "Right-to-Left Layout Support For React Native Apps",
          "metadata": {
            "permalink": "/blog/2016/08/19/right-to-left-support-for-react-native-apps",
            "source": "@site/blog/2016-08-19-right-to-left-support-for-react-native-apps.md",
            "description": "After launching an app to the app stores, internationalization is the next step to further your audience reach. Over 20 countries and numerous people around the world use Right-to-Left (RTL) languages. Thus, making your app support RTL for them is necessary.",
            "date": "2016-08-19T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Right-to-Left Layout Support For React Native Apps",
            "readingTime": 6.63,
            "truncated": false,
            "prevItem": {
              "title": "Expo Talks: Adam on Unraveling Navigation",
              "permalink": "/blog/2016/09/08/exponent-talks-unraveling-navigation"
            },
            "nextItem": {
              "title": "San Francisco Meetup Recap",
              "permalink": "/blog/2016/08/12/react-native-meetup-san-francisco"
            }
          }
        },
        {
          "id": "San Francisco Meetup Recap",
          "metadata": {
            "permalink": "/blog/2016/08/12/react-native-meetup-san-francisco",
            "source": "@site/blog/2016-08-12-react-native-meetup-san-francisco.md",
            "description": "Last week I had the opportunity to attend the React Native Meetup at Zynga’s San Francisco office. With around 200 people in attendance, it served as a great place to meet other developers near me that are also interested in React Native.",
            "date": "2016-08-12T00:00:00.000Z",
            "tags": [
              {
                "label": "events",
                "permalink": "/blog/tags/events"
              }
            ],
            "title": "San Francisco Meetup Recap",
            "readingTime": 8.3,
            "truncated": false,
            "prevItem": {
              "title": "Right-to-Left Layout Support For React Native Apps",
              "permalink": "/blog/2016/08/19/right-to-left-support-for-react-native-apps"
            },
            "nextItem": {
              "title": "Toward Better Documentation",
              "permalink": "/blog/2016/07/06/toward-better-documentation"
            }
          }
        },
        {
          "id": "Toward Better Documentation",
          "metadata": {
            "permalink": "/blog/2016/07/06/toward-better-documentation",
            "source": "@site/blog/2016-07-06-toward-better-documentation.md",
            "description": "Part of having a great developer experience is having great documentation. A lot goes into creating good docs - the ideal documentation is concise, helpful, accurate, complete, and delightful. Recently we've been working hard to make the docs better based on your feedback, and we wanted to share some of the improvements we've made.",
            "date": "2016-07-06T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "Toward Better Documentation",
            "readingTime": 4,
            "truncated": false,
            "prevItem": {
              "title": "San Francisco Meetup Recap",
              "permalink": "/blog/2016/08/12/react-native-meetup-san-francisco"
            },
            "nextItem": {
              "title": "React Native: A year in review",
              "permalink": "/blog/2016/04/13/react-native-a-year-in-review"
            }
          }
        },
        {
          "id": "React Native: A year in review",
          "metadata": {
            "permalink": "/blog/2016/04/13/react-native-a-year-in-review",
            "source": "@site/blog/2016-04-13-react-native-a-year-in-review.md",
            "description": "It's been one year since we open-sourced React Native. What started as an idea with a handful of engineers is now a framework being used by product teams across Facebook and beyond. Today at F8 we announced that Microsoft is bringing React Native to the Windows ecosystem, giving developers the potential to build React Native on Windows PC, Phone, and Xbox. It will also provide open source tools and services such as a React Native extension for Visual Studio Code and CodePush to help developers create React Native apps on the Windows platform. In addition, Samsung is building React Native for its hybrid platform, which will empower developers to build apps for millions of SmartTVs and mobile and wearable devices. We also released the Facebook SDK for React Native, which makes it easier for developers to incorporate Facebook social features like Login, Sharing, App Analytics, and Graph APIs into their apps. In one year, React Native has changed the way developers build on every major platform.",
            "date": "2016-04-13T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native: A year in review",
            "readingTime": 1.19,
            "truncated": false,
            "prevItem": {
              "title": "Toward Better Documentation",
              "permalink": "/blog/2016/07/06/toward-better-documentation"
            },
            "nextItem": {
              "title": "Dive into React Native Performance",
              "permalink": "/blog/2016/03/28/dive-into-react-native-performance"
            }
          }
        },
        {
          "id": "Dive into React Native Performance",
          "metadata": {
            "permalink": "/blog/2016/03/28/dive-into-react-native-performance",
            "source": "@site/blog/2016-03-28-dive-into-react-native-performance.md",
            "description": "React Native allows you to build Android and iOS apps in JavaScript using React and Relay's declarative programming model. This leads to more concise, easier-to-understand code; fast iteration without a compile cycle; and easy sharing of code across multiple platforms. You can ship faster and focus on details that really matter, making your app look and feel fantastic. Optimizing performance is a big part of this. Here is the story of how we made React Native app startup twice as fast.",
            "date": "2016-03-28T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Dive into React Native Performance",
            "readingTime": 1.085,
            "truncated": false,
            "prevItem": {
              "title": "React Native: A year in review",
              "permalink": "/blog/2016/04/13/react-native-a-year-in-review"
            },
            "nextItem": {
              "title": "Introducing Hot Reloading",
              "permalink": "/blog/2016/03/24/introducing-hot-reloading"
            }
          }
        },
        {
          "id": "Introducing Hot Reloading",
          "metadata": {
            "permalink": "/blog/2016/03/24/introducing-hot-reloading",
            "source": "@site/blog/2016-03-24-introducing-hot-reloading.md",
            "description": "React Native's goal is to give you the best possible developer experience. A big part of it is the time it takes between you save a file and be able to see the changes. Our goal is to get this feedback loop to be under 1 second, even as your app grows.",
            "date": "2016-03-24T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Introducing Hot Reloading",
            "readingTime": 8.575,
            "truncated": false,
            "prevItem": {
              "title": "Dive into React Native Performance",
              "permalink": "/blog/2016/03/28/dive-into-react-native-performance"
            },
            "nextItem": {
              "title": "Making React Native apps accessible",
              "permalink": "/blog/2015/11/23/making-react-native-apps-accessible"
            }
          }
        },
        {
          "id": "Making React Native apps accessible",
          "metadata": {
            "permalink": "/blog/2015/11/23/making-react-native-apps-accessible",
            "source": "@site/blog/2015-11-23-making-react-native-apps-accessible.md",
            "description": "With the recent launch of React on web and React Native on mobile, we've provided a new front-end framework for developers to build products. One key aspect of building a robust product is ensuring that anyone can use it, including people who have vision loss or other disabilities. The Accessibility API for React and React Native enables you to make any React-powered experience usable by someone who may use assistive technology, like a screen reader for the blind and visually impaired.",
            "date": "2015-11-23T00:00:00.000Z",
            "tags": [
              {
                "label": "engineering",
                "permalink": "/blog/tags/engineering"
              }
            ],
            "title": "Making React Native apps accessible",
            "readingTime": 1.08,
            "truncated": false,
            "prevItem": {
              "title": "Introducing Hot Reloading",
              "permalink": "/blog/2016/03/24/introducing-hot-reloading"
            },
            "nextItem": {
              "title": "React Native for Android: How we built the first cross-platform React Native app",
              "permalink": "/blog/2015/09/14/react-native-for-android"
            }
          }
        },
        {
          "id": "React Native for Android: How we built the first cross-platform React Native app",
          "metadata": {
            "permalink": "/blog/2015/09/14/react-native-for-android",
            "source": "@site/blog/2015-09-14-react-native-for-android.md",
            "description": "Earlier this year, we introduced React Native for iOS. React Native brings what developers are used to from React on the web — declarative self-contained UI components and fast development cycles — to the mobile platform, while retaining the speed, fidelity, and feel of native applications. Today, we're happy to release React Native for Android.",
            "date": "2015-09-14T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native for Android: How we built the first cross-platform React Native app",
            "readingTime": 0.895,
            "truncated": false,
            "prevItem": {
              "title": "Making React Native apps accessible",
              "permalink": "/blog/2015/11/23/making-react-native-apps-accessible"
            },
            "nextItem": {
              "title": "React Native: Bringing modern web techniques to mobile",
              "permalink": "/blog/2015/03/26/react-native-bringing-modern-web-techniques-to-mobile"
            }
          }
        },
        {
          "id": "React Native: Bringing modern web techniques to mobile",
          "metadata": {
            "permalink": "/blog/2015/03/26/react-native-bringing-modern-web-techniques-to-mobile",
            "source": "@site/blog/2015-03-26-react-native-bringing-modern-web-techniques-to-mobile.md",
            "description": "We introduced React to the world two years ago, and since then it's seen impressive growth, both inside and outside of Facebook. Today, even though no one is forced to use it, new web projects at Facebook are commonly built using React in one form or another, and it's being broadly adopted across the industry. Engineers are choosing to use React every day because it enables them to spend more time focusing on their products and less time fighting with their framework. It wasn't until we'd been building with React for a while, though, that we started to understand what makes it so powerful.",
            "date": "2015-03-26T00:00:00.000Z",
            "tags": [
              {
                "label": "announcement",
                "permalink": "/blog/tags/announcement"
              }
            ],
            "title": "React Native: Bringing modern web techniques to mobile",
            "readingTime": 1.86,
            "truncated": false,
            "prevItem": {
              "title": "React Native for Android: How we built the first cross-platform React Native app",
              "permalink": "/blog/2015/09/14/react-native-for-android"
            }
          }
        }
      ],
      "blogListPaginated": [
        {
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 5,
            "totalCount": 48,
            "previousPage": null,
            "nextPage": "/blog/page/2",
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "React Native Documentation Update",
            "React Native Team Principles",
            "Announcing React Native 0.63 with LogBox",
            "Announcing React Native 0.62 with Flipper",
            "Meet Doctor, a new React Native command",
            "Announcing React Native 0.61 with Fast Refresh",
            "Meet Hermes, a new JavaScript Engine optimized for React Native",
            "Announcing React Native 0.60",
            "React Native Open Source Update June 2019",
            "React Native at F8 and Open Source Podcast"
          ]
        },
        {
          "metadata": {
            "permalink": "/blog/page/2",
            "page": 2,
            "postsPerPage": 10,
            "totalPages": 5,
            "totalCount": 48,
            "previousPage": "/blog",
            "nextPage": "/blog/page/3",
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "Releasing React Native 0.59",
            "React Native Open Source Update March 2019",
            "The State of the React Native Community in 2018",
            "Open Source Roadmap",
            "Introducing new iOS WebViews",
            "Accessibility API Updates",
            "Releasing 0.56",
            "State of React Native 2018",
            "Using TypeScript with React Native",
            "Built with React Native - The Build.com app"
          ]
        },
        {
          "metadata": {
            "permalink": "/blog/page/3",
            "page": 3,
            "postsPerPage": 10,
            "totalPages": 5,
            "totalCount": 48,
            "previousPage": "/blog/page/2",
            "nextPage": "/blog/page/4",
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "Building <InputAccessoryView> For React Native",
            "Using AWS with React Native",
            "Implementing Twitter’s App Loading Animation in React Native",
            "React Native Monthly #6",
            "React Native Monthly #5",
            "React Native Monthly #4",
            "React Native Monthly #3",
            "React Native Performance in Marketplace",
            "React Native Monthly #2",
            "React Native Monthly #1"
          ]
        },
        {
          "metadata": {
            "permalink": "/blog/page/4",
            "page": 4,
            "postsPerPage": 10,
            "totalPages": 5,
            "totalCount": 48,
            "previousPage": "/blog/page/3",
            "nextPage": "/blog/page/5",
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "Better List Views in React Native",
            "Introducing Create React Native App",
            "idx: The Existential Function",
            "Using Native Driver for Animated",
            "A Monthly Release Cadence: Releasing December and January RC",
            "Easier Upgrades Thanks to Git",
            "Introducing Button, Faster Installs with Yarn, and a Public Roadmap",
            "0.36: Headless JS, the Keyboard API, & more",
            "Expo Talks: Adam on Unraveling Navigation",
            "Right-to-Left Layout Support For React Native Apps"
          ]
        },
        {
          "metadata": {
            "permalink": "/blog/page/5",
            "page": 5,
            "postsPerPage": 10,
            "totalPages": 5,
            "totalCount": 48,
            "previousPage": "/blog/page/4",
            "nextPage": null,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "San Francisco Meetup Recap",
            "Toward Better Documentation",
            "React Native: A year in review",
            "Dive into React Native Performance",
            "Introducing Hot Reloading",
            "Making React Native apps accessible",
            "React Native for Android: How we built the first cross-platform React Native app",
            "React Native: Bringing modern web techniques to mobile"
          ]
        }
      ],
      "blogTags": {
        "announcement": {
          "name": "announcement",
          "items": [
            "React Native Documentation Update",
            "React Native Team Principles",
            "Announcing React Native 0.63 with LogBox",
            "Announcing React Native 0.62 with Flipper",
            "Meet Doctor, a new React Native command",
            "Announcing React Native 0.61 with Fast Refresh",
            "Meet Hermes, a new JavaScript Engine optimized for React Native",
            "Announcing React Native 0.60",
            "React Native Open Source Update June 2019",
            "React Native at F8 and Open Source Podcast",
            "Releasing React Native 0.59",
            "React Native Open Source Update March 2019",
            "The State of the React Native Community in 2018",
            "Open Source Roadmap",
            "Releasing 0.56",
            "A Monthly Release Cadence: Releasing December and January RC",
            "Easier Upgrades Thanks to Git",
            "Introducing Button, Faster Installs with Yarn, and a Public Roadmap",
            "0.36: Headless JS, the Keyboard API, & more",
            "Toward Better Documentation",
            "React Native: A year in review",
            "React Native for Android: How we built the first cross-platform React Native app",
            "React Native: Bringing modern web techniques to mobile"
          ],
          "permalink": "/blog/tags/announcement"
        },
        "release": {
          "name": "release",
          "items": [
            "Announcing React Native 0.63 with LogBox",
            "Announcing React Native 0.62 with Flipper",
            "Announcing React Native 0.61 with Fast Refresh",
            "Announcing React Native 0.60",
            "Releasing React Native 0.59",
            "Releasing 0.56"
          ],
          "permalink": "/blog/tags/release"
        },
        "engineering": {
          "name": "engineering",
          "items": [
            "Introducing new iOS WebViews",
            "Accessibility API Updates",
            "State of React Native 2018",
            "Using TypeScript with React Native",
            "Building <InputAccessoryView> For React Native",
            "Using AWS with React Native",
            "Implementing Twitter’s App Loading Animation in React Native",
            "React Native Monthly #6",
            "React Native Monthly #5",
            "React Native Monthly #4",
            "React Native Monthly #3",
            "React Native Performance in Marketplace",
            "React Native Monthly #2",
            "React Native Monthly #1",
            "Better List Views in React Native",
            "Introducing Create React Native App",
            "idx: The Existential Function",
            "Using Native Driver for Animated",
            "Right-to-Left Layout Support For React Native Apps",
            "Dive into React Native Performance",
            "Introducing Hot Reloading",
            "Making React Native apps accessible"
          ],
          "permalink": "/blog/tags/engineering"
        },
        "showcase": {
          "name": "showcase",
          "items": ["Built with React Native - The Build.com app"],
          "permalink": "/blog/tags/showcase"
        },
        "videos": {
          "name": "videos",
          "items": ["Expo Talks: Adam on Unraveling Navigation"],
          "permalink": "/blog/tags/videos"
        },
        "events": {
          "name": "events",
          "items": ["San Francisco Meetup Recap"],
          "permalink": "/blog/tags/events"
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "mdx",
        "permalink": "/help",
        "source": "@site/src/pages/help.md"
      },
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "jsx",
        "permalink": "/showcase",
        "source": "@site/src/pages/showcase.js"
      },
      {
        "type": "jsx",
        "permalink": "/versions",
        "source": "@site/src/pages/versions.js"
      },
      {
        "type": "jsx",
        "permalink": "/dist/js/main.min",
        "source": "@site/src/pages/dist/js/main.min.js"
      }
    ]
  },
  "docusaurus-plugin-debug": {
    "default": null
  },
  "docusaurus-theme-classic": {
    "default": null
  },
  "docusaurus-theme-search-algolia": {
    "default": null
  },
  "docusaurus-plugin-sass": {
    "default": null
  },
  "undefined": {
    "default": null
  }
}
